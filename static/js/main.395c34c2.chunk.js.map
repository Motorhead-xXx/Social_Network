{"version":3,"sources":["components/Profile/myPosts/Post/Post.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","redux/userReducer.ts","components/Header/Header.tsx","components/Navbar/SideBar/Sidebar.tsx","redux/profile-reducer.tsx","redux/dialogs-reduser.tsx","redux/sidebar-reducer.tsx","redux/redux-store.ts","components/Navbar/Navbar.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","images/userImages.png","components/Users/Users.tsx","images/239.svg","components/common/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/myPosts/Post/Post.tsx","components/Profile/myPosts/MyPosts.tsx","components/Profile/myPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","App.tsx","index.tsx"],"names":["module","exports","ACTIONS_TYPE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","style","header","src","Sidebar","props","image","sidebarImg","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USERS_PROFILE","initialState","postData","id","message","likeCount","newPostText","profile","UPDATE_NEW_MESSAGE_TEXT","SEND_MESSAGE","dialogsData","name","messagesData","newMessageText","dialogReducer","state","action","type","newText","body","imagesData","sidebarReducer","users","pageSize","totalUserCount","currentPage","isFetching","rootReducer","combineReducers","profilePage","Date","getTime","postText","dialogPage","sidebar","usersPage","FOLLOW","map","m","userID","followed","UNFOLLOW","SET_USERS","SET_CURRENT","page","SET_TOTAL_COUNT","totalCount","TOGGLE_FETCHING","store","createStore","window","Navbar","sidebarElements","getState","item","nav","to","activeClassName","active","friendsSidebar","DialogItem","path","containerDialog","dialogsStyle","imageDialog","Message","messageStyle","wrapper_style","wrapper","Dialogs","dialogsElements","dialog","messagesElements","messages","newMessageBody","onSendMessageClick","dialogs","dialogsItem","buttonMessage","onChange","event","target","value","onNewMessageChange","onKeyPress","charCode","placeholder","textArea","onClick","DialogsContainer","connect","dispatch","Users","photos","small","userImages","s","userPhoto","unfollow","follow","status","Preloader","preloader","UsersContainer","this","toggleFetching","axios","get","response","setUsers","data","items","setTotalUsersCount","pageNumber","setCurrentPage","pagesCount","Math","ceil","pages","i","push","p","selectedPage","onPageChanged","React","Component","ProfileInfo","img","fullName","toLocaleUpperCase","contacts","instagram","vk","github","lookingForAJob","lookingForAJobDescription","Post","messagePost","likeType","countLike","MyPosts","postsElements","post","newPostElement","createRef","addPosts","text","current","onPostChange","ref","posts","MyPostsContainer","Profile","ProfileContainer","setUsersProfile","App","exact","render","rerenderEntireTree","ReactDOM","document","getElementById","subscribe"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,QAAU,sBAAsB,KAAO,mBAAmB,YAAc,0BAA0B,UAAY,wBAAwB,SAAW,yB,mBCAnKD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,aAAe,8B,mBCAtED,EAAOC,QAAU,CAAC,OAAS,yB,iFCA3BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,aAAe,8BAA8B,OAAS,wBAAwB,QAAU,yBAAyB,cAAgB,+BAA+B,aAAe,8BAA8B,YAAc,6BAA6B,cAAgB,+BAA+B,SAAW,4B,kBCAvbD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,uBAAuB,eAAiB,+BAA+B,WAAa,2BAA2B,gBAAkB,kC,uCCClN,ICFYC,EDcGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,yEEACQ,EANA,WACX,OAAO,wBAAQC,UAAWC,IAAMC,OAAzB,SACH,qBAAKC,IAAI,+D,gBCaFC,EAXC,SAACC,GACb,OACQ,8BACI,8BACI,qBAAKF,IAAKE,EAAMC,MAAON,UAAWC,IAAMM,kB,uBCXtDC,EAAW,WACXC,EAAuB,uBACvBC,EAAoB,oBAmCtBC,EAAmC,CACnCC,SAAU,CACN,CAACC,GAAI,EAAGC,QAAS,UAAWC,UAAW,IACvC,CAACF,GAAI,EAAGC,QAAS,WAAYC,UAAW,IACxC,CAACF,GAAI,EAAGC,QAAS,mBAAoBC,UAAW,MAEpDC,YAAa,GACbC,QAAS,MC5CPC,EAA0B,0BAC1BC,EAAe,gBAkBjBR,EAAkC,CAClCS,YAAa,CACT,CACIP,GAAI,EACJQ,KAAM,SACNf,MAAO,uGAEX,CACIO,GAAI,EACJQ,KAAM,QACNf,MAAO,2EAEX,CAACO,GAAI,EAAGQ,KAAM,QAASf,MAAO,oEAC9B,CACIO,GAAI,EACJQ,KAAM,SACNf,MAAO,sGAEX,CACIO,GAAI,EACJQ,KAAM,SACNf,MAAO,gFAGfgB,aAAc,CACV,CAACT,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,6BACjB,CAACD,GAAI,EAAGC,QAAS,SACjB,CAACD,GAAI,EAAGC,QAAS,YACjB,CAACD,GAAI,EAAGC,QAAS,aAErBS,eAAgB,IAqCLC,EAlCO,WAAmE,IAAlEC,EAAiE,uDAAtCd,EAAce,EAAwB,uCACpF,OAAQA,EAAOC,MACX,KAAKT,EACD,OAAO,2BACAO,GADP,IAEIF,eAAgBG,EAAOE,UAG/B,KAAKT,EACD,IAAIU,EAAOJ,EAAMF,eACjB,MAAa,KAATM,EACO,2BACAJ,GADP,IAEIF,eAAgB,GAChBD,aAAa,GAAD,mBAAMG,EAAMH,cAAZ,CAA0B,CAACT,GAAI,EAAGC,QAASe,OAGpDJ,EAGf,QACI,OAAOA,ICnEfd,EAAmC,CACnCmB,WAAY,CACR,CAACxB,MAAO,uGACR,CAACA,MAAO,2EACR,CAACA,MAAO,oEACR,CAACA,MAAO,sGACR,CAACA,MAAO,iFAUDyB,EANQ,WAAoE,IAAnEN,EAAkE,uDAAtCd,EAChD,OAAOc,I,SLlBCpC,K,sBAAAA,E,0BAAAA,E,4BAAAA,E,gCAAAA,E,wCAAAA,E,yCAAAA,M,KAwBZ,IAAIsB,EAAe,CACfqB,MAAO,GACPC,SAAU,IACVC,eAAgB,EAChBC,YAAa,EACbC,YAAY,GMvBZC,EAAcC,YAAgB,CAC9BC,YHwC0B,WAAoE,IAAnEd,EAAkE,uDAAtCd,EAAce,EAAwB,uCAC7F,OAAQA,EAAOC,MACX,KAAKnB,EACD,OAAO,2BACAiB,GADP,IAEIb,SAAS,CAAE,CAACC,IAAI,IAAI2B,MAAOC,UAAW3B,QAASW,EAAMT,YAAaD,UAAW,IAArE,mBAA4EU,EAAMb,WAC1FI,YAAa,KAGrB,KAAKP,EACD,OAAO,2BACAgB,GADP,IAEIT,YAAaU,EAAOgB,WAG5B,KAAKhC,EACD,OAAO,2BAAIe,GAAX,IAAkBR,QAASS,EAAOT,UAEtC,QACI,OAAOQ,IG1DfkB,WAAYnB,EACZoB,QAASb,EACTc,UNuBwB,WAAsF,IAArFpB,EAAoF,uDAA3Dd,EAAce,EAA6C,uCAC7G,OAAQA,EAAOC,MACX,KAAKtC,EAAayD,OACd,OAAO,2BAAIrB,GAAX,IAAkBO,MAAOP,EAAMO,MAAMe,KAAI,SAAAC,GAAC,OAAIA,EAAEnC,KAAOa,EAAOuB,OAAhB,2BAA6BD,GAA7B,IAAgCE,UAAU,IAAQF,OAEpG,KAAK3D,EAAa8D,SACd,OAAO,2BAAI1B,GAAX,IAAkBO,MAAOP,EAAMO,MAAMe,KAAI,SAAAC,GAAC,OAAIA,EAAEnC,KAAOa,EAAOuB,OAAhB,2BAA6BD,GAA7B,IAAgCE,UAAU,IAASF,OAErG,KAAK3D,EAAa+D,UACd,OAAO,2BAAI3B,GAAX,IAAkBO,MAAON,EAAOM,QAEpC,KAAK3C,EAAagE,YACd,OAAO,2BAAI5B,GAAX,IAAkBU,YAAaT,EAAO4B,OAE1C,KAAKjE,EAAakE,gBACd,OAAO,2BAAI9B,GAAX,IAAkBS,eAAgBR,EAAO8B,aAE7C,KAAKnE,EAAaoE,gBACd,OAAO,2BAAIhC,GAAX,IAAkBW,WAAYV,EAAOU,aAEzC,QACI,OAAOX,MMxCNiC,EAAQC,YAAYtB,GAGjCuB,OAAOF,MAAOA,ECVd,IAmCeG,EAnCA,WAEb,IAAIC,EAAkBJ,EAAMK,WAAWnB,QAAQd,WAAWiB,KAAI,SAACiB,GAAD,OAAU,cAAC,EAAD,CAAS1D,MAAO0D,EAAK1D,WAE3F,OACI,sBAAKN,UAAWC,IAAMgE,IAAtB,UACI,qBAAKjE,UAAWC,IAAM+D,KAAtB,SACI,cAAC,IAAD,CAASE,GAAG,WAAWC,gBAAiBlE,IAAMmE,OAA9C,wBAEJ,qBAAKpE,UAAWC,IAAM+D,KAAtB,SACI,cAAC,IAAD,CAASE,GAAG,WAAWC,gBAAiBlE,IAAMmE,OAA9C,wBAEJ,qBAAKpE,UAAWC,IAAM+D,KAAtB,SACI,cAAC,IAAD,CAASE,GAAG,SAASC,gBAAiBlE,IAAMmE,OAA5C,qBAEJ,qBAAKpE,UAAWC,IAAM+D,KAAtB,SACI,uCAEJ,qBAAKhE,UAAWC,IAAM+D,KAAtB,SACI,wCAEJ,qBAAKhE,UAAWC,IAAM+D,KAAtB,SACI,2CAGJ,sBAAKhE,UAAWC,IAAMoE,eAAtB,UACA,0CACD,qBAAKrE,UAAWC,IAAM6D,gBAAtB,SAAwCA,W,uBCXpCQ,EAbI,SAACjE,GAChB,IAAMkE,EAAO,YAAclE,EAAMQ,GACjC,OACI,qBAAKb,UAAWC,IAAMuE,gBAAtB,SAEI,eAAC,IAAD,CAASN,GAAIK,EAAMJ,gBAAiBlE,IAAMmE,OAAQpE,UAAWC,IAAMwE,aAAnE,UACK,qBAAKtE,IAAKE,EAAMC,MAAON,UAAWC,IAAMyE,cACzC,oCAAOrE,EAAMgB,cCSdsD,EAjBwB,SAACtE,GACpC,OACI,sBAAKL,UAAWC,IAAM2E,aAAtB,UAEI,qBAAK5E,UAAWC,IAAM4E,gBAGtB,qBAAK7E,UAAWC,IAAM6E,QAAtB,SAEC,gCAAMzE,EAAMS,QAAZ,aCsCEiE,MAjDf,SAAkB1E,GAGd,IAAI2E,EAAkB3E,EAAMsC,WAAWvB,YAAY2B,KAAI,SAAAkC,GAAM,OAAI,cAAC,EAAD,CAA4B3E,MAAO2E,EAAO3E,MAAOe,KAAM4D,EAAO5D,KAC7DR,GAAIoE,EAAOpE,IADKoE,EAAOpE,OAGrFqE,EAAmB7E,EAAMsC,WAAWrB,aAAayB,KAAI,SAAAoC,GAAQ,OAAI,cAAC,EAAD,CAA2BrE,QAASqE,EAASrE,SAA/BqE,EAAStE,OAExFuE,EAAiB/E,EAAMsC,WAAWpB,eAElC8D,EAAqB,WACrBhF,EAAMgF,mBAAmBD,IAc7B,OACI,sBAAKpF,UAAWC,IAAMqF,QAAtB,UACI,qBAAKtF,UAAWC,IAAMsF,YAAtB,SAEKP,IAIL,sBAAKhF,UAAWC,IAAMkF,SAAtB,UACKD,EACD,sBAAKlF,UAAWC,IAAMuF,cAAtB,UACI,0BAAUC,SAvBD,SAACC,GACtB,IAAI7D,EAAO6D,EAAMC,OAAOC,MACxBvF,EAAMwF,mBAAmBhE,IAqB2BiE,WAlBvC,SAACJ,GACS,KAAnBA,EAAMK,UACNV,KAgBsEW,YAAY,qBAChEJ,MAAOR,EAAgBpF,UAAWC,IAAMgG,WAClD,wBAAQC,QAASb,EAAjB,8E,QCXLc,EADUC,aAhBH,SAAC3E,GACnB,MAAO,CACHkB,WAAYlB,EAAMkB,eAGD,SAAC0D,GACtB,MAAO,CACHhB,mBAAoB,SAACD,GACjBiB,EPwD4C,CAAC1E,KAAMR,EAAcS,QOxDrCwD,KAEhCS,mBAAoB,SAAChE,GACjBwE,EPwDqD,CAAC1E,KAAMT,EAAyBU,QOxDhDC,QAKxBuE,CAA6CrB,G,kECjCvD,MAA0B,uCCY5BuB,EAAQ,SAACjG,GAGlB,OAEI,8BACKA,EAAM2B,MAAMe,KAAI,SAAAC,GAAC,OAAI,gCAClB,iCACI,8BACI,qBAAK7C,IAAwB,OAAnB6C,EAAEuD,OAAOC,MAAiBxD,EAAEuD,OAAOC,MAAQC,EAAYzG,UAAW0G,IAAEC,cAElF,8BACK3D,EAAEE,SACG,wBAAQgD,QAAS,WACf7F,EAAMuG,SAAS5D,EAAEnC,KADnB,sBAGA,wBAAQqF,QAAS,WACf7F,EAAMwG,OAAO7D,EAAEnC,KADjB,yBAMV,iCACA,iCACM,8BAAMmC,EAAE3B,OACV,8BAAM2B,EAAE8D,YAEZ,iCACI,8BAAM,oBACN,8BAAM,+BAvBc9D,EAAEnC,UClB/B,MAA0B,gCCG5BkG,EAAY,WACtB,OAAO,oCAAM,qBAAK5G,IAAK6G,QCuCpBC,G,uKAEF,WAAqB,IAAD,OAChBC,KAAK7G,MAAM8G,gBAAe,GAC1BC,IAAMC,IAAN,kEAA6FH,KAAK7G,MAAM8B,YAAxG,kBAA6H+E,KAAK7G,MAAM4B,WAAYxC,MAAK,SAAA6H,GACrJ,EAAKjH,MAAMkH,SAASD,EAASE,KAAKC,OAClC,EAAKpH,MAAMqH,mBAAmBJ,EAASE,KAAKhE,YAC5C,EAAKnD,MAAM8G,gBAAe,Q,2BAIlC,SAAcQ,GAAqB,IAAD,OAC9BT,KAAK7G,MAAMuH,eAAeD,GAC1BT,KAAK7G,MAAM8G,gBAAe,GAC1BC,IAAMC,IAAN,kEAA6FM,EAA7F,kBAAiHT,KAAK7G,MAAM4B,WAAYxC,MAAK,SAAA6H,GACzI,EAAKjH,MAAM8G,gBAAe,GAC1B,EAAK9G,MAAMkH,SAASD,EAASE,KAAKC,Y,oBAI1C,WAII,IAJM,IAAD,OAEDI,EAAaC,KAAKC,KAAKb,KAAK7G,MAAM6B,eAAiBgF,KAAK7G,MAAM4B,UAC9D+F,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAME,KAAKD,GAEf,OACI,gCACKD,EAAMjF,KAAI,SAAAoF,GAAC,OACR,sBAAMnI,UAAW,EAAKK,MAAM8B,cAAgBgG,EAAIzB,IAAE0B,aAAe,GAC3DlC,QAAW,WAAO,EAAKmC,cAAcF,IAD3C,SACmDA,OAExD,qCACKjB,KAAK7G,MAAM+B,WAAY,cAAC,EAAD,IAClB,KACN,cAAC,EAAD,CACIH,SAAUiF,KAAK7G,MAAM4B,SACrBD,MAAOkF,KAAK7G,MAAM2B,MAClB4E,SAAUM,KAAK7G,MAAMuG,SACrBC,OAAQK,KAAK7G,MAAMwG,mB,GAxCbyB,IAAMC,WAmFpBnC,gBAlCO,SAAC3E,GACnB,MAAO,CACHO,MAAOP,EAAMoB,UAAUb,MACvBC,SAAUR,EAAMoB,UAAUZ,SAC1BC,eAAgBT,EAAMoB,UAAUX,eAChCC,YAAaV,EAAMoB,UAAUV,YAC7BC,WAAYX,EAAMoB,UAAUT,cA4BI,CAACyE,OhBhEnB,SAAC5D,GAAD,MAAqB,CAACtB,KAAMtC,EAAayD,OAAQG,WgBgEtB2D,ShB7DzB,SAAC3D,GAAD,MAAqB,CAACtB,KAAMtC,EAAa8D,SAAUF,OAAQA,IgB6DxBsE,ShB1DnC,SAACvF,GAAD,MAAyB,CAACL,KAAMtC,EAAa+D,UAAWpB,UgB0DX4F,ehBvDvC,SAACtE,GAAD,MAAmB,CAAC3B,KAAMtC,EAAagE,YAAaC,SgBuDEoE,mBhBpDlD,SAAClE,GAAD,MAAyB,CAAC7B,KAAMtC,EAAakE,gBAAiBC,egBoDO2D,ehBjDzE,SAAC/E,GAAD,MAA0B,CAACT,KAAMtC,EAAaoE,gBAAiBrB,gBgBiD9EgE,CAAyGa,I,oBC/FzGuB,GAvBK,SAACnI,GAAqC,IAAD,cACrD,OACI,gCACI,8BACI,qBAAKL,UAAWC,KAAMwI,IAAKtI,IAAI,4DAEnC,8BACI,gCACI,qBAAKA,IAAG,UAAEE,EAAMY,eAAR,aAAE,EAAesF,OAAOC,QAChC,wCAAMnG,EAAMY,eAAZ,aAAM,EAAeyH,SAASC,sBAC9B,wCAAMtI,EAAMY,eAAZ,aAAM,EAAe2H,SAASC,UAAUF,sBACxC,wCAAMtI,EAAMY,eAAZ,aAAM,EAAe2H,SAASE,GAAGH,sBACjC,wCAAMtI,EAAMY,eAAZ,aAAM,EAAe2H,SAASG,OAAOJ,sBACrC,6DAA6B,UAAAtI,EAAMY,eAAN,eAAe+H,iBAAkB,SAC9D,oEAA2B3I,EAAMY,eAAjC,aAA2B,EAAegI,0BAA0BN,uBACxF,gC,wCCIeO,GAlBF,SAAC7I,GACV,OACI,sBAAKL,UAAWC,KAAM+D,KAAtB,UACI,qBAAK7D,IAAI,kEACT,sBAAKH,UAAWC,KAAMkJ,YAAtB,UACK9I,EAAMS,QAEP,qBAAKd,UAAWC,KAAMmJ,SAAtB,SACI,sBAAMpJ,UAAWC,KAAMoJ,UAAvB,SAAmChJ,EAAMU,qBC8B9CuI,GA1CC,SAACjJ,GAEb,IAAIkJ,EAAgBlJ,EAAMkC,YAAY3B,SAASmC,KAAI,SAAAyG,GAAI,OAAI,cAAC,GAAD,CAAM1I,QAAS0I,EAAK1I,QAASC,UAAWyI,EAAKzI,eAEpG0I,EAAiBnB,IAAMoB,YAEvBC,EAAW,WAAO,IAAD,EACbC,EAAI,UAAGH,EAAeI,eAAlB,aAAG,EAAwBjE,MACpCgE,GAAQvJ,EAAMsJ,SAASC,IAiB1B,OACI,gCACI,4CACA,8BACI,0BAAU9D,WAVL,SAACJ,GACS,KAAnBA,EAAMK,UACN4D,KAQoClE,SAhBzB,WAAO,IAAD,EACjBmE,EAAI,UAAGH,EAAeI,eAAlB,aAAG,EAAwBjE,MACnCgE,GAAQvJ,EAAMyJ,aAAaF,IAcqCG,IAAKN,EAAgB7D,MAAOvF,EAAMkC,YAAYvB,gBAE1G,8BACI,wBAAQkF,QAASyD,EAAjB,wBAGJ,qBAAK3J,UAAWC,KAAM+J,MAAtB,SACKT,QCNFU,GAFU7D,aAfH,SAAC3E,GACnB,MAAO,CACHc,YAAad,EAAMc,gBAGF,SAAC8D,GACtB,MAAO,CACHsD,SAAU,SAACC,GACPA,GAAQvD,EjB+C4B,CAAC1E,KAAMnB,EAAUkC,SiB/C1BkH,KAE/BE,aAAc,SAACF,GACXA,GAAQvD,EjB+CsC,CAAC1E,KAAMlB,EAAsBiC,SiB/CtCkH,QAIxBxD,CAA6CkD,ICxBzDY,GAAU,SAAC7J,GAEpB,OAAO,gCACH,cAAC,GAAD,CAAaY,QAASZ,EAAMY,UAC5B,cAAC,GAAD,QC0BFkJ,G,uKACF,WAAqB,IAAD,OAChB/C,IAAMC,IAAN,0DACK5H,MAAK,SAAA6H,GACF,EAAKjH,MAAM+J,gBAAgB9C,EAASE,W,oBAKhD,WACI,OACI,8BACI,cAAC,GAAD,CAASvG,QAAWiG,KAAK7G,MAAMY,gB,GAZhBqH,IAAMC,WAuBtBnC,gBANO,SAAC3E,GACnB,MAAO,CACHR,QAASQ,EAAMc,YAAYtB,WAIK,CAACmJ,gBnBiBV,SAACnJ,GAAD,MAAgC,CAACU,KAAMjB,EAAmBO,amBjB1EmF,CAA6C+D,IC1B7CE,GAvBH,WACR,OACI,sBAAKrK,UAAU,cAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACI,cAAC,IAAD,CAAOsK,OAAK,EAAC/F,KAAM,kBAAmBgG,OAAQ,kBAAM,cAAC,IAAD,CAAUrG,GAAI,gBAElE,cAAC,IAAD,CAAOK,KAAK,WACLgG,OAAQ,kBAAM,cAAC,EAAD,OAErB,cAAC,IAAD,CAAOhG,KAAK,WACLgG,OAAQ,kBAAM,cAAC,GAAD,OAErB,cAAC,IAAD,CAAOhG,KAAK,SACLgG,OAAQ,kBAAM,cAAC,GAAD,cCnBjCC,GAAqB,WACrBC,IAASF,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAU7G,MAAOA,EAAjB,SACI,cAAC,GAAD,QAEUgH,SAASC,eAAe,UAGlDH,KAEA9G,EAAMkH,WAAU,WACZJ,QAMJlL,M","file":"static/js/main.395c34c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__2y9CA\",\"item\":\"Post_item__2e1ow\",\"messagePost\":\"Post_messagePost__2tAxE\",\"countLike\":\"Post_countLike__3jVtI\",\"likeType\":\"Post_likeType__2tFvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1aUe3\",\"selectedPage\":\"Users_selectedPage__e5Bse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__xCRiM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2FJyO\",\"dialogsItem\":\"Dialogs_dialogsItem__MSxD1\",\"messages\":\"Dialogs_messages__2CafO\",\"dialogsStyle\":\"Dialogs_dialogsStyle__13RnD\",\"active\":\"Dialogs_active__3jWpU\",\"wrapper\":\"Dialogs_wrapper__1ANx0\",\"wrapper_style\":\"Dialogs_wrapper_style__3uhjr\",\"messageStyle\":\"Dialogs_messageStyle__1Wb6M\",\"imageDialog\":\"Dialogs_imageDialog__DoiRT\",\"buttonMessage\":\"Dialogs_buttonMessage__11m31\",\"textArea\":\"Dialogs_textArea__TqoYL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3gxxt\",\"item\":\"Navbar_item__1hAV5\",\"active\":\"Navbar_active__WDzq8\",\"friendsSidebar\":\"Navbar_friendsSidebar__YQ87y\",\"sidebarImg\":\"Navbar_sidebarImg__3zP9Q\",\"sidebarElements\":\"Navbar_sidebarElements__3eZXY\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export enum ACTIONS_TYPE {\r\n    FOLLOW = 'Users/FOLLOW',\r\n    UNFOLLOW = 'Users/UNFOLLOW',\r\n    SET_USERS = 'Users/SET_USERS',\r\n    SET_CURRENT = 'Users/SET_CURRENT',\r\n    SET_TOTAL_COUNT = 'Users/SET_TOTAL_COUNT',\r\n    TOGGLE_FETCHING= 'Users/CHANGE_FETCHING',\r\n}\r\n\r\nexport type usersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string | null\r\n    photos: { small: string, large: string }\r\n}\r\ntype usersReduceType = {\r\n    users: usersType[],\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching:boolean\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n}\r\n\r\n\r\nexport const usersReducer = (state: usersReduceType = initialState, action: ActionUsersType): usersReduceType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW: {\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: true} : m)}\r\n        }\r\n        case ACTIONS_TYPE.UNFOLLOW: {\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: false} : m)}\r\n        }\r\n        case ACTIONS_TYPE.SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case ACTIONS_TYPE.SET_CURRENT: {\r\n            return {...state, currentPage: action.page}\r\n        }\r\n        case ACTIONS_TYPE.SET_TOTAL_COUNT:{\r\n            return {...state, totalUserCount: action.totalCount}\r\n        }\r\n        case ACTIONS_TYPE.TOGGLE_FETCHING:{\r\n            return {...state, isFetching: action.isFetching }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ActionUsersType = followACType | unfollowACType | setUsersType | setCurrentPageType\r\n    | setTotalUsersCountType| toggleFetchingType\r\n\r\nexport type followACType = ReturnType<typeof follow>\r\nexport const follow = (userID: number) => ({type: ACTIONS_TYPE.FOLLOW, userID} as const)\r\n\r\nexport type unfollowACType = ReturnType<typeof unfollow>\r\nexport const unfollow = (userID: number) => ({type: ACTIONS_TYPE.UNFOLLOW, userID: userID} as const)\r\n\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: usersType[]) => ({type: ACTIONS_TYPE.SET_USERS, users} as const)\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (page: number) => ({type: ACTIONS_TYPE.SET_CURRENT, page} as const)\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: ACTIONS_TYPE.SET_TOTAL_COUNT, totalCount} as const)\r\n\r\nexport type toggleFetchingType = ReturnType<typeof toggleFetching>\r\nexport const toggleFetching = (isFetching: boolean) => ({type: ACTIONS_TYPE.TOGGLE_FETCHING, isFetching} as const)","import React from 'react';\r\nimport style from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return <header className={style.header}>\r\n        <img src='http://pngimg.com/uploads/megaphone/megaphone_PNG94.png'/>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from '../Navbar.module.css';\r\n\r\ntype sidebarType = {\r\n    image: string\r\n}\r\n\r\nconst Sidebar = (props:sidebarType) => {\r\n    return (\r\n            <div>\r\n                <div >\r\n                    <img src={props.image} className={style.sidebarImg}/>\r\n                </div>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Sidebar;","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USERS_PROFILE = 'SET-USERS-PROFILE'\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\ntype postDataType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type profileReducerType = {\r\n    postData: Array<postDataType>\r\n    newPostText: string\r\n    profile: ProfileType|null\r\n}\r\n\r\nlet initialState: profileReducerType = {\r\n    postData: [\r\n        {id: 1, message: 'Sosiska', likeCount: 23},\r\n        {id: 2, message: 'REDDISKA', likeCount: 77},\r\n        {id: 3, message: 'Do you want me? ', likeCount: 107},\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n}\r\n\r\nexport const profileReduser = (state: profileReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [{id: new Date().getTime(), message: state.newPostText, likeCount: 0}, ...state.postData],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.postText\r\n            }\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionTypes = addPostACType | newTextACType | setUsersProfileType\r\n\r\nexport type addPostACType = ReturnType<typeof addPostAC>\r\nexport const addPostAC = (postText: string) => ({type: ADD_POST, postText} as const)\r\n\r\nexport type newTextACType = ReturnType<typeof updateNewPostTextAC>\r\nexport const updateNewPostTextAC = (postText: string) => ({type: UPDATE_NEW_POST_TEXT, postText} as const)\r\n\r\nexport type setUsersProfileType = ReturnType<typeof setUsersProfile>\r\nexport const setUsersProfile = (profile: ProfileType|null) => ({type: SET_USERS_PROFILE, profile} as const)\r\n","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGES';\r\n\r\ntype dialogsDataType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\ntype messagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type dialogReducerType = {\r\n    dialogsData: Array<dialogsDataType>\r\n    messagesData: Array<messagesDataType>\r\n    newMessageText: string\r\n}\r\n\r\nlet initialState: dialogReducerType = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Sveta\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"\r\n        },\r\n        {id: 3, name: \"Sasha\", image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {\r\n            id: 4,\r\n            name: \"Viktor\",\r\n            image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Valera\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your it-kamasutra?\"},\r\n        {id: 3, message: \"yo Hi\"},\r\n        {id: 4, message: \"Hello Hi\"},\r\n        {id: 5, message: \"Yo yo yo\"},\r\n    ],\r\n    newMessageText: '',\r\n}\r\n\r\nconst dialogReducer = (state: dialogReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            };\r\n        }\r\n        case SEND_MESSAGE: {\r\n            let body = state.newMessageText;\r\n            if (body !== \"\") {\r\n                return {\r\n                    ...state,\r\n                    newMessageText: \"\",\r\n                    messagesData: [...state.messagesData, {id: 6, message: body}]\r\n                }\r\n            } else {\r\n                return state\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype ActionTypes = messageAC | updateMessageAC\r\nexport type messageAC = ReturnType<typeof sendMessageCreator>\r\nexport const sendMessageCreator = (newText: string) => ({type: SEND_MESSAGE, newText} as const)\r\n\r\nexport type updateMessageAC = ReturnType<typeof updateNewMessageBodyCreator>\r\nexport const updateNewMessageBodyCreator = (newText: string) => ({type: UPDATE_NEW_MESSAGE_TEXT, newText} as const)\r\n\r\n\r\nexport default dialogReducer;","type imagesDataType = {\r\n    image: string\r\n}\r\nexport type sidebarReducerType = {\r\n    imagesData: Array<imagesDataType>\r\n}\r\n\r\nlet initialState: sidebarReducerType = {\r\n    imagesData: [\r\n        {image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state: sidebarReducerType = initialState, action: ActionTypes) => {\r\n    return state\r\n}\r\n\r\ntype ActionTypes = {}\r\n\r\nexport default sidebarReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport {profileReduser} from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialogs-reduser\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport {usersReducer} from \"./userReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReduser,\r\n    dialogPage: dialogReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer)\r\n\r\n//@ts-ignore\r\nwindow.store= store","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"./SideBar/Sidebar\";\r\nimport {store} from \"../../redux/redux-store\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n  let sidebarElements = store.getState().sidebar.imagesData.map((item) => <Sidebar image={item.image}/>)\r\n\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/profile\" activeClassName={style.active}> Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/users\" activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n\r\n            <div className={style.friendsSidebar}>\r\n            <h3>FRIENDS </h3>\r\n           <div className={style.sidebarElements}>{sidebarElements}</div>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype dialogsType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\n\r\nconst DialogItem = (props:dialogsType) => {\r\n    const path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={style.containerDialog}>\r\n\r\n            <NavLink to={path} activeClassName={style.active} className={style.dialogsStyle}>\r\n                 <img src={props.image} className={style.imageDialog}/>\r\n                <div> {props.name}</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\n\r\n\r\ntype messageType = {\r\n    message: string\r\n}\r\n\r\n\r\nconst Message: React.FC<messageType> = (props) => {\r\n    return (\r\n        <div className={style.messageStyle}>\r\n\r\n            <div className={style.wrapper_style}>\r\n            </div>\r\n\r\n            <div className={style.wrapper}>\r\n\r\n             <div>{props.message} </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Message;","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogPropsType} from \"./DialogsContainer\";\r\n\r\n\r\nfunction Dialogs (props: DialogPropsType) {\r\n\r\n\r\n    let dialogsElements = props.dialogPage.dialogsData.map(dialog => <DialogItem key={dialog.id} image={dialog.image} name={dialog.name}\r\n                                                                      id={dialog.id}/>)\r\n\r\n    let messagesElements = props.dialogPage.messagesData.map(messages => <Message key={messages.id} message={messages.message}/>)\r\n\r\n    let newMessageBody = props.dialogPage.newMessageText;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.onSendMessageClick(newMessageBody);\r\n    }\r\n    let onNewMessageChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = event.target.value;\r\n        props.onNewMessageChange(body);\r\n    }\r\n\r\n    const keyClick = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.charCode === 13) {\r\n            onSendMessageClick()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n\r\n                {dialogsElements}\r\n\r\n\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <div className={style.buttonMessage}>\r\n                    <textarea onChange={onNewMessageChange} onKeyPress={keyClick} placeholder=\"Enter your message\"\r\n                              value={newMessageBody} className={style.textArea}/>\r\n                    <button onClick={onSendMessageClick}>Отправить</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {dialogReducerType, sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype MapStateDialogType = {\r\n    dialogPage: dialogReducerType\r\n}\r\ntype MapDispatchDialogType = {\r\n    onSendMessageClick: (newMessageBody: string) => void\r\n    onNewMessageChange: (body: string) => void\r\n}\r\nexport type DialogPropsType = MapStateDialogType & MapDispatchDialogType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogPage: state.dialogPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        onSendMessageClick: (newMessageBody: string) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n        onNewMessageChange: (body: string) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\nexport default DialogsContainer;","export default __webpack_public_path__ + \"static/media/userImages.027e123a.png\";","import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport userImages from \"../../images/userImages.png\"\r\nimport {usersType} from \"../../redux/userReducer\";\r\n\r\ntype UsersType = {\r\n    pageSize: number\r\n    users: usersType[]\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {props.users.map(m => <div key={m.id}>\r\n                <span>\r\n                    <div>\r\n                        <img src={m.photos.small !== null ? m.photos.small : userImages} className={s.userPhoto}/>\r\n                    </div>\r\n                    <div>\r\n                        {m.followed\r\n                            ? <button onClick={() => {\r\n                                props.unfollow(m.id)\r\n                            }}>Unfollow</button>\r\n                            : <button onClick={() => {\r\n                                props.follow(m.id)\r\n                            }}>Follow</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                          <div>{m.name}</div>\r\n                        <div>{m.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"m.location.city\"}</div>\r\n                        <div>{\"m.location.country\"}</div>\r\n                    </span>\r\n                </span>\r\n                </div>)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/239.ccdadae0.svg\";","import React from \"react\";\r\nimport preloader from \"../../images/239.svg\";\r\n\r\nexport const Preloader = () => {\r\n   return <div> <img src={preloader}/></div>\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport {Users} from \"./Users\";\r\nimport s from \"./Users.module.css\";\r\nimport {Preloader} from \"../common/Preloader\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleFetching,\r\n    unfollow,\r\n    usersType\r\n} from \"../../redux/userReducer\";\r\n\r\ntype MapStateUserType = {\r\n    users: usersType[]\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\nexport type MapDispatchPropsType = {\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setUsers: (users: usersType[]) => void\r\n    setCurrentPage: (numberPage: number) => void\r\n    setTotalUsersCount: (totalUsersCount: number) => void\r\n    toggleFetching: (isFetching:boolean) =>void\r\n}\r\ntype UsersPropsType = MapStateUserType&MapDispatchPropsType\r\n\r\n    type GetTypeResponseUserAPI = {\r\n    items: usersType[]\r\n    totalCount: number\r\n    error: null\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType,{}> {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleFetching(true);\r\n        axios.get<GetTypeResponseUserAPI>(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items)\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n            this.props.toggleFetching(false);\r\n        });\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleFetching(true)\r\n        axios.get<GetTypeResponseUserAPI>(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.toggleFetching(false)\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let pagesCount = Math.ceil(this.props.totalUserCount / this.props.pageSize)\r\n        let pages = []\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n        return (\r\n            <div>\r\n                {pages.map(p =>\r\n                    <span className={this.props.currentPage === p ? s.selectedPage : \"\"}\r\n                          onClick ={ () => {this.onPageChanged(p) } }>{p}</span>)}\r\n\r\n               <>\r\n                   {this.props.isFetching? <Preloader/>\r\n                       : null}\r\n                   <Users\r\n                       pageSize={this.props.pageSize}\r\n                       users={this.props.users}\r\n                       unfollow={this.props.unfollow}\r\n                       follow={this.props.follow}\r\n                   />\r\n               </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateUserType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n//     return {\r\n//         follow: (usersID: number) => {\r\n//             dispatch(followAC(usersID))\r\n//         },\r\n//\r\n//         unfollow: (usersID: number) => {\r\n//             dispatch(unfollowAC(usersID))\r\n//         },\r\n//         setUsers: (users: usersType[]) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (numberPage: number) => {\r\n//             dispatch(setCurrentPageAC(numberPage))\r\n//         },\r\n//         setTotalUsersCount: (totalUsersCount: number) => {\r\n//             dispatch(setTotalUsersCountAC(totalUsersCount))\r\n//         },\r\n//         toggleFetching: (isFetching: boolean) => {\r\n//             dispatch(toggleFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps, {follow, unfollow, setUsers, setCurrentPage,setTotalUsersCount,toggleFetching})(UsersContainer)\r\n","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\n\r\ntype ProfileInfoComponentType = {\r\n    profile: ProfileType|null\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoComponentType) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={style.img} src=\"https://lifeo.ru/wp-content/uploads/vesna-100-min.jpg\"/>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <img src={props.profile?.photos.small}/>\r\n                    <div>{props.profile?.fullName.toLocaleUpperCase()}</div>\r\n                    <div>{props.profile?.contacts.instagram.toLocaleUpperCase()}</div>\r\n                    <div>{props.profile?.contacts.vk.toLocaleUpperCase()}</div>\r\n                    <div>{props.profile?.contacts.github.toLocaleUpperCase()}</div>\r\n                    <div>{`looking for a job:  ${props.profile?.lookingForAJob && \"Yes\"}`}</div>\r\n                    <div>{`Job Description:  ${props.profile?.lookingForAJobDescription.toLocaleUpperCase()}`}</div>\r\n<br/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\n\r\nconst Post = (props: PropsType) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src=\"https://bizlit.com.ua/image/data/pictures/YeDYzSR-10apkm4.png\"/>\r\n            <div className={style.messagePost}>\r\n                {props.message}\r\n\r\n                <div className={style.likeType}>\r\n                    <span className={style.countLike}>{props.likeCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {KeyboardEvent} from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostPropsType} from \"./MyPostsContainer\";\r\n\r\nconst MyPosts = (props: PostPropsType) => {\r\n\r\n    let postsElements = props.profilePage.postData.map(post => <Post message={post.message} likeCount={post.likeCount}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let addPosts = () => {\r\n        let text = newPostElement.current?.value;\r\n       text && props.addPosts(text);\r\n        // let text = newPostElement.current?.value;\r\n        // text && props.dispatch(addPostActionCreator(text))\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current?.value;\r\n        text && props.onPostChange(text)\r\n        // text && props.dispatch(updateNewPostTextActionCreator(text))\r\n    }\r\n\r\n    const keyClick = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.charCode === 13) {\r\n            addPosts()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3> My posts </h3>\r\n            <div>\r\n                <textarea onKeyPress={keyClick} onChange={onPostChange} ref={newPostElement} value={props.profilePage.newPostText}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={addPosts}>Add post</button>\r\n            </div>\r\n\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostAC, profileReducerType, updateNewPostTextAC} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateProfileType = {\r\n    profilePage: profileReducerType\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPosts: (text: string) => void\r\n    onPostChange: (text: string) => void\r\n}\r\nexport type PostPropsType = MapStateProfileType & MapDispatchPropsType\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateProfileType => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPosts: (text: string) => {\r\n            text && dispatch(addPostAC(text));\r\n        },\r\n        onPostChange: (text: string) => {\r\n            text && dispatch(updateNewPostTextAC(text))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\n\r\ntype ProfileComponentType = {\r\n    profile: ProfileType|null\r\n}\r\n\r\nexport const Profile = (props:ProfileComponentType) => {\r\n\r\n    return <div>\r\n        <ProfileInfo profile={props.profile}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport {Profile} from \"./Profile\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {ProfileType, setUsersProfile} from \"../../redux/profile-reducer\";\r\n\r\ntype getProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType|null\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    setUsersProfile: (profile: getProfileType|null)=> void\r\n}\r\n\r\ntype PropsType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType>{\r\n    componentDidMount() {\r\n        axios.get<getProfileType>(`https://social-network.samuraijs.com/api/1.0/profile/2`)\r\n            .then(response=>{\r\n                this.props.setUsersProfile(response.data)\r\n                debugger\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile profile = {this.props.profile}/>\r\n            </div>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType):mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setUsersProfile}) (ProfileContainer);","import React from 'react';\r\nimport './App.css';\r\nimport Header from \"./components/Header/Header\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <Header/>\r\n            <Navbar />\r\n            <div className='app-wrapper-content'>\r\n                <Route exact path={'/Social_Network'} render={() => <Redirect to={\"/profile\"}/>}/>\r\n\r\n                <Route path=\"/dialogs\"\r\n                       render={() => <DialogsContainer/>}/>\r\n\r\n                <Route path=\"/profile\"\r\n                       render={() => <ProfileContainer/>}/>\r\n\r\n                <Route path=\"/users\"\r\n                       render={() => <UsersContainer/>}/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport React from \"react\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root')\n    );\n}\nrerenderEntireTree()\n\nstore.subscribe(()=>{\n    rerenderEntireTree()\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}