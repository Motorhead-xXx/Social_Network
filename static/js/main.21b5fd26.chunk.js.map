{"version":3,"sources":["reportWebVitals.ts","redux/dialogs-reduser.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","redux/user-reducer.ts","components/Dialogs/DialogsContainer.tsx","components/Navbar/SideBar/Sidebar.tsx","redux/profile-reducer.tsx","redux/sidebar-reducer.tsx","api/settingAPI.ts","redux/auth-reducer.ts","redux/redux-store.ts","components/Navbar/Navbar.tsx","components/Header/HeaderMenu.tsx","images/headerImages.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Users/Users.tsx","images/preloader.gif","components/common/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/myPosts/Post/Post.tsx","components/Profile/myPosts/MyPosts.tsx","components/Profile/myPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","App.tsx","index.tsx","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Profile/myPosts/Post/Post.module.css","components/Header/Header.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UPDATE_NEW_MESSAGE_TEXT","SEND_MESSAGE","initialState","dialogsData","id","name","image","messagesData","message","newMessageText","dialogReducer","state","action","type","newText","body","DialogItem","props","path","className","style","containerDialog","to","activeClassName","active","dialogsStyle","src","imageDialog","Message","messageStyle","wrapper_style","wrapper","Dialogs","ACTIONS_TYPE","dialogsElements","dialogPage","map","dialog","messagesElements","messages","newMessageBody","onSendMessageClick","dialogs","dialogsItem","buttonMessage","onChange","event","target","value","onNewMessageChange","onKeyPress","charCode","placeholder","textArea","onClick","DialogsContainer","connect","dispatch","Sidebar","sidebarImg","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USERS_PROFILE","postData","likeCount","newPostText","profile","imagesData","sidebarReducer","addressAPI","axios","create","withCredentials","baseURL","headers","userAPI","currentPage","pageSize","get","res","data","delete","post","users","totalUserCount","isFetching","followingProgress","setCurrentPage","page","SET_CURRENT","toggleFetching","TOGGLE_FETCHING","toggleFollowingProgress","userId","FOLLOWING_PROGRESS","SET_USER_DATA","SET_PHOTO","email","login","isAuth","photo","rootReducer","combineReducers","profilePage","Date","getTime","postText","sidebar","usersPage","FOLLOW","m","userID","followed","UNFOLLOW","SET_USERS","SET_TOTAL_COUNT","totalCount","filter","auth","store","createStore","applyMiddleware","thunkMiddleware","window","Navbar","sidebarElements","getState","item","nav","friendsSidebar","HeaderMenu","anchor","React","left","setState","toggleDrawer","open","key","Button","size","Menu","color","Drawer","onClose","Box","backgroundColor","height","sx","width","role","onKeyDown","List","ListItem","Header","AppBar","position","Toolbar","Typography","variant","component","flexGrow","s","photoHeader","headerImages","fontWeight","HeaderContainer","response","console","log","resultCode","setUsersDataAC","setPhotoLoginAC","photos","small","this","Component","Users","photoUser","f","notPhotoUser","usersDisplay","usersContainer","u","user","userPhoto","Avatar","fontSize","background","toUpperCase","span","disabled","some","unfollow","follow","Preloader","display","justifyContent","preloader","UsersContainer","getUsers","pageNumber","pagesCount","Math","ceil","paginator","Pagination","onPageChanged","count","shape","defaultPage","siblingCount","items","ProfileInfo","large","fullName","contacts","instagram","vk","github","lookingForAJob","lookingForAJobDescription","Post","messagePost","likeType","countLike","MyPosts","postsElements","newPostElement","createRef","addPosts","text","current","onPostChange","ref","posts","MyPostsContainer","Profile","ProfileContainer","match","params","setUsersProfile","WithUrlDataProfileContainer","withRouter","App","Grid","container","xs","border","exact","render","rerenderEntireTree","ReactDOM","document","getElementById","subscribe","module","exports"],"mappings":"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","file":"static/js/main.21b5fd26.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGES';\r\n\r\ntype dialogsDataType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\ntype messagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type dialogReducerType = {\r\n    dialogsData: Array<dialogsDataType>\r\n    messagesData: Array<messagesDataType>\r\n    newMessageText: string\r\n}\r\n\r\nlet initialState: dialogReducerType = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Sveta\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"\r\n        },\r\n        {id: 3, name: \"Sasha\", image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {\r\n            id: 4,\r\n            name: \"Viktor\",\r\n            image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Valera\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your it-kamasutra?\"},\r\n        {id: 3, message: \"yo Hi\"},\r\n        {id: 4, message: \"Hello Hi\"},\r\n        {id: 5, message: \"Yo yo yo\"},\r\n    ],\r\n    newMessageText: '',\r\n}\r\n\r\nconst dialogReducer = (state: dialogReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            };\r\n        }\r\n        case SEND_MESSAGE: {\r\n            let body = state.newMessageText;\r\n            if (body !== \"\") {\r\n                return {\r\n                    ...state,\r\n                    newMessageText: \"\",\r\n                    messagesData: [...state.messagesData, {id: 6, message: body}]\r\n                }\r\n            } else {\r\n                return state\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype ActionTypes = messageAC | updateMessageAC\r\nexport type messageAC = ReturnType<typeof sendMessageCreator>\r\nexport const sendMessageCreator = (newText: string) => ({type: SEND_MESSAGE, newText} as const)\r\n\r\nexport type updateMessageAC = ReturnType<typeof updateNewMessageBodyCreator>\r\nexport const updateNewMessageBodyCreator = (newText: string) => ({type: UPDATE_NEW_MESSAGE_TEXT, newText} as const)\r\n\r\n\r\nexport default dialogReducer;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype dialogsType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\n\r\nconst DialogItem = (props:dialogsType) => {\r\n    const path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={style.containerDialog}>\r\n\r\n            <NavLink to={path} activeClassName={style.active} className={style.dialogsStyle}>\r\n                 <img src={props.image} className={style.imageDialog}/>\r\n                <div> {props.name}</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\n\r\n\r\ntype messageType = {\r\n    message: string\r\n}\r\n\r\n\r\nconst Message: React.FC<messageType> = (props) => {\r\n    return (\r\n        <div className={style.messageStyle}>\r\n\r\n            <div className={style.wrapper_style}>\r\n            </div>\r\n\r\n            <div className={style.wrapper}>\r\n\r\n             <div>{props.message} </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Message;","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogPropsType} from \"./DialogsContainer\";\r\n\r\n\r\nfunction Dialogs (props: DialogPropsType) {\r\n\r\n\r\n    let dialogsElements = props.dialogPage.dialogsData.map(dialog => <DialogItem key={dialog.id} image={dialog.image} name={dialog.name}\r\n                                                                      id={dialog.id}/>)\r\n\r\n    let messagesElements = props.dialogPage.messagesData.map(messages => <Message key={messages.id} message={messages.message}/>)\r\n\r\n    let newMessageBody = props.dialogPage.newMessageText;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.onSendMessageClick(newMessageBody);\r\n    }\r\n    let onNewMessageChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = event.target.value;\r\n        props.onNewMessageChange(body);\r\n    }\r\n\r\n    const keyClick = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.charCode === 13) {\r\n            onSendMessageClick()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n\r\n                {dialogsElements}\r\n\r\n\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <div className={style.buttonMessage}>\r\n                    <textarea onChange={onNewMessageChange} onKeyPress={keyClick} placeholder=\"Enter your message\"\r\n                              value={newMessageBody} className={style.textArea}/>\r\n                    <button onClick={onSendMessageClick}>Отправить</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import {userAPI} from \"../api/settingAPI\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    FOLLOW = 'Users/FOLLOW',\r\n    UNFOLLOW = 'Users/UNFOLLOW',\r\n    SET_USERS = 'Users/SET_USERS',\r\n    SET_CURRENT = 'Users/SET_CURRENT',\r\n    SET_TOTAL_COUNT = 'Users/SET_TOTAL_COUNT',\r\n    TOGGLE_FETCHING = 'Users/CHANGE_FETCHING',\r\n    FOLLOWING_PROGRESS = 'Users/FOLLOWING_PROGRESS',\r\n}\r\n\r\nexport type usersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string | null\r\n    photos: { small: string, large: string }\r\n}\r\ntype usersReduceType = {\r\n    users: usersType[],\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 63,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProgress: [],\r\n}\r\n\r\nexport const usersReducer = (state: usersReduceType = initialState, action: ActionUsersType): usersReduceType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW: {\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: true} : m)}\r\n        }\r\n        case ACTIONS_TYPE.UNFOLLOW: {\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: false} : m)}\r\n        }\r\n        case ACTIONS_TYPE.SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case ACTIONS_TYPE.SET_CURRENT: {\r\n            return {...state, currentPage: action.page}\r\n        }\r\n        case ACTIONS_TYPE.SET_TOTAL_COUNT: {\r\n            return {...state, totalUserCount: action.totalCount}\r\n        }\r\n        case ACTIONS_TYPE.TOGGLE_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case ACTIONS_TYPE.FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ActionUsersType = acceptFollowType | acceptUnfollowType | setUsersType | setCurrentPageType\r\n    | setTotalUsersCountType | toggleFetchingType | ToggleFollowingProgressType\r\n\r\nexport type acceptFollowType = ReturnType<typeof acceptFollow>\r\nexport const acceptFollow = (userID: number) => ({type: ACTIONS_TYPE.FOLLOW, userID} as const)\r\n\r\nexport type acceptUnfollowType = ReturnType<typeof acceptUnfollow>\r\nexport const acceptUnfollow = (userID: number) => ({type: ACTIONS_TYPE.UNFOLLOW, userID: userID} as const)\r\n\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: usersType[]) => ({type: ACTIONS_TYPE.SET_USERS, users} as const)\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (page: number) => ({type: ACTIONS_TYPE.SET_CURRENT, page} as const)\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: ACTIONS_TYPE.SET_TOTAL_COUNT, totalCount} as const)\r\n\r\nexport type toggleFetchingType = ReturnType<typeof toggleFetching>\r\nexport const toggleFetching = (isFetching: boolean) => ({type: ACTIONS_TYPE.TOGGLE_FETCHING, isFetching} as const)\r\n\r\nexport type ToggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({type: ACTIONS_TYPE.FOLLOWING_PROGRESS, isFetching, userId} as const)\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => (dispatch: Dispatch) => {\r\n    dispatch(toggleFetching(true));\r\n    userAPI.getUsers(currentPage, pageSize)\r\n        .then(response => {\r\n            dispatch(setUsers(response.items));\r\n            dispatch(setTotalUsersCount(response.totalCount));\r\n            dispatch(toggleFetching(false));\r\n            dispatch(setCurrentPage(currentPage));\r\n        });\r\n}\r\n\r\nexport const follow = (id: number) => (dispatch: Dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, id))\r\n    userAPI.followUsers(id).then(res => {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(acceptFollow(id))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, id))\r\n    })\r\n}\r\n\r\nexport const unfollow = (id: number)  => (dispatch: Dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, id))\r\n    userAPI.unfollowUsers(id)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(acceptUnfollow(id))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, id))\r\n        })\r\n}","import React from \"react\";\r\nimport {dialogReducerType, sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype MapStateDialogType = {\r\n    dialogPage: dialogReducerType\r\n}\r\ntype MapDispatchDialogType = {\r\n    onSendMessageClick: (newMessageBody: string) => void\r\n    onNewMessageChange: (body: string) => void\r\n}\r\nexport type DialogPropsType = MapStateDialogType & MapDispatchDialogType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogPage: state.dialogPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        onSendMessageClick: (newMessageBody: string) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n        onNewMessageChange: (body: string) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\nexport default DialogsContainer;","import React from 'react';\r\nimport style from '../Navbar.module.css';\r\n\r\ntype sidebarType = {\r\n    image: string\r\n}\r\n\r\nconst Sidebar = (props:sidebarType) => {\r\n    return (\r\n            <div>\r\n                <div >\r\n                    <img src={props.image} className={style.sidebarImg}/>\r\n                </div>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Sidebar;","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USERS_PROFILE = 'SET-USERS-PROFILE'\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\ntype postDataType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type profileReducerType = {\r\n    postData: Array<postDataType>\r\n    newPostText: string\r\n    profile: ProfileType|null\r\n}\r\n\r\nlet initialState: profileReducerType = {\r\n    postData: [\r\n        {id: 1, message: 'Sosiska', likeCount: 23},\r\n        {id: 2, message: 'REDDISKA', likeCount: 77},\r\n        {id: 3, message: 'Do you want me? ', likeCount: 107},\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n}\r\n\r\nexport const profileReduser = (state: profileReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [{id: new Date().getTime(), message: state.newPostText, likeCount: 0}, ...state.postData],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.postText\r\n            }\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionTypes = addPostACType | newTextACType | setUsersProfileType\r\n\r\nexport type addPostACType = ReturnType<typeof addPostAC>\r\nexport const addPostAC = (postText: string) => ({type: ADD_POST, postText} as const)\r\n\r\nexport type newTextACType = ReturnType<typeof updateNewPostTextAC>\r\nexport const updateNewPostTextAC = (postText: string) => ({type: UPDATE_NEW_POST_TEXT, postText} as const)\r\n\r\nexport type setUsersProfileType = ReturnType<typeof setUsersProfile>\r\nexport const setUsersProfile = (profile: ProfileType|null) => ({type: SET_USERS_PROFILE, profile} as const)\r\n","type imagesDataType = {\r\n    image: string\r\n}\r\nexport type sidebarReducerType = {\r\n    imagesData: Array<imagesDataType>\r\n}\r\n\r\nlet initialState: sidebarReducerType = {\r\n    imagesData: [\r\n        {image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state: sidebarReducerType = initialState, action: ActionTypes) => {\r\n    return state\r\n}\r\n\r\ntype ActionTypes = {}\r\n\r\nexport default sidebarReducer;","import axios from \"axios\";\r\nimport {usersType} from \"../redux/user-reducer\";\r\n\r\ntype GetTypeResponseUserAPI = {\r\n    items: usersType[]\r\n    totalCount: number\r\n    error: null\r\n}\r\n\r\ntype PostFollowType = {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: {}\r\n}\r\n\r\nexport const addressAPI = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"8cfe719b-61ef-4519-9519-1e1d9dd44f52\"\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return addressAPI.get<GetTypeResponseUserAPI>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data);\r\n    },\r\n\r\n    unfollowUsers(id: number) {\r\n        return addressAPI.delete<PostFollowType>(`follow/${id}`)\r\n    },\r\n\r\nfollowUsers(id: number) {\r\n        return addressAPI.post<PostFollowType>(`follow/${id}`)\r\n    }\r\n}\r\n\r\n\r\n","const SET_USER_DATA = \"SET-USER-DATA\"\r\nconst SET_PHOTO = \"SET-PHOTO\"\r\n\r\ntype AuthReduceType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    photo: string|null\r\n}\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    photo: null,\r\n}\r\n\r\nexport const authReducer = (state: AuthReduceType = initialState, action: ActionPropsType): AuthReduceType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {...state, ...action.data, isAuth: true}\r\n        }\r\n        case SET_PHOTO:{\r\n            return {...state, photo:action.photo}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionPropsType = SetPhotoLoginType| SetUserDataType\r\n\r\ntype SetUserDataType = ReturnType<typeof setUsersDataAC>\r\nexport const setUsersDataAC = (id: number,email: string, login: string) => ({type: SET_USER_DATA, data:{id,email,login}} as const)\r\n\r\ntype SetPhotoLoginType = ReturnType<typeof setPhotoLoginAC>\r\nexport const setPhotoLoginAC = (photo: string) => ({type: SET_PHOTO, photo}as const)","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReduser} from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialogs-reduser\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport {usersReducer} from \"./user-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReduser,\r\n    dialogPage: dialogReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n//@ts-ignore\r\nwindow.store= store","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"./SideBar/Sidebar\";\r\nimport {store} from \"../../redux/redux-store\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n  let sidebarElements = store.getState().sidebar.imagesData.map((item) => <Sidebar image={item.image}/>)\r\n\r\n    return (\r\n        <div className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/profile\" activeClassName={style.active}> Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/users\" activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n\r\n            <div className={style.friendsSidebar}>\r\n            <h3>FRIENDS </h3>\r\n           <div className={style.sidebarElements}>{sidebarElements}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import * as React from \"react\";\r\nimport {Box, Button, Drawer, List, ListItem} from \"@material-ui/core\";\r\nimport {Menu} from \"@material-ui/icons\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\ntype Anchor = \"left\"\r\n\r\nexport const HeaderMenu = () => {\r\n    const [state, setState] = React.useState({\r\n        left: false,\r\n\r\n    });\r\n\r\n    const toggleDrawer = (anchor: Anchor, open: boolean) => (\r\n        event: React.KeyboardEvent | React.MouseEvent\r\n    ) => {\r\n        if (\r\n            event.type === \"keydown\" &&\r\n            ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n                (event as React.KeyboardEvent).key === \"Shift\")\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setState({...state, [anchor]: open});\r\n    };\r\n\r\n    const list = (anchor: Anchor) => (\r\n        <Box\r\n            style={{backgroundColor:\"#b5c9b3\", height:\"100%\"}}\r\n            sx={{width: 250}}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                <ListItem>\r\n                    <Navbar/>\r\n                </ListItem>\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <Button size={'large'} onClick={toggleDrawer(\"left\", true)}> <Menu style={{color:\"white\"}} /> </Button>\r\n                <Drawer\r\n                    anchor={\"left\"}\r\n                    open={state[\"left\"]}\r\n                    onClose={toggleDrawer(\"left\", false)}\r\n                >\r\n                    {list(\"left\")}\r\n                </Drawer>\r\n            </>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/headerImages.adb5c696.png\";","import React from 'react';\r\nimport {AppBar, Button,Toolbar, Typography} from \"@material-ui/core\";\r\nimport {HeaderMenu} from \"./HeaderMenu\";\r\nimport headerImages from \"../../images/headerImages.png\"\r\nimport s from './Header.module.css'\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string|null\r\n    photo: string|null\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <AppBar style={{backgroundColor:\"#02988e\"}} position=\"relative\">\r\n            <Toolbar>\r\n                    <HeaderMenu/>\r\n                <Typography variant={\"h3\"} component=\"div\" sx={{flexGrow: 1}}/>\r\n\r\n                {props.isAuth? <div className={s.login}> <img className={s.photoHeader} src={props.photo? props.photo:headerImages}/> {props.login} </div>:<Button color=\"inherit\" style={{color:\"#cc5aa6\", fontWeight:\"bold\"}}>Login</Button>}\r\n            </Toolbar>\r\n        </AppBar>\r\n)\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {addressAPI} from \"../../api/settingAPI\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPhotoLoginAC, setUsersDataAC} from \"../../redux/auth-reducer\";\r\nimport {getProfileType} from \"../Profile/ProfileContainer\";\r\n\r\ntype GetTypeLoginUserAPI = {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n}\r\ntype MapStateUserType = {\r\n    isAuth: boolean,\r\n    login: string | null,\r\n    photo: string|null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setUsersDataAC: (id: number, email: string, login: string) => void\r\n    setPhotoLoginAC: (photo: string) => void\r\n}\r\ntype UsersLoginPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\n\r\nclass HeaderContainer extends React.Component<UsersLoginPropsType> {\r\n\r\n    componentDidMount() {\r\n        addressAPI.get<GetTypeLoginUserAPI>('auth/me', {withCredentials: true})\r\n            .then(response => {\r\n                console.log(response)\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, email, login} = response.data.data;\r\n                    this.props.setUsersDataAC(id, email, login)\r\n                    return response\r\n                }\r\n            })\r\n            .then(res => {\r\n                if (res) {\r\n                    addressAPI.get<getProfileType>('/profile/' + res.data.data.id)\r\n                        .then(response => {\r\n                            this.props.setPhotoLoginAC(response.data.photos.small)\r\n                        })}\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProp = (state: AppStateType): MapStateUserType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        photo: state.auth.photo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProp, {setUsersDataAC, setPhotoLoginAC})(HeaderContainer)","import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport {usersType} from \"../../redux/user-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Avatar, Button} from \"@material-ui/core\";\r\n\r\ntype UsersType = {\r\n    pageSize: number\r\n    users: usersType[]\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n    followingProgress: number[]\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n\r\n    const photoUser = props.users.filter(f => f.photos.small !== null)\r\n    const notPhotoUser = props.users.filter(f => f.photos.small == null)\r\n    const usersDisplay = [...photoUser, ...notPhotoUser]\r\n\r\n    return (\r\n        <div className={s.usersContainer}>\r\n            {usersDisplay.map(u => <div key={u.id}>\r\n                <div className={s.user}>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <div>\r\n                                {u.photos.small !== null? <img src={u.photos.small} className={s.userPhoto}/>\r\n                                    :<Avatar className={s.userPhoto} sx={{fontSize:\"50px\", width:\"100px\", height:\"100px\", background:\"#10ab9e\"}}> {u.name[0].toUpperCase()}</Avatar>}\r\n                            </div>\r\n\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.name}>\r\n                        <span className={s.span}>{u.name}</span>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {u.followed\r\n                            ? <Button variant={\"outlined\"} size={'small'} color={\"error\"} disabled={props.followingProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.unfollow(u.id)\r\n                            }}>Unfollow</Button>\r\n\r\n                            : <Button variant={\"contained\"} size={'small'} disabled={props.followingProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.follow(u.id)\r\n                            }}>Follow</Button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/preloader.3fb26d9b.gif\";","import React from \"react\";\r\nimport preloader from \"../../images/preloader.gif\";\r\n\r\nexport const Preloader = () => {\r\n\r\n    let divStyle = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n\r\n    let imgStyle = {\r\n        width: \"80px\",\r\n        height: \"100px\",\r\n    }\r\n    return <div style={divStyle}> <img style={imgStyle} src={preloader}/> </div>\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport s from \"./Users.module.css\";\r\nimport {Preloader} from \"../common/Preloader\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage,\r\n    unfollow,\r\n    usersType\r\n} from \"../../redux/user-reducer\";\r\nimport {Pagination} from \"@material-ui/core\";\r\n\r\n\r\ntype MapStateUserType = {\r\n    users: usersType[]\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n}\r\nexport type MapDispatchPropsType = {\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setCurrentPage: (numberPage: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\ntype UsersPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType, {}> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUserCount / this.props.pageSize)\r\n\r\n        return (\r\n            <div>\r\n                <div className={s.paginator}>\r\n                    <Pagination color={\"primary\"} onChange={(event, page) => {\r\n                        this.onPageChanged(page)\r\n                    }}\r\n                                count={pagesCount} variant={'text'} shape=\"rounded\" defaultPage={1} siblingCount={22} size={\"small\"}/>\r\n                </div>\r\n                <>\r\n                    {this.props.isFetching ? <Preloader/>\r\n                        : null}\r\n                    <Users\r\n                        pageSize={this.props.pageSize}\r\n                        users={this.props.users}\r\n                        unfollow={this.props.unfollow}\r\n                        follow={this.props.follow}\r\n                        followingProgress={this.props.followingProgress}\r\n                    />\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateUserType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingProgress: state.usersPage.followingProgress,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{follow,unfollow,setCurrentPage,getUsers})(UsersContainer)\r\n","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\n\r\ntype ProfileInfoComponentType = {\r\n    profile: ProfileType|null\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoComponentType) => {\r\n    return (\r\n        <div>\r\n            {/*<div>*/}\r\n            {/*    <img className={style.img} src=\"https://lifeo.ru/wp-content/uploads/vesna-100-min.jpg\"/>*/}\r\n            {/*</div>*/}\r\n            <div>\r\n                <div>\r\n                    <img src={props.profile?.photos.large}/>\r\n                    <div>{props.profile?.fullName}</div>\r\n                    <div>{props.profile?.contacts.instagram}</div>\r\n                    <div>{props.profile?.contacts.vk}</div>\r\n                    <div>{props.profile?.contacts.github}</div>\r\n                    <div>{`looking for a job:  ${props.profile?.lookingForAJob && \"Yes\"}`}</div>\r\n                    <div>{`Job Description:  ${props.profile?.lookingForAJobDescription}`}</div>\r\n<br/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\n\r\nconst Post = (props: PropsType) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src=\"https://bizlit.com.ua/image/data/pictures/YeDYzSR-10apkm4.png\"/>\r\n            <div className={style.messagePost}>\r\n                {props.message}\r\n\r\n                <div className={style.likeType}>\r\n                    <span className={style.countLike}>{props.likeCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {KeyboardEvent} from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostPropsType} from \"./MyPostsContainer\";\r\n\r\nconst MyPosts = (props: PostPropsType) => {\r\n\r\n    let postsElements = props.profilePage.postData.map(post => <Post message={post.message} likeCount={post.likeCount}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let addPosts = () => {\r\n        let text = newPostElement.current?.value;\r\n       text && props.addPosts(text);\r\n        // let text = newPostElement.current?.value;\r\n        // text && props.dispatch(addPostActionCreator(text))\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current?.value;\r\n        text && props.onPostChange(text)\r\n        // text && props.dispatch(updateNewPostTextActionCreator(text))\r\n    }\r\n\r\n    const keyClick = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.charCode === 13) {\r\n            addPosts()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3> My posts </h3>\r\n            <div>\r\n                <textarea onKeyPress={keyClick} onChange={onPostChange} ref={newPostElement} value={props.profilePage.newPostText}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={addPosts}>Add post</button>\r\n            </div>\r\n\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostAC, profileReducerType, updateNewPostTextAC} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateProfileType = {\r\n    profilePage: profileReducerType\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPosts: (text: string) => void\r\n    onPostChange: (text: string) => void\r\n}\r\nexport type PostPropsType = MapStateProfileType & MapDispatchPropsType\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateProfileType => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPosts: (text: string) => {\r\n            text && dispatch(addPostAC(text));\r\n        },\r\n        onPostChange: (text: string) => {\r\n            text && dispatch(updateNewPostTextAC(text))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\n\r\ntype ProfileComponentType = {\r\n    profile: ProfileType|null\r\n}\r\n\r\nexport const Profile = (props:ProfileComponentType) => {\r\n\r\n    return <div>\r\n        <ProfileInfo profile={props.profile}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport {Profile} from \"./Profile\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {ProfileType, setUsersProfile} from \"../../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {addressAPI} from \"../../api/settingAPI\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport type getProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType | null\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\n\r\ntype mapDispatchToPropsType = {\r\n    setUsersProfile: (profile: getProfileType | null) => void\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\ntype OwnPropsType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId){\r\n            userId = \"2\";\r\n        }\r\n        addressAPI.get<getProfileType>(`/profile/` + userId)\r\n            .then(response => {\r\n                this.props.setUsersProfile(response.data)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile}/>\r\n            </div>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nconst WithUrlDataProfileContainer = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {setUsersProfile})(WithUrlDataProfileContainer);","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport WithUrlDataProfileContainer from \"./components/Profile/ProfileContainer\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n                    <Grid container>\r\n                        <Grid item xs={12} style={{border:\"1px solid\"}}>\r\n                            <HeaderContainer/>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{border:\"1px solid\", backgroundColor:\"#ecffea\"}}>\r\n\r\n                            <Route exact path={'/'} render={() => <Redirect to={'/profile'}/>}/>\r\n\r\n                            <Route path=\"/dialogs\"\r\n                                   render={() => <DialogsContainer/>}/>\r\n\r\n                            <Route path=\"/profile/:userId?\"\r\n                                   render={() => <WithUrlDataProfileContainer/>}/>\r\n\r\n                            <Route path=\"/users\"\r\n                                   render={() => <UsersContainer/>}/>\r\n                        </Grid>\r\n                    </Grid>\r\n        </HashRouter>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>\n        , document.getElementById('root')\n    );\n}\nrerenderEntireTree()\n\nstore.subscribe(()=>{\n    rerenderEntireTree()\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2ljic\",\"dialogsItem\":\"Dialogs_dialogsItem__dkL1w\",\"messages\":\"Dialogs_messages__3CLYv\",\"dialogsStyle\":\"Dialogs_dialogsStyle__1WKEc\",\"active\":\"Dialogs_active__cWjhb\",\"wrapper\":\"Dialogs_wrapper__QWmPS\",\"wrapper_style\":\"Dialogs_wrapper_style__jqb8Y\",\"messageStyle\":\"Dialogs_messageStyle__3rO8r\",\"imageDialog\":\"Dialogs_imageDialog__3bOZI\",\"buttonMessage\":\"Dialogs_buttonMessage__Soa9S\",\"textArea\":\"Dialogs_textArea__3DOs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Navbar_item__3NmC5\",\"active\":\"Navbar_active__Yhrhi\",\"friendsSidebar\":\"Navbar_friendsSidebar__3a2By\",\"sidebarImg\":\"Navbar_sidebarImg__31U-u\",\"sidebarElements\":\"Navbar_sidebarElements__1KLTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1uFet\",\"selectedPage\":\"Users_selectedPage__2yzV4\",\"usersContainer\":\"Users_usersContainer__16uvB\",\"user\":\"Users_user__1G7hI\",\"name\":\"Users_name__u2WlR\",\"paginator\":\"Users_paginator__8Gq43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__c9gD9\",\"item\":\"Post_item__bSl-J\",\"messagePost\":\"Post_messagePost__3uuyM\",\"countLike\":\"Post_countLike__S3MtX\",\"likeType\":\"Post_likeType__3kNlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__H0yV5\",\"photoHeader\":\"Header_photoHeader__1LYeP\",\"login\":\"Header_login___9nR7\"};"],"sourceRoot":""}