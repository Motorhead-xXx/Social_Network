{"version":3,"sources":["components/Profile/myPosts/Post/Post.module.css","components/Header/Header.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Navbar/SideBar/Sidebar.tsx","redux/profile-reducer.tsx","redux/dialogs-reduser.tsx","redux/sidebar-reducer.tsx","redux/userReducer.ts","redux/redux-store.ts","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/myPosts/Post/Post.tsx","components/Profile/myPosts/MyPosts.tsx","components/Profile/myPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","components/Users/UsersContainer.tsx","components/Users/Users.tsx","App.tsx","index.tsx","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","style","header","src","Sidebar","props","image","sidebarImg","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","postData","id","message","likeCount","newPostText","profileReduser","state","action","type","Date","getTime","postText","UPDATE_NEW_MESSAGE_TEXT","SEND_MESSAGE","dialogsData","name","messagesData","newMessageText","dialogReducer","newText","body","imagesData","sidebarReducer","users","usersReducer","map","m","followed","userID","rootReducer","combineReducers","profilePage","dialogPage","sidebar","usersPage","store","createStore","Navbar","sidebarElements","getState","item","nav","to","activeClassName","active","friendsSidebar","ProfileInfo","img","Post","messagePost","likeType","countLike","MyPosts","postsElements","post","newPostElement","React","createRef","addPosts","text","current","value","onKeyPress","event","charCode","onChange","onPostChange","ref","onClick","posts","MyPostsContainer","connect","dispatch","Profile","DialogItem","path","containerDialog","dialogsStyle","imageDialog","Message","messageStyle","wrapper_style","wrapper","Dialogs","dialogsElements","dialog","messagesElements","messages","newMessageBody","onSendMessageClick","dialogs","dialogsItem","buttonMessage","target","onNewMessageChange","placeholder","textArea","DialogsContainer","UsersContainer","follow","usersID","unfollow","setUsers","setUsersAC","length","status","photo","location","city","country","s","userPhoto","App","exact","render","rerenderEntireTree","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.8841c409.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__2y9CA\",\"item\":\"Post_item__2e1ow\",\"messagePost\":\"Post_messagePost__2tAxE\",\"countLike\":\"Post_countLike__3jVtI\",\"likeType\":\"Post_likeType__2tFvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__xCRiM\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport style from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return <header className={style.header}>\r\n        <img src='http://pngimg.com/uploads/megaphone/megaphone_PNG94.png'/>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from '../Navbar.module.css';\r\n\r\ntype sidebarType = {\r\n    image: string\r\n}\r\n\r\nconst Sidebar = (props:sidebarType) => {\r\n    return (\r\n            <div>\r\n                <div >\r\n                    <img src={props.image} className={style.sidebarImg}/>\r\n                </div>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Sidebar;","import {ActionTypes} from \"../App\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\ntype postDataType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type profileReducerType = {\r\n    postData: Array<postDataType>\r\n    newPostText: string\r\n}\r\n\r\nlet initialState: profileReducerType = {\r\n    postData: [\r\n        {id: 1, message: 'Sosiska', likeCount: 23},\r\n        {id: 2, message: 'REDDISKA', likeCount: 77},\r\n        {id: 3, message: 'Do you want me? ', likeCount: 107},\r\n    ],\r\n    newPostText: '',\r\n}\r\n\r\nconst profileReduser = (state: profileReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n         return  {\r\n            ...state,\r\n                postData: [{id: new Date().getTime(), message: state.newPostText, likeCount: 0},...state.postData],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return  {...state,\r\n                newPostText: action.postText\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type addPostAC = ReturnType<typeof addPostActionCreator>\r\nexport const addPostActionCreator = (postText: string) => ({type: ADD_POST, postText} as const)\r\n\r\nexport type newTextAC = ReturnType<typeof updateNewPostTextActionCreator>\r\nexport const updateNewPostTextActionCreator = (postText: string) => ({type: UPDATE_NEW_POST_TEXT, postText} as const)\r\n\r\nexport default profileReduser;","import {ActionTypes} from \"../App\";\r\n\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGES';\r\n\r\ntype dialogsDataType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\ntype messagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type dialogReducerType = {\r\n    dialogsData: Array<dialogsDataType>\r\n    messagesData: Array<messagesDataType>\r\n    newMessageText: string\r\n}\r\n\r\nlet initialState: dialogReducerType = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Sveta\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"\r\n        },\r\n        {id: 3, name: \"Sasha\", image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {\r\n            id: 4,\r\n            name: \"Viktor\",\r\n            image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Valera\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your it-kamasutra?\"},\r\n        {id: 3, message: \"yo Hi\"},\r\n        {id: 4, message: \"Hello Hi\"},\r\n        {id: 5, message: \"Yo yo yo\"},\r\n    ],\r\n    newMessageText: '',\r\n}\r\n\r\nconst dialogReducer = (state: dialogReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            };\r\n        }\r\n        case SEND_MESSAGE: {\r\n            let body = state.newMessageText;\r\n            if (body !== \"\") {\r\n                return {\r\n                    ...state,\r\n                    newMessageText: \"\",\r\n                    messagesData: [...state.messagesData, {id: 6, message: body}]\r\n                }\r\n            } else {\r\n                return state\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type messageAC = ReturnType<typeof sendMessageCreator>\r\nexport const sendMessageCreator = (newText: string) => ({type: SEND_MESSAGE, newText} as const)\r\n\r\nexport type updateMessageAC = ReturnType<typeof updateNewMessageBodyCreator>\r\nexport const updateNewMessageBodyCreator = (newText: string) => ({type: UPDATE_NEW_MESSAGE_TEXT, newText} as const)\r\n\r\n\r\nexport default dialogReducer;","import {ActionTypes} from \"../App\";\r\n\r\ntype imagesDataType = {\r\n    image: string\r\n}\r\nexport type sidebarReducerType = {\r\n    imagesData: Array<imagesDataType>\r\n}\r\n\r\nlet initialState: sidebarReducerType = {\r\n    imagesData: [\r\n        {image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state: sidebarReducerType = initialState, action: ActionTypes) => {\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","export type usersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: {city: string, country:string}\r\n    photo:string\r\n}\r\n\r\nexport type usersReduceType = {\r\n    users: Array<usersType>\r\n}\r\n\r\n\r\nlet initialState: usersReduceType = {\r\n    users: []\r\n}\r\n\r\n\r\nconst usersReducer = (state: usersReduceType = initialState, action:ACtionUsersType) => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\": {\r\n            return {...state, users: state.users.map(m => m.id === action.id? {...m, followed: true} : m)}\r\n        }\r\n        case \"UNFOLLOW\": {\r\n            return {...state, users: state.users.map(m => m.id === action.userID? {...m, followed: false} : m)}\r\n        }\r\n        case \"SET_USERS\": {\r\n            return {...state, users: [...state.users, ...action.users]}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ACtionUsersType = followACType|unfollowACType|setUsersType\r\n\r\nexport type followACType = ReturnType<typeof followAC>\r\nexport const followAC = (id:number) => ( {type: \"FOLLOW\", id}as const )\r\n\r\nexport type unfollowACType = ReturnType<typeof unfollowAC>\r\nexport const unfollowAC = (userID: number) => ( {type: \"UNFOLLOW\", userID:userID}as const )\r\n\r\nexport type setUsersType = ReturnType<typeof setUsersAC>\r\nexport const setUsersAC = (users: usersType[]) => ({type:\"SET_USERS\", users} as const)\r\n\r\nexport default usersReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReduser from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialogs-reduser\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./userReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReduser,\r\n    dialogPage: dialogReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer)\r\n\r\n","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"./SideBar/Sidebar\";\r\nimport {store} from \"../../redux/redux-store\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n  let sidebarElements = store.getState().sidebar.imagesData.map((item) => <Sidebar image={item.image}/>)\r\n\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/profile\" activeClassName={style.active}> Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/users\" activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n\r\n            <div className={style.friendsSidebar}>\r\n            <h3>FRIENDS </h3>\r\n           <div className={style.sidebarElements}>{sidebarElements}</div>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\n\r\n\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={style.img} src=\"https://lifeo.ru/wp-content/uploads/vesna-100-min.jpg\"/>\r\n            </div>\r\n            <div>\r\n                ava + discription\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\n\r\nconst Post = (props: PropsType) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src=\"https://bizlit.com.ua/image/data/pictures/YeDYzSR-10apkm4.png\"/>\r\n            <div className={style.messagePost}>\r\n                {props.message}\r\n\r\n                <div className={style.likeType}>\r\n                    <span className={style.countLike}>{props.likeCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {KeyboardEvent} from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostPropsType} from \"./MyPostsContainer\";\r\n\r\nconst MyPosts = (props: PostPropsType) => {\r\n\r\n    let postsElements = props.profilePage.postData.map(post => <Post message={post.message} likeCount={post.likeCount}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let addPosts = () => {\r\n        let text = newPostElement.current?.value;\r\n       text && props.addPosts(text);\r\n        // let text = newPostElement.current?.value;\r\n        // text && props.dispatch(addPostActionCreator(text))\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current?.value;\r\n        text && props.onPostChange(text)\r\n        // text && props.dispatch(updateNewPostTextActionCreator(text))\r\n    }\r\n\r\n    const keyClick = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.charCode === 13) {\r\n            addPosts()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3> My posts </h3>\r\n            <div>\r\n                <textarea onKeyPress={keyClick} onChange={onPostChange} ref={newPostElement} value={props.profilePage.newPostText}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={addPosts}>Add post</button>\r\n            </div>\r\n\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, profileReducerType, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateProfileType = {\r\n    profilePage: profileReducerType\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPosts: (text: string) => void\r\n    onPostChange: (text: string) => void\r\n}\r\nexport type PostPropsType = MapStateProfileType & MapDispatchPropsType\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateProfileType => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPosts: (text: string) => {\r\n            text && dispatch(addPostActionCreator(text));\r\n        },\r\n        onPostChange: (text: string) => {\r\n            text && dispatch(updateNewPostTextActionCreator(text))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    return <div>\r\n        <ProfileInfo/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype dialogsType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\n\r\nconst DialogItem = (props:dialogsType) => {\r\n    const path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={style.containerDialog}>\r\n\r\n            <NavLink to={path} activeClassName={style.active} className={style.dialogsStyle}>\r\n                 <img src={props.image} className={style.imageDialog}/>\r\n                <div> {props.name}</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\n\r\n\r\ntype messageType = {\r\n    message: string\r\n}\r\n\r\n\r\nconst Message: React.FC<messageType> = (props) => {\r\n    return (\r\n        <div className={style.messageStyle}>\r\n\r\n            <div className={style.wrapper_style}>\r\n            </div>\r\n\r\n            <div className={style.wrapper}>\r\n\r\n             <div>{props.message} </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Message;","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogPropsType} from \"./DialogsContainer\";\r\n\r\n\r\nfunction Dialogs (props: DialogPropsType) {\r\n\r\n\r\n    let dialogsElements = props.dialogPage.dialogsData.map(dialog => <DialogItem key={dialog.id} image={dialog.image} name={dialog.name}\r\n                                                                      id={dialog.id}/>)\r\n\r\n    let messagesElements = props.dialogPage.messagesData.map(messages => <Message key={messages.id} message={messages.message}/>)\r\n\r\n    let newMessageBody = props.dialogPage.newMessageText;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.onSendMessageClick(newMessageBody);\r\n    }\r\n    let onNewMessageChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = event.target.value;\r\n        props.onNewMessageChange(body);\r\n    }\r\n\r\n    const keyClick = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.charCode === 13) {\r\n            onSendMessageClick()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n\r\n                {dialogsElements}\r\n\r\n\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <div className={style.buttonMessage}>\r\n                    <textarea onChange={onNewMessageChange} onKeyPress={keyClick} placeholder=\"Enter your message\"\r\n                              value={newMessageBody} className={style.textArea}/>\r\n                    <button onClick={onSendMessageClick}>Отправить</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {dialogReducerType, sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reduser\";\r\nimport {ActionTypes} from \"../../App\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\ntype MapStateDialogType = {\r\n    dialogPage: dialogReducerType\r\n}\r\ntype MapDispatchDialogType = {\r\n    onSendMessageClick: (newMessageBody: string) => void\r\n    onNewMessageChange: (body: string) => void\r\n}\r\nexport type DialogPropsType = MapStateDialogType & MapDispatchDialogType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogPage: state.dialogPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: (action: ActionTypes) => void) => {\r\n    return {\r\n        onSendMessageClick: (newMessageBody: string) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n        onNewMessageChange: (body: string) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\n\r\n\r\nexport default DialogsContainer;","import React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {followAC,\r\n    setUsersAC,\r\n    unfollowAC,\r\n    usersReduceType,\r\n    usersType\r\n} from \"../../redux/userReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype MapStateUserType = {\r\n   usersPage: usersReduceType\r\n}\r\ntype MapDispatchPropsType = {\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setUsers: (users: usersType[]) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state:AppStateType): MapStateUserType => {\r\n    return {\r\n        usersPage: state.usersPage,\r\n    }\r\n\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        follow: (usersID) => {\r\n            dispatch(followAC(usersID))\r\n        },\r\n\r\n        unfollow: (usersID) => {\r\n            dispatch(unfollowAC(usersID))\r\n        },\r\n        setUsers: (users:usersType[]) => {\r\n            dispatch(setUsersAC(users))\r\n        }\r\n    }\r\n}\r\n\r\nexport const UsersContainer = connect (mapStateToProps, mapDispatchToProps)(Users)","import React from \"react\";\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport s from \"./Users.module.css\"\r\n\r\nexport const Users = (props:UsersPropsType) => {\r\n    if (props.usersPage.users.length === 0){\r\n        props.setUsers(\r\n            [\r\n                {id: 1, followed: false, name: \"Dimych\", status: \"i am a boss\",photo:\"\", location: {city: 'Minsk', country: \"Belarus\"}},\r\n                {id: 2, followed: true, name: \"Sacha\", status: \"i am a boss too\", photo:\"\",location: {city: 'Moskow',country:\"Russia\"}},\r\n                {id: 3, followed: false, name: \"Gena\", status: \"i am a boss too\",photo:\"\", location: {city: 'Kiev', country:\"Ukraine\"}},\r\n            ]  )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.usersPage.users.map(m => <div key={m.id}>\r\n                <span>\r\n                    <div>\r\n                        <img src={m.photo} className={s.userPhoto}/>\r\n                    </div>\r\n                    <div>\r\n                        {m.followed\r\n                            ? <button onClick={()=> { props.unfollow(m.id) } }>Unfollow</button>\r\n                            :<button onClick={()=> { props.follow(m.id) } }>Follow</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                          <div>{m.name}</div>\r\n                        <div>{m.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{m.location.city}</div>\r\n                        <div>{m.location.country}</div>\r\n                    </span>\r\n                </span>\r\n                </div>)\r\n            }\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport {addPostAC, newTextAC} from \"./redux/profile-reducer\";\nimport {messageAC, updateMessageAC} from \"./redux/dialogs-reduser\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport {UsersContainer} from \"./components/Users/UsersContainer\";\n\nexport type ActionTypes = addPostAC | newTextAC | messageAC | updateMessageAC\n\n\nconst App = () => {\n    return (\n        <div className='app-wrapper'>\n            <Header/>\n            <Navbar />\n            <div className='app-wrapper-content'>\n                <Route exact path={'/'} render={() => <Redirect to={\"/Social_Network/profile\"}/>}/>\n\n                <Route path=\"/Social_Network/dialogs\"\n                       render={() => <DialogsContainer/>}/>\n\n                <Route path=\"/Social_Network/profile\"\n                       render={() => <Profile/>}/>\n\n                <Route path=\"/Social_Network/users\"\n                       render={() => <UsersContainer/>}/>\n            </div>\n        </div>\n    )\n\n}\n\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport React from \"react\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root')\n    );\n}\nrerenderEntireTree()\n\nstore.subscribe(()=>{\n    rerenderEntireTree()\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2FJyO\",\"dialogsItem\":\"Dialogs_dialogsItem__MSxD1\",\"messages\":\"Dialogs_messages__2CafO\",\"dialogsStyle\":\"Dialogs_dialogsStyle__13RnD\",\"active\":\"Dialogs_active__3jWpU\",\"wrapper\":\"Dialogs_wrapper__1ANx0\",\"wrapper_style\":\"Dialogs_wrapper_style__3uhjr\",\"messageStyle\":\"Dialogs_messageStyle__1Wb6M\",\"imageDialog\":\"Dialogs_imageDialog__DoiRT\",\"buttonMessage\":\"Dialogs_buttonMessage__11m31\",\"textArea\":\"Dialogs_textArea__TqoYL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3gxxt\",\"item\":\"Navbar_item__1hAV5\",\"active\":\"Navbar_active__WDzq8\",\"friendsSidebar\":\"Navbar_friendsSidebar__YQ87y\",\"sidebarImg\":\"Navbar_sidebarImg__3zP9Q\",\"sidebarElements\":\"Navbar_sidebarElements__3eZXY\"};"],"sourceRoot":""}