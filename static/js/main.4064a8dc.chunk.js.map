{"version":3,"sources":["components/login/LoginStyle.module.css","reducers/profile-reducer.tsx","components/common/errorSnackbar.tsx","reducers/dialogs-reduser.tsx","reportWebVitals.ts","store/store.ts","components/Navbar/Navbar.tsx","components/Header/HeaderMenu.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/login/Login.tsx","components/Users/User.tsx","components/Users/Users.tsx","images/preloader.gif","components/common/Preloader.tsx","utils/object-halper.ts","reducers/user-reducer.ts","reducers/users-selector.ts","components/Users/UsersContainer.tsx","App.tsx","reducers/sidebar-reducer.tsx","index.tsx","api/paramsAPI.ts","components/Navbar/Navbar.module.css","components/Users/Users.module.css","reducers/app-reducer.ts","components/Header/Header.module.css","reducers/auth-reducer.ts"],"names":["module","exports","initialState","postData","id","message","likeCount","profile","status","profileReduser","state","action","type","Date","getTime","postText","textStatus","filter","p","postId","photos","addPost","setStatus","getCurrenUsersProfile","userId","dispatch","a","profileAPI","getProfile","response","data","getStatusProfile","res","updateStatus","resultCode","console","log","savePhoto","file","saveProfile","getState","userID","auth","setAppError","messages","Alert","React","props","ref","elevation","variant","connect","errorApp","app","error","handleClose","event","reason","isOpen","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","severity","sx","width","height","alignItems","fontSize","dialogsData","name","image","messagesData","onSendMessage","newMessageText","dialogReducer","text","ResultCodesEnum","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","style","nav","CardContent","wrapperItems","to","activeClassName","active","item","Person","spanLink","Markunread","EmojiEmotions","FiberNew","LibraryMusic","Settings","HeaderMenu","anchor","left","setState","toggleDrawer","key","Button","size","onClick","Menu","color","Drawer","Box","background","padding","role","onKeyDown","List","margin","ListItem","Header","AppBar","s","appBar","backgroundColor","position","Toolbar","headerMenu","Typography","component","flexGrow","isAuth","login","headerMain","button","logOut","fontWeight","HeaderContainer","this","Component","photo","profilePage","large","authUserLogin","validationSchema","yup","email","required","password","min","LoginForm","formik","useFormik","initialValues","rememberMe","captcha","onSubmit","values","handleSubmit","form","loginFormContainer","prompt","TextField","minWidth","label","value","onChange","handleChange","touched","Boolean","errors","helperText","FormControlLabel","control","Checkbox","getFieldProps","checked","display","flexDirection","gap","src","captchaUrl","loginTC","User","user","borderRadius","small","userPhoto","Avatar","toUpperCase","span","substr","followed","disabled","followingProgress","some","unfollow","follow","Users","photoUser","users","f","notPhotoUser","usersDisplay","usersContainer","map","u","pageSize","Preloader","justifyContent","preloader","updateOjectInArray","items","itemId","objPropName","newObjProps","totalUserCount","currentPage","isFetching","acceptFollow","acceptUnfollow","setCurrentPage","page","toggleFetching","toggleFollowingProgress","folowUnfolowFlow","apiMethod","actionCreator","getUsersSelect","usersPage","getPageSize","getTotalCount","getCurrentPage","getIsFetching","getFollowingProgress","stylePaginatorPaper","minHeight","UsersContainer","getUsers","pageNumber","pagesCount","Math","ceil","containerWrapper","paginator","Paper","Pagination","onPageChanged","count","shape","defaultPage","siblingCount","compose","userAPI","followUsers","bind","unfollowUsers","totalCount","DialogContainer","lazy","ProfileContainer","App","initializeApp","initialized","Grid","container","xs","wrapperContent","navbarApp","content","exact","path","render","Suspense","fallback","CircularProgress","LinearProgress","withRouter","imagesData","sidebarReducer","rootReducer","combineReducers","dialogPage","sidebar","authReducer","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","instance","axios","create","withCredentials","baseURL","headers","get","delete","post","authAPI","getMePhoto","me","params","put","photoFile","formData","FormData","append","securityAPI","getCaptchaUrl","promise","Promise","all","setUsersData","url"],"mappings":"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","file":"static/js/main.4064a8dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginStyle_form__30dUS\",\"loginFormContainer\":\"LoginStyle_loginFormContainer__2uN0j\",\"prompt\":\"LoginStyle_prompt__3LNFQ\"};","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/paramsAPI\";\r\nimport {AppThunkType} from \"../store/store\";\r\nimport {setAppError} from \"./app-reducer\";\r\n\r\nexport type PhotosType = {\r\n    small: string | null\r\n    large: string | null\r\n}\r\n\r\nexport type ContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\n\r\nexport type UserType = {\r\n    id: number\r\n    name: string\r\n    status: string\r\n    photos: PhotosType\r\n    followed: boolean\r\n}\r\n\r\nexport type ProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: ContactsType\r\n    photos: PhotosType\r\n    aboutMe: string\r\n}\r\n//\r\nexport type postDataType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nlet initialState = {\r\n    postData: [\r\n        {id: 1, message: 'What a wonderful day today was!', likeCount: 23},\r\n        {id: 2, message: 'I fell in love with TypeScript! ' , likeCount: 77},\r\n        {id: 3, message: 'Who Watched Silicon Valley? Share your impressions!', likeCount: 107},\r\n    ] as Array<postDataType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\",\r\n}\r\n\r\nexport const profileReduser = (state = initialState, action: ProfileActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/PROFILE/ADD-POST\": {\r\n            return {\r\n                ...state,\r\n                postData: [{id: new Date().getTime(), message: action.postText, likeCount: 0}, ...state.postData]\r\n            }\r\n        }\r\n        case \"SN/PROFILE/SET_USER_PROFILE\": {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case \"SN/PROFILE/SET_STATUS\": {\r\n            return {...state, status: action.textStatus}\r\n        }\r\n        case \"SN/PROFILE/DELETE_POST\": {\r\n            return {...state, postData: state.postData.filter(p => p.id !== action.postId)}\r\n        }\r\n        case 'SN/PROFILE/SAVE_PHOTO_SUCCESS':\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ProfileActionTypes = addPostType | setUsersProfileType | SetStatusType | DeletePostType | SavePhotosSuccess\r\n\r\ntype addPostType = ReturnType<typeof addPost>\r\nexport const addPost = (postText: string) => ({type: \"SN/PROFILE/ADD-POST\", postText} as const)\r\n\r\ntype setUsersProfileType = ReturnType<typeof setUsersProfile>\r\nexport const setUsersProfile = (profile: ProfileType) => ({type: \"SN/PROFILE/SET_USER_PROFILE\", profile} as const)\r\n\r\ntype SetStatusType = ReturnType<typeof setStatus>\r\nexport const setStatus = (textStatus: string) => ({type: \"SN/PROFILE/SET_STATUS\", textStatus} as const)\r\n\r\ntype DeletePostType = ReturnType<typeof deletePost>\r\nexport const deletePost = (postId: number) => ({type: \"SN/PROFILE/DELETE_POST\", postId} as const)\r\n\r\ntype SavePhotosSuccess = ReturnType<typeof savePhotoSuccess>\r\nexport const savePhotoSuccess = (photos: PhotosType) => ({type: 'SN/PROFILE/SAVE_PHOTO_SUCCESS', photos} as const)\r\n\r\n\r\nexport const getCurrenUsersProfile = (userId: number): AppThunkType => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUsersProfile(response.data))\r\n}\r\n\r\nexport const getStatusProfile = (userId: number) => async (dispatch: Dispatch) => {\r\n    let res = await profileAPI.getStatusProfile(userId)\r\n    dispatch(setStatus(res.data))\r\n}\r\n\r\nexport const updateStatus = (status: string): AppThunkType => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n}\r\n\r\nexport const savePhoto = (file: File): AppThunkType => async (dispatch) => {\r\n    let data = await profileAPI.savePhoto(file)\r\n    if (data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType): AppThunkType => async (dispatch, getState) => {\r\n    let userID = getState().auth.id\r\n    let data = await profileAPI.saveProfile(profile);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getCurrenUsersProfile(userID as number))\r\n    } else {\r\n        dispatch(setAppError(data.messages[0]))\r\n    }\r\n    return\r\n}","import * as React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert, {AlertProps} from '@mui/material/Alert';\r\nimport {connect} from \"react-redux\";\r\nimport {setAppError} from \"../../reducers/app-reducer\";\r\nimport {AppStateType} from \"../../store/store\";\r\n\r\ntype mapStateToPropsType = {\r\n    errorApp: string | null\r\n}\r\n\r\ntype mapDispatchToProps = {\r\n    setAppError: (error:string|null) => void\r\n}\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n    props,\r\n    ref,\r\n) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nfunction ErrorSnackbars(props:mapDispatchToProps&mapStateToPropsType) {\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        props.setAppError(null)\r\n    };\r\n\r\n    const isOpen = props.errorApp !== null\r\n\r\n    return (\r\n        <Snackbar anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}} open={isOpen} autoHideDuration={3000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"warning\" sx={{width: '100%', height:\"80px\",alignItems:\"center\",fontSize:\"large\"}}>\r\n                {props.errorApp}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        errorApp: state.app.error\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setAppError})(ErrorSnackbars)","type dialogsDataType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\ntype messagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type dialogReducerType = {\r\n    dialogsData: Array<dialogsDataType>\r\n    messagesData: Array<messagesDataType>\r\n}\r\n\r\nlet initialState: dialogReducerType = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Sveta\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"\r\n        },\r\n        {id: 3, name: \"Sasha\", image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {\r\n            id: 4,\r\n            name: \"Viktor\",\r\n            image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Valera\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your it-kamasutra?\"},\r\n        {id: 3, message: \"yo Hi\"},\r\n        {id: 4, message: \"Hello Hi\"},\r\n        {id: 5, message: \"Yo yo yo\"},\r\n    ],\r\n}\r\n\r\nconst dialogReducer = (state: dialogReducerType = initialState, action: DialogActionTypes) => {\r\n    switch (action.type) {\r\n        case 'SN/DIALOGS/SEND_MESSAGE': {\r\n            let text = action.newMessageText;\r\n           return  text !== \"\" ? {...state, messagesData: [...state.messagesData, {id: 6, message: text}]} : state\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type DialogActionTypes = MessageType\r\nexport type MessageType = ReturnType<typeof onSendMessage>\r\nexport const onSendMessage = (newMessageText: string) => ({type: 'SN/DIALOGS/SEND_MESSAGE', newMessageText} as const)\r\n\r\nexport default dialogReducer;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport {ProfileActionTypes, profileReduser} from \"../reducers/profile-reducer\";\r\nimport dialogReducer, {DialogActionTypes} from \"../reducers/dialogs-reduser\";\r\nimport sidebarReducer from \"../reducers/sidebar-reducer\";\r\nimport {ActionUsersType, usersReducer} from \"../reducers/user-reducer\";\r\nimport {ActionAuthReducerType, authReducer} from \"../reducers/auth-reducer\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {AppActionType, appReducer} from \"../reducers/app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReduser,\r\n    dialogPage: dialogReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\nexport type RootAppActionType =\r\n    ActionAuthReducerType\r\n    |AppActionType\r\n    |DialogActionTypes\r\n    |ProfileActionTypes\r\n    // |SideBarActionTypes\r\n    |ActionUsersType;\r\n\r\nexport type AppThunkType = ThunkAction<void, AppStateType, unknown, RootAppActionType>\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}\r\n\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||compose\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\n//@ts-ignore\r\nwindow.store= store","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {CardContent} from \"@material-ui/core\";\r\nimport {EmojiEmotions, FiberNew, LibraryMusic, Markunread, Person, Settings} from \"@material-ui/icons\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <div className={style.nav}>\r\n            <CardContent className={style.wrapperItems}>\r\n\r\n                <NavLink to=\"/profile\" activeClassName={style.active}>\r\n                    <div className={style.item}>\r\n                        <Person/>\r\n                        <span className={style.spanLink}>Profile</span>\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/dialogs\" activeClassName={style.active}>\r\n                    <div className={style.item}>\r\n                        <Markunread/>\r\n                        <span className={style.spanLink}>Messages</span>\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/users\" activeClassName={style.active}>\r\n                    <div className={style.item}>\r\n                        <EmojiEmotions/>\r\n                        <span className={style.spanLink}>Users</span>\r\n                    </div>\r\n                </NavLink>\r\n                <a>\r\n                    <div className={style.item}>\r\n                        <FiberNew/>\r\n                        <span className={style.spanLink}>News</span>\r\n                    </div>\r\n                </a>\r\n                <div className={style.item}>\r\n                    <LibraryMusic/>\r\n                    <span>Music</span>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <Settings/>\r\n                    <span>Settings</span>\r\n                </div>\r\n            </CardContent>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import * as React from \"react\";\r\nimport {Box, Button, Drawer, List, ListItem} from \"@material-ui/core\";\r\nimport {Menu} from \"@material-ui/icons\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\ntype Anchor = \"left\"\r\n\r\nexport const HeaderMenu = () => {\r\n    const [state, setState] = React.useState({\r\n        left: false,\r\n\r\n    });\r\n\r\n    const toggleDrawer = (anchor: Anchor, open: boolean) => (\r\n        event: React.KeyboardEvent | React.MouseEvent\r\n    ) => {\r\n        if (\r\n            event.type === \"keydown\" &&\r\n            ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n                (event as React.KeyboardEvent).key === \"Shift\")\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setState({...state, [anchor]: open});\r\n    };\r\n\r\n    const list = (anchor: Anchor) => (\r\n        <Box\r\n            style={{ background:\"linear-gradient(326deg, rgba(255,108,2,1) 30%, rgba(2,152,142,1) 67%)\",\r\n                height:\"100%\", padding:\"0\"}}\r\n            sx={{width: 250}}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List style={{padding:\"0\", margin:\"0\"}}>\r\n                <ListItem style={{padding:\"0\", margin:\"0\"}}>\r\n                    <Navbar/>\r\n                </ListItem>\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <Button size={'large'} onClick={toggleDrawer(\"left\", true)}> <Menu style={{color:\"white\"}} /> </Button>\r\n                <Drawer\r\n                    anchor={\"left\"}\r\n                    open={state[\"left\"]}\r\n                    onClose={toggleDrawer(\"left\", false)}\r\n                >\r\n                    {list(\"left\")}\r\n                </Drawer>\r\n            </>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {AppBar, Button, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {HeaderMenu} from \"./HeaderMenu\";\r\nimport headerImages from \"../../images/headerImages.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.css'\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    logOut: () => void\r\n    photo?: string | null\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <AppBar className={s.appBar} style={{backgroundColor: \"#02988e\"}} position={\"fixed\"}>\r\n            <Toolbar>\r\n                <div className={s.headerMenu}>\r\n                    <HeaderMenu/>\r\n                </div>\r\n                <Typography variant={\"h1\"} component=\"div\" sx={{flexGrow: 1}}/>\r\n                {props.isAuth ? <div className={s.login}>\r\n                        <div className={s.headerMain}>\r\n                            <NavLink to={'/profile'} >\r\n                            {props.login}\r\n                        </NavLink>\r\n                        </div>\r\n                        <Button className={s.button} size={\"small\"} onClick={props.logOut} color={\"inherit\"} variant={\"outlined\"}>Log out</Button>\r\n                    </div>\r\n                    : <NavLink to={\"/login\"} style={{color: \"white\",fontSize:\"20px\", fontWeight: \"bold\"}}>LOGIN</NavLink>}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {connect} from \"react-redux\";\r\nimport {authUserLogin, logOut} from \"../../reducers/auth-reducer\";\r\n\r\ntype MapStateUserType = {\r\n    isAuth: boolean,\r\n    login: string | null,\r\n    photo?: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    authUserLogin: () => void\r\n    logOut: () => void\r\n}\r\ntype UsersLoginPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.Component<UsersLoginPropsType> {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProp = (state: AppStateType): MapStateUserType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        photo: state.profilePage.profile?.photos.large\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProp, {authUserLogin, logOut})(HeaderContainer)","import React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport style from './LoginStyle.module.css'\r\nimport {Button, Checkbox, FormControlLabel, Paper, TextField, Typography} from \"@material-ui/core\";\r\nimport * as yup from 'yup';\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../reducers/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {LoginApiType} from \"../../api/paramsAPI\";\r\nimport ErrorSnackbars from \"../common/errorSnackbar\";\r\n\r\ntype mapDispatchToPropsType = {\r\n    loginTC: (data: LoginApiType) => void\r\n}\r\n\r\ntype mapStateToProsType = {\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\ntype loginType = mapStateToProsType & mapDispatchToPropsType\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup.string()\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup.string()\r\n        .min(4, 'Minimum 4 characters length')\r\n        // .matches(/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}/, \"Password must meet complexity requirements\")\r\n        .required('Password is required'),\r\n});\r\n\r\nconst LoginForm = (props: { onSubmit: (data: LoginApiType) => void, captcha: string | null }) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n            captcha: \"\",\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            props.onSubmit(values)\r\n        },\r\n    });\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={style.form}>\r\n                    <Paper className={style.loginFormContainer}>\r\n\r\n                        <div className={style.prompt}>\r\n                            <p>Use common test account credentials:</p>\r\n                            <p>Email: <span style={{color: \"orange\"}}>free@samuraijs.com</span></p>\r\n                            <p>Password: <span style={{color: \"orange\"}}>free</span></p>\r\n                        </div>\r\n\r\n                        <Typography color={\"orange\"} component={\"h1\"} variant={\"h4\"} fontSize={\"xxx-large\"}>\r\n                            Login\r\n                        </Typography>\r\n                        <TextField sx={{minWidth: \"250px\"}} size={\"small\"} color={\"success\"}\r\n                                   id=\"email\"\r\n                                   name=\"email\"\r\n                                   label=\"Email\"\r\n                                   value={formik.values.email}\r\n                                   onChange={formik.handleChange}\r\n                                   error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                   helperText={formik.touched.email && formik.errors.email}\r\n                                   required\r\n                        />\r\n                        <TextField sx={{minWidth: \"250px\"}} size={\"small\"} color={\"success\"}\r\n                                   id=\"password\"\r\n                                   name=\"password\"\r\n                                   label=\"Password\"\r\n                                   type=\"password\"\r\n                                   value={formik.values.password}\r\n                                   onChange={formik.handleChange}\r\n                                   error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                   helperText={formik.touched.password && formik.errors.password}\r\n                                   required\r\n                        />\r\n                        <FormControlLabel onChange={formik.handleChange} control={<Checkbox {...formik.getFieldProps(\"rememberMe\")}\r\n                                                                                            checked={formik.values.rememberMe}/>} label=\"Remember me\"/>\r\n\r\n                        {props.captcha && <div style={{display: \"flex\", flexDirection: \"column\", gap:\"10px\"}}>\r\n                            <img src={props.captcha}/>\r\n                            <TextField sx={{minWidth: \"250px\"}} variant={\"standard\"} size={\"small\"} color={\"success\"}\r\n                                       id=\"captcha\"\r\n                                       {...formik.getFieldProps(\"captcha\")}\r\n                                       required\r\n                            />\r\n                        </div>\r\n                        }\r\n\r\n\r\n                        <Button color={\"warning\"} variant={\"contained\"} type=\"submit\">Submit</Button>\r\n\r\n                    </Paper>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Login = (props: loginType) => {\r\n    const submitOn = (values: LoginApiType) => {\r\n        props.loginTC(values)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <LoginForm captcha={props.captchaUrl} onSubmit={submitOn}/>\r\n            <ErrorSnackbars/>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state: AppStateType): mapStateToProsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        captchaUrl: state.auth.captchaUrl,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {loginTC})(Login)\r\n","import s from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Avatar, Button, Paper} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {usersType} from \"../../reducers/user-reducer\";\r\n\r\ntype PropsType = {\r\n    pageSize: number\r\n    user: usersType\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n    followingProgress: number[]\r\n}\r\n\r\nexport const User = ({user, ...props}: PropsType) => {\r\n    return (\r\n\r\n            <Paper elevation={3} sx={{borderRadius: \"20px\"}}>\r\n                <div>\r\n                    <div className={s.user}>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                                <div key={user.id}>\r\n                                    {user.photos.small !== null ? <img src={user.photos.small} className={s.userPhoto}/>\r\n                                        : <Avatar className={s.userPhoto} sx={{\r\n                                            fontSize: \"50px\",\r\n                                            width: \"100px\",\r\n                                            height: \"100px\",\r\n                                            background: \"#10ab9e\"\r\n                                        }}> {user.name[0].toUpperCase()}</Avatar>}\r\n                                </div>\r\n\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className={s.name}>\r\n                            <span className={s.span}>{user.name.substr(1, 15)}</span>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed\r\n                                ? <Button variant={\"outlined\"} size={'small'} color={\"error\"} disabled={props.followingProgress.some(id => id === user.id)}\r\n                                          onClick={() => {\r\n                                              props.unfollow(user.id)\r\n                                          }}>Unfollow</Button>\r\n\r\n                                : <Button variant={\"contained\"} color={\"warning\"} size={'small'} disabled={props.followingProgress.some(id => id === user.id)}\r\n                                          onClick={() => {\r\n                                              props.follow(user.id)\r\n                                          }}>Follow</Button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {usersType} from \"../../reducers/user-reducer\";\r\nimport {User} from \"./User\";\r\nimport s from \"./Users.module.css\";\r\n\r\ntype UsersType = {\r\n    pageSize: number\r\n    users: usersType[]\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n    followingProgress: number[]\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n    const photoUser = props.users.filter(f => f.photos.small !== null)\r\n    const notPhotoUser = props.users.filter(f => f.photos.small == null)\r\n    const usersDisplay = [...photoUser, ...notPhotoUser]\r\n    return (\r\n        <div>\r\n            <div className={s.usersContainer}>\r\n                {usersDisplay.map(u => <User key={u.id}\r\n                                             pageSize={props.pageSize}\r\n                                             user={u}\r\n                                             unfollow={props.unfollow}\r\n                                             follow={props.follow}\r\n                                             followingProgress={props.followingProgress}/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/preloader.3fb26d9b.gif\";","import React from \"react\";\r\nimport preloader from \"../../images/preloader.gif\";\r\n\r\nexport const Preloader = () => {\r\n\r\n    let divStyle = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n\r\n    let imgStyle = {\r\n        width: \"80px\",\r\n        height: \"100px\",\r\n    }\r\n    return <div style={divStyle}> <img style={imgStyle} src={preloader}/> </div>\r\n}","\r\n\r\nexport const updateOjectInArray = (items:any,itemId:any,objPropName:any,newObjProps:any) => {\r\n    return items.map((u:any) => {\r\n        if (u[objPropName] === itemId){\r\n            return {...u,...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {userAPI} from \"../api/paramsAPI\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateOjectInArray} from \"../utils/object-halper\";\r\nimport {APIResponseType, AppThunkType} from \"../store/store\";\r\n\r\n\r\nexport type usersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string | null\r\n    photos: { small: string, large: string }\r\n}\r\ntype usersReduceType = {\r\n    users: usersType[],\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 55,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProgress: [],\r\n}\r\n\r\nexport const usersReducer = (state: usersReduceType = initialState, action: ActionUsersType): usersReduceType => {\r\n    switch (action.type) {\r\n        case 'SN/USERS/FOLLOW': {\r\n            return {...state, users: updateOjectInArray(state.users, action.userID, \"id\", {followed:true})}\r\n        }\r\n        case 'SN/USERS/UNFOLLOW': {\r\n            return {...state, users: updateOjectInArray(state.users, action.userID, \"id\", {followed:false})}\r\n        }\r\n        case 'SN/USERS/SET_USERS': {\r\n            return {...state, users: action.users}\r\n        }\r\n        case 'SN/USERS/SET_CURRENT_PAGE': {\r\n            return {...state, currentPage: action.page}\r\n        }\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT': {\r\n            return {...state, totalUserCount: action.totalCount}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING': {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS': {\r\n            return {\r\n                ...state,\r\n                followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ActionUsersType = acceptFollowType | acceptUnfollowType | setUsersType | setCurrentPageType\r\n    | setTotalUsersCountType | toggleFetchingType | ToggleFollowingProgressType\r\n\r\nexport type acceptFollowType = ReturnType<typeof acceptFollow>\r\nexport const acceptFollow = (userID: number) => ({type: 'SN/USERS/FOLLOW', userID} as const)\r\n\r\nexport type acceptUnfollowType = ReturnType<typeof acceptUnfollow>\r\nexport const acceptUnfollow = (userID: number) => ({type: 'SN/USERS/UNFOLLOW', userID: userID} as const)\r\n\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: usersType[]) => ({type: 'SN/USERS/SET_USERS', users} as const)\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (page: number) => ({type: 'SN/USERS/SET_CURRENT_PAGE', page} as const)\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: 'SN/USERS/SET_TOTAL_USERS_COUNT', totalCount} as const)\r\n\r\nexport type toggleFetchingType = ReturnType<typeof toggleFetching>\r\nexport const toggleFetching = (isFetching: boolean) => ({type: 'SN/USERS/TOGGLE_IS_FETCHING', isFetching} as const)\r\n\r\nexport type ToggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId} as const)\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => async (dispatch: Dispatch) => {\r\n    dispatch(toggleFetching(true));\r\n    let response = await userAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setTotalUsersCount(response.totalCount));\r\n    dispatch(toggleFetching(false));\r\n    dispatch(setCurrentPage(currentPage));\r\n\r\n}\r\n\r\n\r\nexport const folowUnfolowFlow = async (dispatch:Dispatch<ActionUsersType>,userId:number, apiMethod:(userId: number) => Promise<APIResponseType>, actionCreator:(userId: number) => ActionUsersType ) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let res = await apiMethod(userId)\r\n    if (res.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (id: number):AppThunkType => async (dispatch) => {\r\n   await folowUnfolowFlow(dispatch, id, userAPI.followUsers.bind(userAPI), acceptFollow)\r\n}\r\n\r\nexport const unfollow = (id: number):AppThunkType => async (dispatch) => {\r\n    await folowUnfolowFlow(dispatch, id, userAPI.unfollowUsers.bind(userAPI), acceptUnfollow)\r\n}\r\n","import {AppStateType} from \"../store/store\";\r\n\r\nexport const getUsersSelect = (state:AppStateType) => {\r\n return state.usersPage.users\r\n}\r\nexport const getPageSize = (state:AppStateType) => {\r\n return state.usersPage.pageSize\r\n}\r\nexport const getTotalCount = (state:AppStateType) => {\r\n return state.usersPage.totalUserCount\r\n}\r\nexport const getCurrentPage = (state:AppStateType) => {\r\n return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state:AppStateType) => {\r\n return state.usersPage.isFetching\r\n}\r\nexport const getFollowingProgress = (state:AppStateType) => {\r\n  return state.usersPage.followingProgress\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport s from \"./Users.module.css\";\r\nimport {Preloader} from \"../common/Preloader\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage,\r\n    unfollow,\r\n    usersType\r\n} from \"../../reducers/user-reducer\";\r\nimport {Pagination} from \"@material-ui/core\";\r\nimport {compose} from \"redux\";\r\nimport {Paper} from \"@mui/material\";\r\nimport {getCurrentPage, getFollowingProgress, getIsFetching, getPageSize, getTotalCount, getUsersSelect} from \"../../reducers/users-selector\";\r\n\r\ntype MapStateUserType = {\r\n    users: usersType[]\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n}\r\nexport type MapDispatchPropsType = {\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setCurrentPage: (numberPage: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\ntype UsersPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\nconst stylePaginatorPaper = {\r\n    minWidth: \"70px\",\r\n    minHeight: \"40px\",\r\n    alignItems: \"center\",\r\n    display: \"flex\"\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType, {}> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUserCount / this.props.pageSize)\r\n\r\n        return (\r\n            <div className={s.containerWrapper}>\r\n                <div className={s.paginator}>\r\n\r\n                    <Paper sx={stylePaginatorPaper}>\r\n                        <Pagination  color={\"standard\"} onChange={(event, page) => {\r\n                            this.onPageChanged(page)\r\n                        }} count={pagesCount} variant={'text'} shape=\"circular\" defaultPage={1} siblingCount={3}\r\n                                    size={\"small\"}/>\r\n                    </Paper>\r\n                </div>\r\n                <>\r\n                    {this.props.isFetching ? <Preloader/>\r\n                        : null}\r\n                    <Users\r\n                        pageSize={this.props.pageSize}\r\n                        users={this.props.users}\r\n                        unfollow={this.props.unfollow}\r\n                        follow={this.props.follow}\r\n                        followingProgress={this.props.followingProgress}\r\n                    />\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsersSelect(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, getUsers})\r\n)(UsersContainer)","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {CircularProgress, Grid, LinearProgress} from \"@material-ui/core\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {Paper} from \"@mui/material\";\r\nimport style from './components/Header/Header.module.css'\r\nimport Login from \"./components/login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./reducers/app-reducer\";\r\nimport {AppStateType} from \"./store/store\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n\r\nconst DialogContainer = React.lazy(() => import( \"./components/Dialogs/DialogsContainer\"))\r\nconst ProfileContainer = React.lazy(() => import( \"./components/Profile/ProfileContainer\"))\r\n\r\ntype MapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\n\r\ntype PropsType = MapDispatchToPropsType & MapStateToPropsType\r\n\r\nclass App extends React.Component<PropsType, {}> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <LinearProgress color=\"success\"/>\r\n        }\r\n\r\n        return (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <HeaderContainer/>\r\n                </Grid>\r\n\r\n                <div className={style.wrapperContent}>\r\n\r\n                    <Paper elevation={6} className={style.navbarApp}>\r\n                        <Navbar/>\r\n                    </Paper>\r\n\r\n                    <div className={style.content}>\r\n                        <Switch>\r\n                            <Route exact path={'/'} render={() => <Redirect to={'/profile'}/>}/>\r\n\r\n                            <React.Suspense fallback={<div><CircularProgress color={\"success\"}/></div>}>\r\n\r\n                                <Route path=\"/dialogs\"\r\n                                       render={() => <DialogContainer/>}/>\r\n\r\n                                <Route path=\"/profile/:userId?\"\r\n                                       render={() => <ProfileContainer/>}/>\r\n\r\n\r\n                                <Route path=\"/users\"\r\n                                       render={() => <UsersContainer/>}/>\r\n\r\n                                <Route path=\"/login\"\r\n                                       render={() => <Login/>}/>\r\n                            </React.Suspense>\r\n                        </Switch>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    initialized: state.app.initialized,\r\n})\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App);\r\n","type imagesDataType = {\r\n    image: string\r\n}\r\nexport type sidebarReducerType = {\r\n    imagesData: Array<imagesDataType>\r\n}\r\n\r\nlet initialState: sidebarReducerType = {\r\n    imagesData: [\r\n        {image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state: sidebarReducerType = initialState, action: SideBarActionTypes) => {\r\n    return state\r\n}\r\n\r\nexport type SideBarActionTypes = {}\r\n\r\nexport default sidebarReducer;","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport React from \"react\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter><App/></HashRouter>\n    </Provider>\n    , document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios, { AxiosResponse } from \"axios\";\r\nimport {usersType} from \"../reducers/user-reducer\";\r\nimport {APIResponseType} from \"../store/store\";\r\nimport {PhotosType, ProfileType, UserType} from \"../reducers/profile-reducer\";\r\n\r\n\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\ntype GetTypeResponseUserAPI = {\r\n    items: usersType[]\r\n    totalCount: number\r\n    error: null\r\n}\r\n\r\ntype ResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: T\r\n}\r\n\r\nexport type LoginApiType = {\r\n    email:string\r\n    password:string\r\n    rememberMe:boolean\r\n    captcha:string|null\r\n}\r\n\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"21d990e0-eae8-42bd-a185-362e1cc41b0a\"\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<GetTypeResponseUserAPI>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data);\r\n    },\r\n\r\n    unfollowUsers(id: number) {\r\n        return instance.delete<ResponseType>(`follow/${id}`).then(res=>res.data)\r\n    },\r\n\r\n    followUsers(id: number) {\r\n        return instance.post<APIResponseType>(`follow/${id}`).then(res=> res.data)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    getMePhoto(userId: number) {\r\n        return instance.get<UserType>('profile/'+userId)\r\n    },\r\n    me() {\r\n        return instance.get<ResponseType<{id: number,email: string,login: string}>>('auth/me').then(res=>res.data)\r\n    },\r\n    login(params: LoginApiType){\r\n        return instance.post<LoginApiType,AxiosResponse<ResponseType<{ userId: number }>>>(`auth/login/`, params)\r\n    },\r\n    logOut(){\r\n        return instance.delete<ResponseType>(`/auth/login/`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number | null) {\r\n        return instance.get<ProfileType>(`profile/` + userId)\r\n    },\r\n    getStatusProfile(id: number) {\r\n        return instance.get<string>(`profile/status/` + id)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<{status:string},AxiosResponse<ResponseType>>(`profile/status/`, {status})\r\n    },\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put<FormData,AxiosResponse<APIResponseType<SavePhotoResponseDataType>>>(`profile/photo`, formData , {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => res.data);\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<ProfileType,AxiosResponse<APIResponseType>>(`profile`, profile).then(res => res.data);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl(){\r\n        return instance.get<GetCaptchaUrlResponseType>(`/security/get-captcha-url`);\r\n    }\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1ElVi\",\"item\":\"Navbar_item__89gUU\",\"wrapperItems\":\"Navbar_wrapperItems__W0LD1\",\"active\":\"Navbar_active__1CoiD\",\"friendsSidebar\":\"Navbar_friendsSidebar__3YpIl\",\"sidebarElements\":\"Navbar_sidebarElements__mbaRW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__17NFO\",\"selectedPage\":\"Users_selectedPage__ghVA2\",\"usersContainer\":\"Users_usersContainer__2ccAj\",\"user\":\"Users_user__1Aozu\",\"name\":\"Users_name__3CiDE\",\"paginator\":\"Users_paginator__2w3tD\",\"containerWrapper\":\"Users_containerWrapper__3pwFj\"};","import {authUserLogin} from \"./auth-reducer\";\r\nimport {AppThunkType} from \"../store/store\";\r\n\r\ntype AppReducerType = {\r\n    error: string | null\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState = {\r\n    error: null,\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state: AppReducerType = initialState, action: AppActionType): AppReducerType => {\r\n    switch (action.type) {\r\n        case \"SN/APP/SET_ERROR\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        case \"SN/APP/INITIALIZED_SUCCESS\": {\r\n            return {...state, initialized: true}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type AppActionType = SetAppErrorType | InitialSuccessType\r\n\r\ntype SetAppErrorType = ReturnType<typeof setAppError>\r\nexport const setAppError = (error: string | null) => ({type: \"SN/APP/SET_ERROR\", error} as const)\r\n\r\ntype InitialSuccessType = ReturnType<typeof initializedSuccess>\r\nexport const initializedSuccess = () => ({type: \"SN/APP/INITIALIZED_SUCCESS\"} as const)\r\n\r\nexport const initializeApp = (): AppThunkType => async (dispatch) => {\r\n    let promise = await dispatch(authUserLogin())\r\n    await Promise.all([promise])\r\n    dispatch(initializedSuccess())\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2A7wp\",\"headerMenu\":\"Header_headerMenu__7Rfoc\",\"content\":\"Header_content__1LWy0\",\"navbarApp\":\"Header_navbarApp__1bEc1\",\"wrapperContent\":\"Header_wrapperContent__11Y7U\",\"photoHeader\":\"Header_photoHeader__2jn69\",\"headerMain\":\"Header_headerMain__1EyzM\",\"login\":\"Header_login__3E0zh\",\"button\":\"Header_button__nopcK\"};","import {authAPI, LoginApiType, securityAPI} from \"../api/paramsAPI\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppError} from \"./app-reducer\";\r\nimport {AppThunkType} from \"../store/store\";\r\n\r\ntype AuthReduceType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n}\r\n\r\nlet initialState: AuthReduceType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: ActionAuthReducerType): AuthReduceType => {\r\n    switch (action.type) {\r\n        case \"SN/auth/SET_USER_DATA\": {\r\n            return {...state, ...action.data}\r\n        }\r\n        case 'SN/auth/GET_CAPTCHA_URL_SUCCESS': {\r\n            return {...state, captchaUrl: action.captchaUrl}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ActionAuthReducerType = SetUserDataType | getCaptchaSuccessUrlType\r\n\r\ntype SetUserDataType = ReturnType<typeof setUsersData>\r\nexport const setUsersData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: \"SN/auth/SET_USER_DATA\",\r\n    data: {id, email, login, isAuth}\r\n} as const)\r\n\r\ntype getCaptchaSuccessUrlType = ReturnType<typeof getCaptchaUrlSuccess>\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string) => ({\r\n    type: 'SN/auth/GET_CAPTCHA_URL_SUCCESS',\r\n    captchaUrl,\r\n} as const)\r\n\r\n\r\nexport const authUserLogin = () => async (dispatch: Dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.resultCode === 0) {\r\n        const {id, email, login} = response.data;\r\n        dispatch(setUsersData(id, email, login, true))\r\n    }\r\n    return response\r\n}\r\n\r\nexport const loginTC = (data: LoginApiType): AppThunkType => async (dispatch) => {\r\n    let res = await authAPI.login(data)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(authUserLogin())\r\n    } else {\r\n        if (res.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        dispatch(setAppError(res.data.messages[0]))\r\n    }\r\n}\r\n\r\nexport const logOut = () => async (dispatch: Dispatch) => {\r\n    let res = await authAPI.logOut()\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setUsersData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: Dispatch) => {\r\n    let res = await securityAPI.getCaptchaUrl()\r\n    const captcha = res.data.url\r\n    dispatch(getCaptchaUrlSuccess(captcha))\r\n\r\n}\r\n"],"sourceRoot":""}