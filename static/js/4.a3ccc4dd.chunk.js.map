{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","../node_modules/@material-ui/core/IconButton/iconButtonClasses.js","../node_modules/@material-ui/core/IconButton/IconButton.js","components/Dialogs/Message/Message.tsx","../node_modules/@material-ui/icons/esm/Send.js","components/Dialogs/Dialogs.tsx","components/hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","path","id","className","style","containerDialog","to","activeClassName","active","dialogsStyle","src","image","imageDialog","name","getIconButtonUtilityClass","slot","generateUtilityClass","iconButtonClasses","generateUtilityClasses","_excluded","IconButtonRoot","styled","ButtonBase","overridesResolver","styles","ownerState","root","color","capitalize","edge","size","theme","_extends","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","palette","action","transition","transitions","create","duration","shortest","backgroundColor","alpha","hoverOpacity","marginLeft","marginRight","main","disabled","IconButton","React","inProps","ref","useThemeProps","children","disableFocusRipple","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","centerRipple","focusRipple","MessageComponent","messageStyle","wrapper_style","wrapper","message","createSvgIcon","d","AddMessageForm","useFormik","initialValues","newMessage","onSubmit","values","resetForm","onSendMessage","handleSubmit","formDialogs","TextField","sx","width","background","multiline","maxRows","onChange","handleChange","placeholder","value","type","Send","Dialogs","dialogsElements","dialogPage","dialogsData","map","dialog","messagesElements","messagesData","messages","Message","dialogs","dialogsItem","buttonMessage","mapStateToProps","state","isAuth","auth","compose","connect","Component","restProps"],"mappings":"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","file":"static/js/4.a3ccc4dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3wW4-\",\"dialogsItem\":\"Dialogs_dialogsItem__1lURH\",\"messages\":\"Dialogs_messages__1DjYG\",\"dialogsStyle\":\"Dialogs_dialogsStyle__3g3kO\",\"active\":\"Dialogs_active__2sGsR\",\"wrapper\":\"Dialogs_wrapper__34ZY3\",\"wrapper_style\":\"Dialogs_wrapper_style__APWWx\",\"messageStyle\":\"Dialogs_messageStyle__1ofTH\",\"imageDialog\":\"Dialogs_imageDialog__10QW8\",\"buttonMessage\":\"Dialogs_buttonMessage__2F1wk\",\"formDialogs\":\"Dialogs_formDialogs__3Yp5k\"};","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype dialogsType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\n\r\nconst DialogItem = (props:dialogsType) => {\r\n    const path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={style.containerDialog}>\r\n\r\n            <NavLink to={path} activeClassName={style.active} className={style.dialogsStyle}>\r\n                 <img src={props.image} className={style.imageDialog}/>\r\n                <div> {props.name}</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getIconButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiIconButton', slot);\n}\nconst iconButtonClasses = generateUtilityClasses('MuiIconButton', ['root', 'disabled', 'colorInherit', 'colorPrimary', 'colorSecondary', 'edgeStart', 'edgeEnd', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default iconButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"edge\", \"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport iconButtonClasses, { getIconButtonUtilityClass } from './iconButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    color,\n    edge,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', color !== 'default' && `color${capitalize(color)}`, edge && `edge${capitalize(edge)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getIconButtonUtilityClass, classes);\n};\n\nconst IconButtonRoot = styled(ButtonBase, {\n  name: 'MuiIconButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.edge && styles[`edge${capitalize(ownerState.edge)}`], styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  textAlign: 'center',\n  flex: '0 0 auto',\n  fontSize: theme.typography.pxToRem(24),\n  padding: 8,\n  borderRadius: '50%',\n  overflow: 'visible',\n  // Explicitly set the default value to solve a bug on IE11.\n  color: theme.palette.action.active,\n  transition: theme.transitions.create('background-color', {\n    duration: theme.transitions.duration.shortest\n  }),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.action.active, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, ownerState.color !== 'inherit' && ownerState.color !== 'default' && {\n  color: theme.palette[ownerState.color].main,\n  '&:hover': {\n    backgroundColor: alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.size === 'small' && {\n  padding: 5,\n  fontSize: theme.typography.pxToRem(18)\n}, ownerState.size === 'large' && {\n  padding: 12,\n  fontSize: theme.typography.pxToRem(28)\n}, {\n  [`&.${iconButtonClasses.disabled}`]: {\n    backgroundColor: 'transparent',\n    color: theme.palette.action.disabled\n  }\n}));\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nconst IconButton = /*#__PURE__*/React.forwardRef(function IconButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiIconButton'\n  });\n\n  const {\n    edge = false,\n    children,\n    className,\n    color = 'default',\n    disabled = false,\n    disableFocusRipple = false,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    edge,\n    color,\n    disabled,\n    disableFocusRipple,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The icon to display.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const found = React.Children.toArray(props.children).some(child => /*#__PURE__*/React.isValidElement(child) && child.props.onClick);\n\n    if (found) {\n      return new Error(['Material-UI: You are providing an onClick event listener to a child of a button element.', 'Prefer applying it to the IconButton directly.', 'This guarantees that the whole <button> will be responsive to click events.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default IconButton;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\n\r\n\r\ntype messageType = {\r\n    message: string\r\n}\r\n\r\n\r\nconst MessageComponent: React.FC<messageType> = (props) => {\r\n    return (\r\n        <div className={style.messageStyle}>\r\n\r\n            <div className={style.wrapper_style}/>\r\n\r\n            <div className={style.wrapper}>\r\n\r\n             <div>{props.message} </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default MessageComponent;","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {DialogPropsType} from \"./DialogsContainer\";\r\nimport style from './Dialogs.module.css'\r\nimport {useFormik} from 'formik';\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport MessageComponent from \"./Message/Message\";\r\nimport {Send} from \"@material-ui/icons\";\r\n\r\ntype AddMessageType = {\r\n    onSendMessage: (values: string) => void\r\n}\r\n\r\n\r\nconst AddMessageForm = (props: AddMessageType) => {\r\n    const message = useFormik({\r\n        initialValues: {\r\n            newMessage: '',\r\n        },\r\n        onSubmit: (values, {resetForm}) => {\r\n            props.onSendMessage(values.newMessage);\r\n            resetForm()\r\n        },\r\n    });\r\n    return (\r\n        <div>\r\n            <form onSubmit={message.handleSubmit}>\r\n                <div className={style.formDialogs}>\r\n                    <div>\r\n                        <TextField\r\n                            sx={{width: \"500px\", background: \"#ffffdb\"}}\r\n                            multiline={true}\r\n                            maxRows={10}\r\n                            onChange={message.handleChange}\r\n                            id=\"newMessage\"\r\n                            name=\"newMessage\"\r\n                            placeholder=\"New message...\"\r\n                            value={message.values.newMessage}\r\n                            size={\"small\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <IconButton color={\"warning\"} type=\"submit\" aria-label=\"delete\" size=\"small\">\r\n                            <Send fontSize={\"large\"}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props: DialogPropsType) => {\r\n\r\n    let dialogsElements = props.dialogPage.dialogsData.map(dialog => <DialogItem key={dialog.id} image={dialog.image} name={dialog.name} id={dialog.id}/>)\r\n    let messagesElements = props.dialogPage.messagesData.map(messages => <MessageComponent key={messages.id} message={messages.message}/>)\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <div className={style.buttonMessage}>\r\n                    <AddMessageForm onSendMessage={props.onSendMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state:AppStateType):MapStateToPropsType => {\r\n      return{\r\n          isAuth: state.auth.isAuth\r\n      }\r\n}\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>){\r\n    const RedirectComponent = (props:MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) {\r\n            return <Redirect to={\"/login\"}/>\r\n        }else {\r\n            return <Component {...restProps as T}/>\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}","import React from \"react\";\r\nimport {dialogReducerType, onSendMessage} from \"../../reducers/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStateDialogType = {\r\n    dialogPage: dialogReducerType\r\n}\r\ntype MapDispatchDialogType = {\r\n    onSendMessage: (newMessageText: string) => void\r\n}\r\nexport type DialogPropsType = MapStateDialogType & MapDispatchDialogType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,{onSendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}