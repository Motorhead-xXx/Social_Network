{"version":3,"sources":["components/Profile/myPosts/Post/Post.module.css","components/login/LoginStyle.module.css","components/Profile/Profile.module.css","components/Dialogs/Dialogs.module.css","reportWebVitals.ts","reducers/dialogs-reduser.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/hoc/withAuthRedirect.tsx","reducers/user-reducer.ts","components/Dialogs/DialogsContainer.tsx","components/Navbar/SideBar/Sidebar.tsx","api/settingAPI.ts","reducers/profile-reducer.tsx","reducers/sidebar-reducer.tsx","reducers/auth-reducer.ts","store/store.ts","components/Navbar/Navbar.tsx","components/Header/HeaderMenu.tsx","images/headerImages.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Users/Users.tsx","images/preloader.gif","components/common/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","images/spiderMan.svg","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/myPosts/Post/Post.tsx","components/Profile/myPosts/MyPosts.tsx","components/Profile/myPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/login/Login.tsx","App.tsx","index.tsx","components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/myPosts/MyPosts.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SEND_MESSAGE","initialState","dialogsData","id","name","image","messagesData","message","dialogReducer","state","action","type","text","newMessageText","DialogItem","props","path","className","style","containerDialog","to","activeClassName","active","dialogsStyle","src","imageDialog","MessageComponent","messageStyle","wrapper_style","wrapper","AddMessageForm","useFormik","initialValues","newMessage","onSubmit","values","resetForm","onSendMessage","handleSubmit","formDialogs","TextField","sx","width","background","multiline","maxRows","onChange","handleChange","placeholder","value","size","IconButton","color","Send","fontSize","Dialogs","dialogsElements","dialogPage","map","dialog","messagesElements","messages","Message","dialogs","dialogsItem","buttonMessage","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","restProps","ACTIONS_TYPE","compose","Sidebar","sidebarImg","addressAPI","axios","create","withCredentials","baseURL","headers","userAPI","currentPage","pageSize","get","res","data","delete","post","authAPI","profileAPI","userId","put","status","ADD_POST","SET_USERS_PROFILE","SET_STATUS","postData","likeCount","profile","setStatus","textStatus","imagesData","sidebarReducer","users","totalUserCount","isFetching","followingProgress","setCurrentPage","page","SET_CURRENT","toggleFetching","TOGGLE_FETCHING","toggleFollowingProgress","FOLLOWING_PROGRESS","SET_USER_DATA","SET_PHOTO","email","login","photo","rootReducer","combineReducers","profilePage","Date","getTime","postText","sidebar","usersPage","FOLLOW","m","userID","followed","UNFOLLOW","SET_USERS","SET_TOTAL_COUNT","totalCount","filter","store","createStore","applyMiddleware","thunkMiddleware","window","Navbar","getState","item","nav","CardContent","Person","Markunread","EmojiEmotions","FiberNew","LibraryMusic","Settings","HeaderMenu","anchor","React","left","setState","toggleDrawer","open","event","key","Button","onClick","Menu","Drawer","onClose","Box","height","padding","role","onKeyDown","List","margin","ListItem","Header","AppBar","backgroundColor","position","Toolbar","s","headerMain","headerMenu","Typography","variant","component","flexGrow","photoHeader","headerImages","fontWeight","HeaderContainer","this","authUserLogin","dispatch","response","resultCode","setUsersData","photos","small","Users","photoUser","f","notPhotoUser","usersDisplay","usersContainer","u","Paper","elevation","borderRadius","user","userPhoto","Avatar","toUpperCase","span","substr","disabled","some","unfollow","follow","Preloader","display","justifyContent","preloader","stylePaginatorPaper","minWidth","minHeight","alignItems","UsersContainer","getUsers","pageNumber","pagesCount","Math","ceil","containerWrapper","paginator","Pagination","onPageChanged","count","shape","defaultPage","siblingCount","items","ProfileStatus","editMod","activateEditMode","onBlurEditMode","updateStatus","onStatusChange","e","currentTarget","componentDidUpdate","prevProps","prevState","autoFocus","onBlur","onDoubleClick","ProfileInfo","containerProfileData","imageProfile","large","alt","info","Post","messagePost","likeType","AddNewPost","newPostText","label","MyPosts","postsElements","containerPost","addPost","posts","Profile","profileContainer","MyPostsContainer","ProfileContainer","match","params","getCurrenUsersProfile","getStatusProfile","console","log","withRouter","validationSchema","yup","required","password","min","matches","LoginForm","formik","toggle","form","loginFormContainer","maxWidth","error","touched","Boolean","errors","helperText","FormControlLabel","control","Checkbox","defaultChecked","Login","App","Grid","container","xs","wrapperContent","navbarApp","content","exact","render","DialogsContainer","rerenderEntireTree","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.4e401bef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__bSl-J\",\"messagePost\":\"Post_messagePost__3uuyM\",\"countLike\":\"Post_countLike__S3MtX\",\"likeType\":\"Post_likeType__3kNlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginStyle_form__3qARL\",\"loginFormContainer\":\"LoginStyle_loginFormContainer__1o_26\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Profile_img__2miqJ\",\"profileContainer\":\"Profile_profileContainer__clJbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2ljic\",\"dialogsItem\":\"Dialogs_dialogsItem__dkL1w\",\"messages\":\"Dialogs_messages__3CLYv\",\"dialogsStyle\":\"Dialogs_dialogsStyle__1WKEc\",\"active\":\"Dialogs_active__cWjhb\",\"wrapper\":\"Dialogs_wrapper__QWmPS\",\"wrapper_style\":\"Dialogs_wrapper_style__jqb8Y\",\"messageStyle\":\"Dialogs_messageStyle__3rO8r\",\"imageDialog\":\"Dialogs_imageDialog__3bOZI\",\"buttonMessage\":\"Dialogs_buttonMessage__Soa9S\",\"formDialogs\":\"Dialogs_formDialogs__2g_m_\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const SEND_MESSAGE = 'SEND-MESSAGES';\r\n\r\ntype dialogsDataType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\ntype messagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type dialogReducerType = {\r\n    dialogsData: Array<dialogsDataType>\r\n    messagesData: Array<messagesDataType>\r\n}\r\n\r\nlet initialState: dialogReducerType = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Sveta\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"\r\n        },\r\n        {id: 3, name: \"Sasha\", image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {\r\n            id: 4,\r\n            name: \"Viktor\",\r\n            image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Valera\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your it-kamasutra?\"},\r\n        {id: 3, message: \"yo Hi\"},\r\n        {id: 4, message: \"Hello Hi\"},\r\n        {id: 5, message: \"Yo yo yo\"},\r\n    ],\r\n}\r\n\r\nconst dialogReducer = (state: dialogReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let text = action.newMessageText;\r\n           return  text !== \"\" ? {...state, messagesData: [...state.messagesData, {id: 6, message: text}]} : state\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionTypes = messageType\r\nexport type messageType = ReturnType<typeof onSendMessage>\r\nexport const onSendMessage = (newMessageText: string) => ({type: SEND_MESSAGE, newMessageText} as const)\r\n\r\nexport default dialogReducer;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype dialogsType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\n\r\nconst DialogItem = (props:dialogsType) => {\r\n    const path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={style.containerDialog}>\r\n\r\n            <NavLink to={path} activeClassName={style.active} className={style.dialogsStyle}>\r\n                 <img src={props.image} className={style.imageDialog}/>\r\n                <div> {props.name}</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\n\r\n\r\ntype messageType = {\r\n    message: string\r\n}\r\n\r\n\r\nconst MessageComponent: React.FC<messageType> = (props) => {\r\n    return (\r\n        <div className={style.messageStyle}>\r\n\r\n            <div className={style.wrapper_style}/>\r\n\r\n            <div className={style.wrapper}>\r\n\r\n             <div>{props.message} </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default MessageComponent;","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {DialogPropsType} from \"./DialogsContainer\";\r\nimport style from './Dialogs.module.css'\r\nimport {useFormik} from 'formik';\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport MessageComponent from \"./Message/Message\";\r\nimport {Send} from \"@material-ui/icons\";\r\n\r\ntype AddMessageType = {\r\n    onSendMessage: (values: string) => void\r\n}\r\n\r\n\r\nconst AddMessageForm = (props: AddMessageType) => {\r\n    const message = useFormik({\r\n        initialValues: {\r\n            newMessage: '',\r\n        },\r\n        onSubmit: (values, {resetForm}) => {\r\n            props.onSendMessage(values.newMessage);\r\n            resetForm()\r\n        },\r\n    });\r\n    return (\r\n        <div>\r\n            <form onSubmit={message.handleSubmit}>\r\n                <div className={style.formDialogs}>\r\n                    <div>\r\n                        <TextField\r\n                            sx={{width: \"500px\", background: \"#ffffdb\"}}\r\n                            multiline={true}\r\n                            maxRows={10}\r\n                            onChange={message.handleChange}\r\n                            id=\"newMessage\"\r\n                            name=\"newMessage\"\r\n                            placeholder=\"New message...\"\r\n                            value={message.values.newMessage}\r\n                            size={\"small\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <IconButton color={\"warning\"} type=\"submit\" aria-label=\"delete\" size=\"small\">\r\n                            <Send fontSize={\"large\"}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props: DialogPropsType) => {\r\n\r\n    let dialogsElements = props.dialogPage.dialogsData.map(dialog => <DialogItem key={dialog.id} image={dialog.image} name={dialog.name} id={dialog.id}/>)\r\n    let messagesElements = props.dialogPage.messagesData.map(messages => <MessageComponent key={messages.id} message={messages.message}/>)\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <div className={style.buttonMessage}>\r\n                    <AddMessageForm onSendMessage={props.onSendMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state:AppStateType):MapStateToPropsType => {\r\n      return{\r\n          isAuth: state.auth.isAuth\r\n      }\r\n}\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>){\r\n    const RedirectComponent = (props:MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) {\r\n            return <Redirect to={\"/login\"}/>\r\n        }else {\r\n            return <Component {...restProps as T}/>\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}","import {userAPI} from \"../api/settingAPI\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    FOLLOW = 'Users/FOLLOW',\r\n    UNFOLLOW = 'Users/UNFOLLOW',\r\n    SET_USERS = 'Users/SET_USERS',\r\n    SET_CURRENT = 'Users/SET_CURRENT',\r\n    SET_TOTAL_COUNT = 'Users/SET_TOTAL_COUNT',\r\n    TOGGLE_FETCHING = 'Users/CHANGE_FETCHING',\r\n    FOLLOWING_PROGRESS = 'Users/FOLLOWING_PROGRESS',\r\n}\r\n\r\nexport type usersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string | null\r\n    photos: { small: string, large: string }\r\n}\r\ntype usersReduceType = {\r\n    users: usersType[],\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 54,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProgress: [],\r\n}\r\n\r\nexport const usersReducer = (state: usersReduceType = initialState, action: ActionUsersType): usersReduceType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW: {\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: true} : m)}\r\n        }\r\n        case ACTIONS_TYPE.UNFOLLOW: {\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: false} : m)}\r\n        }\r\n        case ACTIONS_TYPE.SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case ACTIONS_TYPE.SET_CURRENT: {\r\n            return {...state, currentPage: action.page}\r\n        }\r\n        case ACTIONS_TYPE.SET_TOTAL_COUNT: {\r\n            return {...state, totalUserCount: action.totalCount}\r\n        }\r\n        case ACTIONS_TYPE.TOGGLE_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case ACTIONS_TYPE.FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ActionUsersType = acceptFollowType | acceptUnfollowType | setUsersType | setCurrentPageType\r\n    | setTotalUsersCountType | toggleFetchingType | ToggleFollowingProgressType\r\n\r\nexport type acceptFollowType = ReturnType<typeof acceptFollow>\r\nexport const acceptFollow = (userID: number) => ({type: ACTIONS_TYPE.FOLLOW, userID} as const)\r\n\r\nexport type acceptUnfollowType = ReturnType<typeof acceptUnfollow>\r\nexport const acceptUnfollow = (userID: number) => ({type: ACTIONS_TYPE.UNFOLLOW, userID: userID} as const)\r\n\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: usersType[]) => ({type: ACTIONS_TYPE.SET_USERS, users} as const)\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (page: number) => ({type: ACTIONS_TYPE.SET_CURRENT, page} as const)\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: ACTIONS_TYPE.SET_TOTAL_COUNT, totalCount} as const)\r\n\r\nexport type toggleFetchingType = ReturnType<typeof toggleFetching>\r\nexport const toggleFetching = (isFetching: boolean) => ({type: ACTIONS_TYPE.TOGGLE_FETCHING, isFetching} as const)\r\n\r\nexport type ToggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({type: ACTIONS_TYPE.FOLLOWING_PROGRESS, isFetching, userId} as const)\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => (dispatch: Dispatch) => {\r\n    dispatch(toggleFetching(true));\r\n    userAPI.getUsers(currentPage, pageSize)\r\n        .then(response => {\r\n            dispatch(setUsers(response.items));\r\n            dispatch(setTotalUsersCount(response.totalCount));\r\n            dispatch(toggleFetching(false));\r\n            dispatch(setCurrentPage(currentPage));\r\n        });\r\n}\r\n\r\nexport const follow = (id: number) => (dispatch: Dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, id))\r\n    userAPI.followUsers(id).then(res => {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(acceptFollow(id))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, id))\r\n    })\r\n}\r\n\r\nexport const unfollow = (id: number)  => (dispatch: Dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, id))\r\n    userAPI.unfollowUsers(id)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(acceptUnfollow(id))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, id))\r\n        })\r\n}\r\n","import React from \"react\";\r\nimport {dialogReducerType, onSendMessage} from \"../../reducers/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStateDialogType = {\r\n    dialogPage: dialogReducerType\r\n}\r\ntype MapDispatchDialogType = {\r\n    onSendMessage: (newMessageText: string) => void\r\n}\r\nexport type DialogPropsType = MapStateDialogType & MapDispatchDialogType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,{onSendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs)","import React from 'react';\r\nimport style from '../Navbar.module.css';\r\n\r\ntype sidebarType = {\r\n    image: string\r\n}\r\n\r\nconst Sidebar = (props:sidebarType) => {\r\n    return (\r\n            <div>\r\n                <div >\r\n                    <img src={props.image} className={style.sidebarImg}/>\r\n                </div>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Sidebar;","import axios from \"axios\";\r\nimport {usersType} from \"../reducers/user-reducer\";\r\n\r\ntype getProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\ntype GetTypeResponseUserAPI = {\r\n    items: usersType[]\r\n    totalCount: number\r\n    error: null\r\n}\r\ntype GetTypeLoginUserAPI = {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n}\r\n\r\ntype PostDeleteFollowType = {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: {}\r\n}\r\n\r\n\r\nexport const addressAPI = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"8cfe719b-61ef-4519-9519-1e1d9dd44f52\"\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return addressAPI.get<GetTypeResponseUserAPI>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data);\r\n    },\r\n\r\n    unfollowUsers(id: number) {\r\n        return addressAPI.delete<PostDeleteFollowType>(`follow/${id}`)\r\n    },\r\n\r\n    followUsers(id: number) {\r\n        return addressAPI.post<PostDeleteFollowType>(`follow/${id}`)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    getMePhoto(res: GetTypeLoginUserAPI) {\r\n        return addressAPI.get<getProfileType>('profile/' + res.data.id)\r\n    },\r\n    me() {\r\n        return addressAPI.get<GetTypeLoginUserAPI>('auth/me')\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return addressAPI.get<getProfileType>(`profile/` + userId)\r\n    },\r\n    getStatusProfile(id: string) {\r\n        return addressAPI.get<string>(`profile/status/` + id)\r\n    },\r\n    updateStatus(text:string){\r\n        return addressAPI.put<any>(`profile/status`, {status:text})\r\n    },\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/settingAPI\";\r\n\r\nconst ADD_POST = 'ADD-POST',\r\n    SET_USERS_PROFILE = 'SET-USERS-PROFILE',\r\n    SET_STATUS = 'SET-STATUS'\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\ntype postDataType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type profileReducerType = {\r\n    postData: Array<postDataType>\r\n    profile: ProfileType | null\r\n    status: string\r\n}\r\n\r\nlet initialState: profileReducerType = {\r\n    postData: [\r\n        {id: 1, message: 'Sosiska', likeCount: 23},\r\n        {id: 2, message: 'REDDISKA', likeCount: 77},\r\n        {id: 3, message: 'Do you want me? ', likeCount: 107},\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n}\r\n\r\nexport const profileReduser = (state: profileReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [{id: new Date().getTime(), message: action.postText, likeCount: 0}, ...state.postData]\r\n            }\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS:{\r\n            return {...state,status:action.textStatus}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionTypes = addPostType |setUsersProfileType|SetStatusType\r\n\r\ntype addPostType = ReturnType<typeof addPost>\r\nexport const addPost = (postText: string) => ({type: ADD_POST, postText} as const)\r\n\r\ntype setUsersProfileType = ReturnType<typeof setUsersProfile>\r\nexport const setUsersProfile = (profile: ProfileType | null) => ({type: SET_USERS_PROFILE, profile} as const)\r\n\r\ntype SetStatusType = ReturnType<typeof setStatus>\r\nexport const setStatus = (textStatus: string) => ({type: SET_STATUS, textStatus} as const)\r\n\r\n\r\n\r\nexport const getCurrenUsersProfile = (userId: string) => (dispatch: Dispatch) => {\r\n    profileAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUsersProfile(response.data))\r\n        })\r\n\r\n}\r\n\r\nexport const getStatusProfile = (userId: string) => (dispatch: Dispatch) => {\r\n    profileAPI.getStatusProfile(userId)\r\n        .then(res=>{\r\n            dispatch(setStatus(res.data))\r\n        })\r\n}\r\n\r\nexport const updateStatus = (status:string) => (dispatch: Dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(res=>{\r\n            console.log(res)\r\n            if (res.data.resultCode === 0){\r\n                dispatch(setStatus(status))\r\n            }\r\n\r\n        })\r\n}","type imagesDataType = {\r\n    image: string\r\n}\r\nexport type sidebarReducerType = {\r\n    imagesData: Array<imagesDataType>\r\n}\r\n\r\nlet initialState: sidebarReducerType = {\r\n    imagesData: [\r\n        {image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state: sidebarReducerType = initialState, action: ActionTypes) => {\r\n    return state\r\n}\r\n\r\ntype ActionTypes = {}\r\n\r\nexport default sidebarReducer;","import {authAPI} from \"../api/settingAPI\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = \"SET-USER-DATA\"\r\nconst SET_PHOTO = \"SET-PHOTO\"\r\n\r\n\r\ntype AuthReduceType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    photo: string|null\r\n}\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    photo: null,\r\n}\r\n\r\nexport const authReducer = (state: AuthReduceType = initialState, action: ActionPropsType): AuthReduceType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {...state, ...action.data, isAuth: true}\r\n        }\r\n        case SET_PHOTO:{\r\n            return {...state, photo:action.photo}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionPropsType = SetPhotoLoginType| SetUserDataType\r\n\r\ntype SetUserDataType = ReturnType<typeof setUsersData>\r\nexport const setUsersData = (id: number,email: string, login: string) => ({type: SET_USER_DATA, data:{id,email,login}} as const)\r\n\r\ntype SetPhotoLoginType = ReturnType<typeof setPhotoLogin>\r\nexport const setPhotoLogin = (photo: string) => ({type: SET_PHOTO, photo}as const)\r\n\r\nexport const authUserLogin = () => (dispatch:Dispatch) =>{\r\n    authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                const {id, email, login} = response.data.data;\r\n                dispatch(setUsersData(id, email, login))\r\n                return response\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (res) {\r\n                authAPI.getMePhoto(res.data)\r\n                    .then(response => {\r\n                        dispatch(setPhotoLogin(response.data.photos.small))\r\n                    })}\r\n        })\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReduser} from \"../reducers/profile-reducer\";\r\nimport dialogReducer from \"../reducers/dialogs-reduser\";\r\nimport sidebarReducer from \"../reducers/sidebar-reducer\";\r\nimport {usersReducer} from \"../reducers/user-reducer\";\r\nimport {authReducer} from \"../reducers/auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReduser,\r\n    dialogPage: dialogReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n//@ts-ignore\r\nwindow.store= store","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"./SideBar/Sidebar\";\r\nimport {store} from \"../../store/store\";\r\nimport {CardContent} from \"@material-ui/core\";\r\nimport {EmojiEmotions, FiberNew, LibraryMusic, Markunread, Person, Settings} from \"@material-ui/icons\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n  let sidebarElements = store.getState().sidebar.imagesData.map((item) => <Sidebar image={item.image}/>)\r\n\r\n    return (\r\n        <div className={style.nav}>\r\n            <CardContent  >\r\n            <div className={style.item}>\r\n                <Person/>\r\n                <NavLink to=\"/profile\" activeClassName={style.active}> Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <Markunread/>\r\n                <NavLink to=\"/dialogs\" activeClassName={style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <EmojiEmotions/>\r\n                <NavLink to=\"/users\" activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <FiberNew />\r\n                <a>News</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <LibraryMusic/>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <Settings/>\r\n                <a>Settings</a>\r\n            </div>\r\n            </CardContent>\r\n\r\n            {/*<CardContent >*/}\r\n            {/*<div className={style.friendsSidebar}>*/}\r\n            {/*    <h3>FRIENDS </h3>*/}\r\n            {/*    <div className={style.sidebarElements}>{sidebarElements}</div>*/}\r\n            {/*</div>*/}\r\n            {/*    </CardContent >*/}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import * as React from \"react\";\r\nimport {Box, Button, Drawer, List, ListItem} from \"@material-ui/core\";\r\nimport {Menu} from \"@material-ui/icons\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\ntype Anchor = \"left\"\r\n\r\nexport const HeaderMenu = () => {\r\n    const [state, setState] = React.useState({\r\n        left: false,\r\n\r\n    });\r\n\r\n    const toggleDrawer = (anchor: Anchor, open: boolean) => (\r\n        event: React.KeyboardEvent | React.MouseEvent\r\n    ) => {\r\n        if (\r\n            event.type === \"keydown\" &&\r\n            ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n                (event as React.KeyboardEvent).key === \"Shift\")\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setState({...state, [anchor]: open});\r\n    };\r\n\r\n    const list = (anchor: Anchor) => (\r\n        <Box\r\n            style={{ background:\"linear-gradient(326deg, rgba(255,108,2,1) 30%, rgba(2,152,142,1) 67%)\",\r\n                height:\"100%\", padding:\"0\"}}\r\n            sx={{width: 250}}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List style={{padding:\"0\", margin:\"0\"}}>\r\n                <ListItem style={{padding:\"0\", margin:\"0\"}}>\r\n                    <Navbar/>\r\n                </ListItem>\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <Button size={'large'} onClick={toggleDrawer(\"left\", true)}> <Menu style={{color:\"white\"}} /> </Button>\r\n                <Drawer\r\n                    anchor={\"left\"}\r\n                    open={state[\"left\"]}\r\n                    onClose={toggleDrawer(\"left\", false)}\r\n                >\r\n                    {list(\"left\")}\r\n                </Drawer>\r\n            </>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/headerImages.adb5c696.png\";","import React from 'react';\r\nimport {AppBar, Button, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {HeaderMenu} from \"./HeaderMenu\";\r\nimport headerImages from \"../../images/headerImages.png\"\r\nimport s from './Header.module.css'\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    photo: string | null\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <AppBar style={{backgroundColor: \"#02988e\"}} position={\"relative\"}>\r\n            <Toolbar className={s.headerMain}>\r\n                <div className={s.headerMenu}>\r\n                    <HeaderMenu/>\r\n                </div>\r\n                <Typography variant={\"h1\"} component=\"div\" sx={{flexGrow: 1}}/>\r\n\r\n                {props.isAuth ? <div className={s.login}><img className={s.photoHeader} src={props.photo ? props.photo : headerImages}/>{props.login}</div>\r\n                    : <Button color=\"inherit\" style={{color: \"#cc5aa6\", fontWeight: \"bold\"}}>Login</Button>}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {connect} from \"react-redux\";\r\nimport {authUserLogin} from \"../../reducers/auth-reducer\";\r\n\r\ntype MapStateUserType = {\r\n    isAuth: boolean,\r\n    login: string | null,\r\n    photo: string|null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    authUserLogin: () => void\r\n}\r\ntype UsersLoginPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.Component<UsersLoginPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.authUserLogin()\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProp = (state: AppStateType): MapStateUserType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        photo: state.auth.photo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProp, {authUserLogin})(HeaderContainer)","import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport {usersType} from \"../../reducers/user-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Avatar, Button, Paper} from \"@material-ui/core\";\r\n\r\ntype UsersType = {\r\n    pageSize: number\r\n    users: usersType[]\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n    followingProgress: number[]\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n\r\n    const photoUser = props.users.filter(f => f.photos.small !== null)\r\n    const notPhotoUser = props.users.filter(f => f.photos.small == null)\r\n    const usersDisplay = [...photoUser, ...notPhotoUser]\r\n\r\n    return (\r\n        <div className={s.usersContainer}>\r\n            {usersDisplay.map(u =>\r\n                <Paper elevation={3} sx={{borderRadius:\"20px\"}}>\r\n                    <div key={u.id}>\r\n                        <div className={s.user}>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + u.id}>\r\n                                    <div>\r\n                                        {u.photos.small !== null ? <img src={u.photos.small} className={s.userPhoto}/>\r\n                                            : <Avatar className={s.userPhoto} sx={{\r\n                                                fontSize: \"50px\",\r\n                                                width: \"100px\",\r\n                                                height: \"100px\",\r\n                                                background: \"#10ab9e\"\r\n                                            }}> {u.name[0].toUpperCase()}</Avatar>}\r\n                                    </div>\r\n\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={s.name}>\r\n                                <span className={s.span}>{u.name.substr(1,15)}</span>\r\n                            </div>\r\n                            <div>\r\n                                {u.followed\r\n                                    ? <Button variant={\"outlined\"} size={'small'} color={\"error\"} disabled={props.followingProgress.some(id => id === u.id)}\r\n                                              onClick={() => {\r\n                                                  props.unfollow(u.id)\r\n                                              }}>Unfollow</Button>\r\n\r\n                                    : <Button variant={\"contained\"} color={\"warning\"} size={'small'} disabled={props.followingProgress.some(id => id === u.id)} onClick={() => {\r\n                                        props.follow(u.id)\r\n                                    }}>Follow</Button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/preloader.3fb26d9b.gif\";","import React from \"react\";\r\nimport preloader from \"../../images/preloader.gif\";\r\n\r\nexport const Preloader = () => {\r\n\r\n    let divStyle = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n\r\n    let imgStyle = {\r\n        width: \"80px\",\r\n        height: \"100px\",\r\n    }\r\n    return <div style={divStyle}> <img style={imgStyle} src={preloader}/> </div>\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport s from \"./Users.module.css\";\r\nimport {Preloader} from \"../common/Preloader\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage,\r\n    unfollow,\r\n    usersType\r\n} from \"../../reducers/user-reducer\";\r\nimport {Pagination} from \"@material-ui/core\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {Paper} from \"@mui/material\";\r\n\r\ntype MapStateUserType = {\r\n    users: usersType[]\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n}\r\nexport type MapDispatchPropsType = {\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setCurrentPage: (numberPage: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\ntype UsersPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\nconst stylePaginatorPaper = {\r\n    margin: \"10px 0 0 0\",\r\n    minWidth: \"100%\",\r\n    minHeight: \"40px\",\r\n    alignItems: \"center\",\r\n    display: \"flex\"\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType, {}> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUserCount / this.props.pageSize)\r\n\r\n        return (\r\n            <div className={s.containerWrapper}>\r\n                <div className={s.paginator}>\r\n\r\n                    <Paper sx={stylePaginatorPaper}>\r\n                        <Pagination color={\"standard\"} onChange={(event, page) => {\r\n                            this.onPageChanged(page)\r\n                        }} count={pagesCount} variant={'text'} shape=\"rounded\" defaultPage={1} siblingCount={14}\r\n                                    size={\"small\"}/></Paper>\r\n                </div>\r\n                <>\r\n                    {this.props.isFetching ? <Preloader/>\r\n                        : null}\r\n                    <Users\r\n                        pageSize={this.props.pageSize}\r\n                        users={this.props.users}\r\n                        unfollow={this.props.unfollow}\r\n                        follow={this.props.follow}\r\n                        followingProgress={this.props.followingProgress}\r\n                    />\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateUserType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingProgress: state.usersPage.followingProgress,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, getUsers})\r\n)(UsersContainer)","import React, {ChangeEvent} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\ntype stateType = {\r\n    editMod: boolean\r\n    status: string\r\n}\r\n\r\n\r\nexport class ProfileStatus extends React.Component <ProfileStatusPropsType> {\r\n\r\n    state = {\r\n        editMod: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMod: true\r\n        })\r\n    }\r\n\r\n    onBlurEditMode = () => {\r\n        this.setState({\r\n            editMod: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate = (prevProps: ProfileStatusPropsType, prevState: stateType) => {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                {!this.state.editMod ?\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>\r\n                        {this.props.status || \"Add status\"}\r\n                        </span>\r\n                    </div>\r\n                    : <div>\r\n                        <input onChange={this.onStatusChange} autoFocus onBlur={this.onBlurEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/spiderMan.c815e3f0.svg\";","import React from \"react\";\r\nimport {ProfileType} from \"../../../reducers/profile-reducer\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport image from '../../../images/spiderMan.svg'\r\nimport {Paper} from \"@material-ui/core\";\r\nimport style from './ProfileInfo.module.css'\r\n\r\ntype ProfileInfoComponentType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n// let styleProfile2 = {\r\n//     width: \"100%\",\r\n//     height: \"400px\",\r\n// }\r\n\r\nconst ProfileInfo = (props: ProfileInfoComponentType) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={style.containerProfileData}>\r\n                    <Paper elevation={3} className={style.wrapper}>\r\n                            <img className={style.imageProfile} src={props.profile?.photos.large || image} alt={\"Images profile\"}/>\r\n                            <div className={style.info}>\r\n                                <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n                        </div>\r\n                    </Paper>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\n\r\nconst Post = (props: PropsType) => {\r\n    return (\r\n            <div className={style.item}>\r\n                <img src=\"https://bizlit.com.ua/image/data/pictures/YeDYzSR-10apkm4.png\"/>\r\n                <div className={style.messagePost}>\r\n                    {props.message}\r\n                </div>\r\n                <div className={style.likeType}>\r\n                    <span>♥{props.likeCount}</span>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostPropsType} from \"./MyPostsContainer\";\r\nimport {Button, Paper, TextField, Typography} from \"@material-ui/core\";\r\nimport {useFormik} from \"formik\";\r\n\r\nconst MyPosts = (props: PostPropsType) => {\r\n    let postsElements = props.profilePage.postData.map(post => <Post message={post.message} likeCount={post.likeCount}/>)\r\n\r\n    let addPost = (values: string) => {\r\n        if(values !== \"\"){\r\n            props.addPost(values)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.containerPost}>\r\n            <Paper elevation={3} className={style.addPost}>\r\n                <AddNewPost onSubmit={addPost}/>\r\n            </Paper>\r\n            <Paper elevation={3} className={style.posts}>\r\n                <div className={style.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddNewPost = ({onSubmit}: { onSubmit: (values: string) => void }) => {\r\n    const post = useFormik({\r\n        initialValues: {\r\n            newPostText: '',\r\n        },\r\n        onSubmit: (values,{resetForm}) => {\r\n            onSubmit(values.newPostText);\r\n            resetForm()\r\n        },\r\n    });\r\n    return (\r\n        <div>\r\n            <form onSubmit={post.handleSubmit} >\r\n                <div>\r\n                    <TextField sx={{width: \"400px\"}} size={\"small\"} color={\"success\"}\r\n                                id=\"newPostText\"\r\n                                name=\"newPostText\"\r\n                                label=\"New post...\"\r\n                                value={post.values.newPostText}\r\n                                onChange={post.handleChange}\r\n                />\r\n                    <Button color={\"warning\"} variant={\"contained\"} type=\"submit\">Submit</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost, profileReducerType} from \"../../../reducers/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\n\r\ntype MapStateProfileType = {\r\n    profilePage: profileReducerType\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPost: (text: string) => void\r\n}\r\nexport type PostPropsType = MapStateProfileType & MapDispatchPropsType\r\nlet mapStateToProps = (state: AppStateType): MapStateProfileType => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {addPost})(MyPosts)","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../reducers/profile-reducer\";\r\nimport s from './Profile.module.css'\r\n\r\ntype ProfileComponentType = {\r\n    profile: ProfileType|null\r\n    status: string\r\n    updateStatus: (status:string) => void\r\n}\r\n\r\nexport const Profile = (props:ProfileComponentType) => {\r\n\r\n    return <div className={s.profileContainer}>\r\n        <ProfileInfo profile={props.profile} status={props.status}  updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport {Profile} from \"./Profile\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {getCurrenUsersProfile, getStatusProfile, ProfileType, updateStatus} from \"../../reducers/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getCurrenUsersProfile: (userId: string) => void\r\n    getStatusProfile: (userId: string) => void\r\n    updateStatus: (status:string) => void\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\ntype OwnPropsType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = \"20026\";\r\n        }\r\n        this.props.getCurrenUsersProfile(userId)\r\n        this.props.getStatusProfile(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n    )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getCurrenUsersProfile, getStatusProfile,updateStatus}),\r\n    withAuthRedirect,\r\n    withRouter,\r\n)(ProfileContainer)","import React from \"react\";\r\nimport {useFormik, Field} from \"formik\";\r\nimport style from './LoginStyle.module.css'\r\nimport {Button, Checkbox, FormControlLabel, Paper, TextField, Typography} from \"@material-ui/core\";\r\nimport * as yup from 'yup';\r\n\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup.string()\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup.string()\r\n        .min(6, 'Password should be of minimum 6 characters length')\r\n        .matches(/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}/, \"Password must meet complexity requirements\")\r\n        .required('Password is required')\r\n\r\n});\r\n\r\nconst LoginForm = (props: any) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            toggle: false,\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            props.onSubmit(values)\r\n        },\r\n    });\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={style.form}>\r\n                    <div className={style.loginFormContainer}>\r\n                        <Typography color={\"orange\"} component={\"h2\"} variant={\"h4\"}>\r\n                            Login\r\n                        </Typography>\r\n                        <TextField sx={{maxWidth: \"400px\",minWidth: \"350px\"}} size={\"small\"} color={\"success\"}\r\n                                   id=\"email\"\r\n                                   name=\"email\"\r\n                                   label=\"Email\"\r\n                                   value={formik.values.email}\r\n                                   onChange={formik.handleChange}\r\n                                   error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                   helperText={formik.touched.email && formik.errors.email}\r\n                                   required\r\n                        />\r\n                        <TextField sx={{maxWidth: \"400px\", minWidth: \"350px\"}} size={\"small\"} color={\"success\"}\r\n                                   id=\"password\"\r\n                                   name=\"password\"\r\n                                   label=\"Password\"\r\n                                   type=\"password\"\r\n                                   value={formik.values.password}\r\n                                   onChange={formik.handleChange}\r\n                                   error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                   helperText={formik.touched.password && formik.errors.password}\r\n                                   required\r\n                        />\r\n                        <FormControlLabel onChange={formik.handleChange} control={<Checkbox defaultChecked name={\"toggle\"}/>} label=\"Label\"/>\r\n                        <Button color={\"warning\"} variant={\"contained\"} type=\"submit\">Submit</Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Login = () => {\r\n    const submitOn = (values: any) => {\r\n        console.log(values)\r\n    }\r\n    return (\r\n        <div>\r\n            <LoginForm onSubmit={submitOn}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport {Login} from \"./components/login/Login\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {Paper} from \"@mui/material\";\r\nimport style from './components/Header/Header.module.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Grid container>\r\n\r\n                <Grid item xs={12}>\r\n                    <HeaderContainer/>\r\n                </Grid>\r\n\r\n                <Grid container className={style.wrapperContent} >\r\n                       \r\n                        <Paper elevation={0} className={style.navbarApp}>\r\n                                <Navbar/>\r\n                        </Paper>\r\n\r\n                    <Paper elevation={0} className={style.content}>\r\n                        <Route exact path={'/'} render={() => <Redirect to={'/profile'}/>}/>\r\n\r\n                        <Route path=\"/dialogs\"\r\n                               render={() => <DialogsContainer/>}/>\r\n\r\n                        <Route path=\"/profile/:userId?\"\r\n                               render={() => <ProfileContainer/>}/>\r\n\r\n                        <Route path=\"/users\"\r\n                               render={() => <UsersContainer/>}/>\r\n\r\n                        <Route path=\"/login\"\r\n                               render={() => <Login/>}/></Paper>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </HashRouter>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport React from \"react\";\n\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>\n        , document.getElementById('root')\n    );\n}\nrerenderEntireTree()\nstore.subscribe(()=>{\n    rerenderEntireTree()\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__V5KKX\",\"item\":\"Navbar_item__3NmC5\",\"active\":\"Navbar_active__Yhrhi\",\"friendsSidebar\":\"Navbar_friendsSidebar__3a2By\",\"sidebarImg\":\"Navbar_sidebarImg__31U-u\",\"sidebarElements\":\"Navbar_sidebarElements__1KLTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1uFet\",\"selectedPage\":\"Users_selectedPage__2yzV4\",\"usersContainer\":\"Users_usersContainer__16uvB\",\"user\":\"Users_user__1G7hI\",\"name\":\"Users_name__u2WlR\",\"paginator\":\"Users_paginator__8Gq43\",\"containerWrapper\":\"Users_containerWrapper__1M_Fv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__H0yV5\",\"headerMenu\":\"Header_headerMenu__3yNEK\",\"content\":\"Header_content__3UZ-W\",\"navbarApp\":\"Header_navbarApp__1gtdn\",\"wrapperContent\":\"Header_wrapperContent__IONSc\",\"photoHeader\":\"Header_photoHeader__1LYeP\",\"login\":\"Header_login___9nR7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerProfileData\":\"ProfileInfo_containerProfileData__euDtD\",\"wrapper\":\"ProfileInfo_wrapper__1i1pK\",\"imageProfile\":\"ProfileInfo_imageProfile__1bpcH\",\"info\":\"ProfileInfo_info__2RMDO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerPost\":\"MyPosts_containerPost__1mVgf\",\"addPost\":\"MyPosts_addPost__lKJrE\",\"posts\":\"MyPosts_posts__2FEuz\"};"],"sourceRoot":""}