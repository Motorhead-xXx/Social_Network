{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","redux/dialogs-reduser.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/hoc/withAuthRedirect.tsx","redux/user-reducer.ts","components/Dialogs/DialogsContainer.tsx","components/Navbar/SideBar/Sidebar.tsx","api/settingAPI.ts","redux/profile-reducer.tsx","redux/sidebar-reducer.tsx","redux/auth-reducer.ts","store/store.ts","components/Navbar/Navbar.tsx","components/Header/HeaderMenu.tsx","images/headerImages.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Users/Users.tsx","images/preloader.gif","components/common/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/myPosts/Post/Post.tsx","components/Profile/myPosts/MyPosts.tsx","components/Profile/myPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/login/Login.tsx","App.tsx","index.tsx","components/Users/Users.module.css","components/Profile/myPosts/Post/Post.module.css","components/Header/Header.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UPDATE_NEW_MESSAGE_TEXT","SEND_MESSAGE","initialState","dialogsData","id","name","image","messagesData","message","newMessageText","dialogReducer","state","action","type","newText","text","DialogItem","props","path","className","style","containerDialog","to","activeClassName","active","dialogsStyle","src","imageDialog","Message","messageStyle","wrapper_style","wrapper","Dialogs","dialogsElements","dialogPage","map","dialog","messagesElements","messages","newMessageBody","onSendMessageClick","onSendMessage","dialogs","dialogsItem","buttonMessage","onChange","event","body","target","value","updateNewMessage","onKeyPress","charCode","placeholder","textArea","onClick","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","restProps","ACTIONS_TYPE","compose","Sidebar","sidebarImg","addressAPI","axios","create","withCredentials","baseURL","headers","userAPI","currentPage","pageSize","get","res","data","delete","post","authAPI","profileAPI","userId","put","status","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USERS_PROFILE","SET_STATUS","postData","likeCount","newPostText","profile","setStatus","textStatus","imagesData","sidebarReducer","users","totalUserCount","isFetching","followingProgress","setCurrentPage","page","SET_CURRENT","toggleFetching","TOGGLE_FETCHING","toggleFollowingProgress","FOLLOWING_PROGRESS","SET_USER_DATA","SET_PHOTO","email","login","photo","rootReducer","combineReducers","profilePage","Date","getTime","postText","sidebar","usersPage","FOLLOW","m","userID","followed","UNFOLLOW","SET_USERS","SET_TOTAL_COUNT","totalCount","filter","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","Navbar","sidebarElements","getState","item","nav","CardContent","Person","Markunread","EmojiEmotions","FiberNew","LibraryMusic","Settings","friendsSidebar","HeaderMenu","anchor","React","left","setState","toggleDrawer","open","key","Button","size","Menu","color","Drawer","onClose","Box","background","height","padding","sx","width","role","onKeyDown","List","margin","ListItem","Header","AppBar","backgroundColor","position","Toolbar","Typography","variant","component","flexGrow","s","photoHeader","headerImages","fontWeight","HeaderContainer","this","authUserLogin","dispatch","response","resultCode","setUsersData","photos","small","Users","photoUser","f","notPhotoUser","usersDisplay","usersContainer","u","Paper","elevation","borderRadius","user","userPhoto","Avatar","fontSize","toUpperCase","span","substr","disabled","some","unfollow","follow","Preloader","display","justifyContent","preloader","UsersContainer","getUsers","pageNumber","pagesCount","Math","ceil","paginator","Pagination","onPageChanged","count","shape","defaultPage","siblingCount","items","ProfileStatus","editMod","activateEditMode","onBlurEditMode","updateStatus","onStatusChange","e","currentTarget","componentDidUpdate","prevProps","prevState","autoFocus","onBlur","onDoubleClick","ProfileInfo","large","alt","Post","messagePost","likeType","countLike","MyPosts","postsElements","newPostElement","createRef","addPosts","current","onPostChange","ref","posts","Profile","MyPostsContainer","ProfileContainer","match","params","getCurrenUsersProfile","getStatusProfile","console","log","withRouter","Login","LoginForm","App","Grid","container","xs","minHeight","exact","render","DialogsContainer","rerenderEntireTree","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.e663ded6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2ljic\",\"dialogsItem\":\"Dialogs_dialogsItem__dkL1w\",\"messages\":\"Dialogs_messages__3CLYv\",\"dialogsStyle\":\"Dialogs_dialogsStyle__1WKEc\",\"active\":\"Dialogs_active__cWjhb\",\"wrapper\":\"Dialogs_wrapper__QWmPS\",\"wrapper_style\":\"Dialogs_wrapper_style__jqb8Y\",\"messageStyle\":\"Dialogs_messageStyle__3rO8r\",\"imageDialog\":\"Dialogs_imageDialog__3bOZI\",\"buttonMessage\":\"Dialogs_buttonMessage__Soa9S\",\"textArea\":\"Dialogs_textArea__3DOs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__V5KKX\",\"item\":\"Navbar_item__3NmC5\",\"active\":\"Navbar_active__Yhrhi\",\"friendsSidebar\":\"Navbar_friendsSidebar__3a2By\",\"sidebarImg\":\"Navbar_sidebarImg__31U-u\",\"sidebarElements\":\"Navbar_sidebarElements__1KLTe\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGES';\r\n\r\ntype dialogsDataType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\ntype messagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type dialogReducerType = {\r\n    dialogsData: Array<dialogsDataType>\r\n    messagesData: Array<messagesDataType>\r\n    newMessageText: string\r\n}\r\n\r\nlet initialState: dialogReducerType = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Sveta\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"\r\n        },\r\n        {id: 3, name: \"Sasha\", image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {\r\n            id: 4,\r\n            name: \"Viktor\",\r\n            image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Valera\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your it-kamasutra?\"},\r\n        {id: 3, message: \"yo Hi\"},\r\n        {id: 4, message: \"Hello Hi\"},\r\n        {id: 5, message: \"Yo yo yo\"},\r\n    ],\r\n    newMessageText: '',\r\n}\r\n\r\nconst dialogReducer = (state: dialogReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            };\r\n        }\r\n        case SEND_MESSAGE: {\r\n            let text = state.newMessageText;\r\n           return  text !== \"\" ? {...state, newMessageText: \"\", messagesData: [...state.messagesData, {id: 6, message: text}]} : state\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype ActionTypes = messageType | updateNewMessageType\r\nexport type messageType = ReturnType<typeof onSendMessage>\r\nexport const onSendMessage = (newText: string) => ({type: SEND_MESSAGE, newText} as const)\r\n\r\nexport type updateNewMessageType = ReturnType<typeof updateNewMessage>\r\nexport const updateNewMessage = (newText: string) => ({type: UPDATE_NEW_MESSAGE_TEXT, newText} as const)\r\n\r\n\r\nexport default dialogReducer;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype dialogsType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\n\r\nconst DialogItem = (props:dialogsType) => {\r\n    const path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={style.containerDialog}>\r\n\r\n            <NavLink to={path} activeClassName={style.active} className={style.dialogsStyle}>\r\n                 <img src={props.image} className={style.imageDialog}/>\r\n                <div> {props.name}</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\n\r\n\r\ntype messageType = {\r\n    message: string\r\n}\r\n\r\n\r\nconst Message: React.FC<messageType> = (props) => {\r\n    return (\r\n        <div className={style.messageStyle}>\r\n\r\n            <div className={style.wrapper_style}>\r\n            </div>\r\n\r\n            <div className={style.wrapper}>\r\n\r\n             <div>{props.message} </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Message;","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogPropsType} from \"./DialogsContainer\";\r\n\r\nconst Dialogs = (props: DialogPropsType) => {\r\n\r\n\r\n    let dialogsElements = props.dialogPage.dialogsData.map(dialog => <DialogItem key={dialog.id} image={dialog.image}\r\n                                                                                 name={dialog.name} id={dialog.id}/>)\r\n    let messagesElements = props.dialogPage.messagesData.map(messages => <Message key={messages.id} message={messages.message}/>)\r\n\r\n    let newMessageBody = props.dialogPage.newMessageText;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.onSendMessage(newMessageBody);\r\n    }\r\n    let onNewMessageChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = event.target.value;\r\n        props.updateNewMessage(body);\r\n    }\r\n\r\n    const keyClick = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.charCode === 13) {\r\n            onSendMessageClick()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <div className={style.buttonMessage}>\r\n                    <textarea onChange={onNewMessageChange} onKeyPress={keyClick} placeholder=\"Enter your message\"\r\n                              value={newMessageBody} className={style.textArea}/>\r\n                    <button onClick={onSendMessageClick}>Отправить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state:AppStateType):MapStateToPropsType => {\r\n      return{\r\n          isAuth: state.auth.isAuth\r\n      }\r\n}\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>){\r\n    const RedirectComponent = (props:MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={\"/login\"}/>;\r\n        return (\r\n                <Component {...restProps as T}/>\r\n        )\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}","import {userAPI} from \"../api/settingAPI\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    FOLLOW = 'Users/FOLLOW',\r\n    UNFOLLOW = 'Users/UNFOLLOW',\r\n    SET_USERS = 'Users/SET_USERS',\r\n    SET_CURRENT = 'Users/SET_CURRENT',\r\n    SET_TOTAL_COUNT = 'Users/SET_TOTAL_COUNT',\r\n    TOGGLE_FETCHING = 'Users/CHANGE_FETCHING',\r\n    FOLLOWING_PROGRESS = 'Users/FOLLOWING_PROGRESS',\r\n}\r\n\r\nexport type usersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string | null\r\n    photos: { small: string, large: string }\r\n}\r\ntype usersReduceType = {\r\n    users: usersType[],\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 64,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProgress: [],\r\n}\r\n\r\nexport const usersReducer = (state: usersReduceType = initialState, action: ActionUsersType): usersReduceType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW: {\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: true} : m)}\r\n        }\r\n        case ACTIONS_TYPE.UNFOLLOW: {\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: false} : m)}\r\n        }\r\n        case ACTIONS_TYPE.SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case ACTIONS_TYPE.SET_CURRENT: {\r\n            return {...state, currentPage: action.page}\r\n        }\r\n        case ACTIONS_TYPE.SET_TOTAL_COUNT: {\r\n            return {...state, totalUserCount: action.totalCount}\r\n        }\r\n        case ACTIONS_TYPE.TOGGLE_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case ACTIONS_TYPE.FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ActionUsersType = acceptFollowType | acceptUnfollowType | setUsersType | setCurrentPageType\r\n    | setTotalUsersCountType | toggleFetchingType | ToggleFollowingProgressType\r\n\r\nexport type acceptFollowType = ReturnType<typeof acceptFollow>\r\nexport const acceptFollow = (userID: number) => ({type: ACTIONS_TYPE.FOLLOW, userID} as const)\r\n\r\nexport type acceptUnfollowType = ReturnType<typeof acceptUnfollow>\r\nexport const acceptUnfollow = (userID: number) => ({type: ACTIONS_TYPE.UNFOLLOW, userID: userID} as const)\r\n\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: usersType[]) => ({type: ACTIONS_TYPE.SET_USERS, users} as const)\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (page: number) => ({type: ACTIONS_TYPE.SET_CURRENT, page} as const)\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: ACTIONS_TYPE.SET_TOTAL_COUNT, totalCount} as const)\r\n\r\nexport type toggleFetchingType = ReturnType<typeof toggleFetching>\r\nexport const toggleFetching = (isFetching: boolean) => ({type: ACTIONS_TYPE.TOGGLE_FETCHING, isFetching} as const)\r\n\r\nexport type ToggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({type: ACTIONS_TYPE.FOLLOWING_PROGRESS, isFetching, userId} as const)\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => (dispatch: Dispatch) => {\r\n    dispatch(toggleFetching(true));\r\n    userAPI.getUsers(currentPage, pageSize)\r\n        .then(response => {\r\n            dispatch(setUsers(response.items));\r\n            dispatch(setTotalUsersCount(response.totalCount));\r\n            dispatch(toggleFetching(false));\r\n            dispatch(setCurrentPage(currentPage));\r\n        });\r\n}\r\n\r\nexport const follow = (id: number) => (dispatch: Dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, id))\r\n    userAPI.followUsers(id).then(res => {\r\n        if (res.data.resultCode === 0) {\r\n            dispatch(acceptFollow(id))\r\n        }\r\n        dispatch(toggleFollowingProgress(false, id))\r\n    })\r\n}\r\n\r\nexport const unfollow = (id: number)  => (dispatch: Dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, id))\r\n    userAPI.unfollowUsers(id)\r\n        .then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                dispatch(acceptUnfollow(id))\r\n            }\r\n            dispatch(toggleFollowingProgress(false, id))\r\n        })\r\n}","import React from \"react\";\r\nimport {dialogReducerType, onSendMessage, updateNewMessage} from \"../../redux/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStateDialogType = {\r\n    dialogPage: dialogReducerType\r\n}\r\ntype MapDispatchDialogType = {\r\n    onSendMessage: (newMessageText: string) => void\r\n    updateNewMessage: (newText: string) => void\r\n}\r\nexport type DialogPropsType = MapStateDialogType & MapDispatchDialogType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps,{onSendMessage,updateNewMessage})\r\n)(Dialogs)","import React from 'react';\r\nimport style from '../Navbar.module.css';\r\n\r\ntype sidebarType = {\r\n    image: string\r\n}\r\n\r\nconst Sidebar = (props:sidebarType) => {\r\n    return (\r\n            <div>\r\n                <div >\r\n                    <img src={props.image} className={style.sidebarImg}/>\r\n                </div>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Sidebar;","import axios from \"axios\";\r\nimport {usersType} from \"../redux/user-reducer\";\r\n\r\ntype getProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\ntype GetTypeResponseUserAPI = {\r\n    items: usersType[]\r\n    totalCount: number\r\n    error: null\r\n}\r\ntype GetTypeLoginUserAPI = {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n}\r\n\r\ntype PostDeleteFollowType = {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: {}\r\n}\r\n\r\n\r\nexport const addressAPI = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"8cfe719b-61ef-4519-9519-1e1d9dd44f52\"\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return addressAPI.get<GetTypeResponseUserAPI>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data);\r\n    },\r\n\r\n    unfollowUsers(id: number) {\r\n        return addressAPI.delete<PostDeleteFollowType>(`follow/${id}`)\r\n    },\r\n\r\n    followUsers(id: number) {\r\n        return addressAPI.post<PostDeleteFollowType>(`follow/${id}`)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    getMePhoto(res: GetTypeLoginUserAPI) {\r\n        return addressAPI.get<getProfileType>('profile/' + res.data.id)\r\n    },\r\n    me() {\r\n        return addressAPI.get<GetTypeLoginUserAPI>('auth/me')\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: string) {\r\n        return addressAPI.get<getProfileType>(`profile/` + userId)\r\n    },\r\n    getStatusProfile(id: string) {\r\n        return addressAPI.get<string>(`profile/status/` + id)\r\n    },\r\n    updateStatus(text:string){\r\n        return addressAPI.put<any>(`profile/status`, {status:text})\r\n    },\r\n}\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/settingAPI\";\r\n\r\nconst ADD_POST = 'ADD-POST',\r\n    UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT',\r\n    SET_USERS_PROFILE = 'SET-USERS-PROFILE',\r\n    SET_STATUS = 'SET-STATUS'\r\n\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\ntype postDataType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type profileReducerType = {\r\n    postData: Array<postDataType>\r\n    newPostText: string\r\n    profile: ProfileType | null\r\n    status: string\r\n}\r\n\r\nlet initialState: profileReducerType = {\r\n    postData: [\r\n        {id: 1, message: 'Sosiska', likeCount: 23},\r\n        {id: 2, message: 'REDDISKA', likeCount: 77},\r\n        {id: 3, message: 'Do you want me? ', likeCount: 107},\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n    status: \"\",\r\n}\r\n\r\nexport const profileReduser = (state: profileReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [{id: new Date().getTime(), message: state.newPostText, likeCount: 0}, ...state.postData],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.postText\r\n            }\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS:{\r\n            return {...state,status:action.textStatus}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionTypes = addPostACType | newTextACType | setUsersProfileType|SetStatusType\r\n\r\ntype addPostACType = ReturnType<typeof addPostAC>\r\nexport const addPostAC = (postText: string) => ({type: ADD_POST, postText} as const)\r\n\r\ntype newTextACType = ReturnType<typeof updateNewPostTextAC>\r\nexport const updateNewPostTextAC = (postText: string) => ({type: UPDATE_NEW_POST_TEXT, postText} as const)\r\n\r\ntype setUsersProfileType = ReturnType<typeof setUsersProfile>\r\nexport const setUsersProfile = (profile: ProfileType | null) => ({type: SET_USERS_PROFILE, profile} as const)\r\n\r\ntype SetStatusType = ReturnType<typeof setStatus>\r\nexport const setStatus = (textStatus: string) => ({type: SET_STATUS, textStatus} as const)\r\n\r\n\r\n\r\nexport const getCurrenUsersProfile = (userId: string) => (dispatch: Dispatch) => {\r\n    profileAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUsersProfile(response.data))\r\n        })\r\n\r\n}\r\n\r\nexport const getStatusProfile = (userId: string) => (dispatch: Dispatch) => {\r\n    profileAPI.getStatusProfile(userId)\r\n        .then(res=>{\r\n            dispatch(setStatus(res.data))\r\n        })\r\n}\r\n\r\nexport const updateStatus = (status:string) => (dispatch: Dispatch) => {\r\n    profileAPI.updateStatus(status)\r\n        .then(res=>{\r\n            console.log(res)\r\n            if (res.data.resultCode === 0){\r\n                dispatch(setStatus(status))\r\n            }\r\n\r\n        })\r\n}","type imagesDataType = {\r\n    image: string\r\n}\r\nexport type sidebarReducerType = {\r\n    imagesData: Array<imagesDataType>\r\n}\r\n\r\nlet initialState: sidebarReducerType = {\r\n    imagesData: [\r\n        {image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state: sidebarReducerType = initialState, action: ActionTypes) => {\r\n    return state\r\n}\r\n\r\ntype ActionTypes = {}\r\n\r\nexport default sidebarReducer;","import {authAPI} from \"../api/settingAPI\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst SET_USER_DATA = \"SET-USER-DATA\"\r\nconst SET_PHOTO = \"SET-PHOTO\"\r\n\r\n\r\ntype AuthReduceType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    photo: string|null\r\n}\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    photo: null,\r\n}\r\n\r\nexport const authReducer = (state: AuthReduceType = initialState, action: ActionPropsType): AuthReduceType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {...state, ...action.data, isAuth: true}\r\n        }\r\n        case SET_PHOTO:{\r\n            return {...state, photo:action.photo}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionPropsType = SetPhotoLoginType| SetUserDataType\r\n\r\ntype SetUserDataType = ReturnType<typeof setUsersData>\r\nexport const setUsersData = (id: number,email: string, login: string) => ({type: SET_USER_DATA, data:{id,email,login}} as const)\r\n\r\ntype SetPhotoLoginType = ReturnType<typeof setPhotoLogin>\r\nexport const setPhotoLogin = (photo: string) => ({type: SET_PHOTO, photo}as const)\r\n\r\nexport const authUserLogin = () => (dispatch:Dispatch) =>{\r\n    authAPI.me()\r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                const {id, email, login} = response.data.data;\r\n                dispatch(setUsersData(id, email, login))\r\n                return response\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (res) {\r\n                authAPI.getMePhoto(res.data)\r\n                    .then(response => {\r\n                        dispatch(setPhotoLogin(response.data.photos.small))\r\n                    })}\r\n        })\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {profileReduser} from \"../redux/profile-reducer\";\r\nimport dialogReducer from \"../redux/dialogs-reduser\";\r\nimport sidebarReducer from \"../redux/sidebar-reducer\";\r\nimport {usersReducer} from \"../redux/user-reducer\";\r\nimport {authReducer} from \"../redux/auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReduser,\r\n    dialogPage: dialogReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n//@ts-ignore\r\nwindow.store= store","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"./SideBar/Sidebar\";\r\nimport {store} from \"../../store/store\";\r\nimport {CardContent} from \"@material-ui/core\";\r\nimport {EmojiEmotions, FiberNew, LibraryMusic, Markunread, Person, Settings} from \"@material-ui/icons\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n  let sidebarElements = store.getState().sidebar.imagesData.map((item) => <Sidebar image={item.image}/>)\r\n\r\n    return (\r\n        <div className={style.nav}>\r\n\r\n            <CardContent  >\r\n            <div className={style.item}>\r\n                <Person/>\r\n                <NavLink to=\"/profile\" activeClassName={style.active}> Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <Markunread/>\r\n                <NavLink to=\"/dialogs\" activeClassName={style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <EmojiEmotions/>\r\n                <NavLink to=\"/users\" activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <FiberNew />\r\n                <a>News</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <LibraryMusic/>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <Settings/>\r\n                <a>Settings</a>\r\n            </div>\r\n            </CardContent>\r\n\r\n            <CardContent >\r\n            <div className={style.friendsSidebar}>\r\n                <h3>FRIENDS </h3>\r\n                <div className={style.sidebarElements}>{sidebarElements}</div>\r\n            </div>\r\n                </CardContent >\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import * as React from \"react\";\r\nimport {Box, Button, Drawer, List, ListItem} from \"@material-ui/core\";\r\nimport {Menu} from \"@material-ui/icons\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\ntype Anchor = \"left\"\r\n\r\nexport const HeaderMenu = () => {\r\n    const [state, setState] = React.useState({\r\n        left: false,\r\n\r\n    });\r\n\r\n    const toggleDrawer = (anchor: Anchor, open: boolean) => (\r\n        event: React.KeyboardEvent | React.MouseEvent\r\n    ) => {\r\n        if (\r\n            event.type === \"keydown\" &&\r\n            ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n                (event as React.KeyboardEvent).key === \"Shift\")\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setState({...state, [anchor]: open});\r\n    };\r\n\r\n    const list = (anchor: Anchor) => (\r\n        <Box\r\n            style={{ background:\"linear-gradient(326deg, rgba(255,108,2,1) 30%, rgba(2,152,142,1) 67%\",\r\n                height:\"100%\", padding:\"0\"}}\r\n            sx={{width: 250}}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List style={{padding:\"0\", margin:\"0\"}}>\r\n                <ListItem style={{padding:\"0\", margin:\"0\"}}>\r\n                    <Navbar/>\r\n                </ListItem>\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <Button size={'large'} onClick={toggleDrawer(\"left\", true)}> <Menu style={{color:\"white\"}} /> </Button>\r\n                <Drawer\r\n                    anchor={\"left\"}\r\n                    open={state[\"left\"]}\r\n                    onClose={toggleDrawer(\"left\", false)}\r\n                >\r\n                    {list(\"left\")}\r\n                </Drawer>\r\n            </>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/headerImages.adb5c696.png\";","import React from 'react';\r\nimport {AppBar, Button, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {HeaderMenu} from \"./HeaderMenu\";\r\nimport headerImages from \"../../images/headerImages.png\"\r\nimport s from './Header.module.css'\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    photo: string | null\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <AppBar style={{backgroundColor: \"#02988e\"}} position={\"relative\"}>\r\n            <Toolbar>\r\n                <HeaderMenu/>\r\n                <Typography variant={\"h1\"} component=\"div\" sx={{flexGrow: 1}}/>\r\n\r\n                {props.isAuth ? <div className={s.login}><img className={s.photoHeader} src={props.photo ? props.photo : headerImages}/>{props.login}</div>\r\n                    : <Button color=\"inherit\" style={{color: \"#cc5aa6\", fontWeight: \"bold\"}}>Login</Button>}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {connect} from \"react-redux\";\r\nimport {authUserLogin} from \"../../redux/auth-reducer\";\r\n\r\ntype MapStateUserType = {\r\n    isAuth: boolean,\r\n    login: string | null,\r\n    photo: string|null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    authUserLogin: () => void\r\n}\r\ntype UsersLoginPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.Component<UsersLoginPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.authUserLogin()\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProp = (state: AppStateType): MapStateUserType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        photo: state.auth.photo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProp, {authUserLogin})(HeaderContainer)","import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport {usersType} from \"../../redux/user-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Avatar, Button, Paper} from \"@material-ui/core\";\r\n\r\ntype UsersType = {\r\n    pageSize: number\r\n    users: usersType[]\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n    followingProgress: number[]\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n\r\n    const photoUser = props.users.filter(f => f.photos.small !== null)\r\n    const notPhotoUser = props.users.filter(f => f.photos.small == null)\r\n    const usersDisplay = [...photoUser, ...notPhotoUser]\r\n\r\n    return (\r\n        <div className={s.usersContainer}>\r\n            {usersDisplay.map(u =>\r\n                <Paper elevation={3} sx={{borderRadius:\"20px\"}}>\r\n                    <div key={u.id}>\r\n                        <div className={s.user}>\r\n                            <div>\r\n                                <NavLink to={'/profile/' + u.id}>\r\n                                    <div>\r\n                                        {u.photos.small !== null ? <img src={u.photos.small} className={s.userPhoto}/>\r\n                                            : <Avatar className={s.userPhoto} sx={{\r\n                                                fontSize: \"50px\",\r\n                                                width: \"100px\",\r\n                                                height: \"100px\",\r\n                                                background: \"#10ab9e\"\r\n                                            }}> {u.name[0].toUpperCase()}</Avatar>}\r\n                                    </div>\r\n\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={s.name}>\r\n                                <span className={s.span}>{u.name.substr(1,15)}</span>\r\n                            </div>\r\n                            <div>\r\n                                {u.followed\r\n                                    ? <Button variant={\"outlined\"} size={'small'} color={\"error\"} disabled={props.followingProgress.some(id => id === u.id)}\r\n                                              onClick={() => {\r\n                                                  props.unfollow(u.id)\r\n                                              }}>Unfollow</Button>\r\n\r\n                                    : <Button variant={\"contained\"} color={\"warning\"} size={'small'} disabled={props.followingProgress.some(id => id === u.id)} onClick={() => {\r\n                                        props.follow(u.id)\r\n                                    }}>Follow</Button>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            )}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/preloader.3fb26d9b.gif\";","import React from \"react\";\r\nimport preloader from \"../../images/preloader.gif\";\r\n\r\nexport const Preloader = () => {\r\n\r\n    let divStyle = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n\r\n    let imgStyle = {\r\n        width: \"80px\",\r\n        height: \"100px\",\r\n    }\r\n    return <div style={divStyle}> <img style={imgStyle} src={preloader}/> </div>\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport s from \"./Users.module.css\";\r\nimport {Preloader} from \"../common/Preloader\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage,\r\n    unfollow,\r\n    usersType\r\n} from \"../../redux/user-reducer\";\r\nimport {Pagination} from \"@material-ui/core\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStateUserType = {\r\n    users: usersType[]\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n}\r\nexport type MapDispatchPropsType = {\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setCurrentPage: (numberPage: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\ntype UsersPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType, {}> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUserCount / this.props.pageSize)\r\n\r\n        return (\r\n            <div>\r\n                <div className={s.paginator}>\r\n                    <Pagination sx={{padding:\"10px 0 15px 0\"}} color={\"standard\"} onChange={(event, page) => {\r\n                        this.onPageChanged(page)\r\n                    }}\r\n                                count={pagesCount} variant={'text'} shape=\"rounded\" defaultPage={1} siblingCount={22} size={\"small\"}/>\r\n                </div>\r\n                <>\r\n                    {this.props.isFetching ? <Preloader/>\r\n                        : null}\r\n                    <Users\r\n                        pageSize={this.props.pageSize}\r\n                        users={this.props.users}\r\n                        unfollow={this.props.unfollow}\r\n                        follow={this.props.follow}\r\n                        followingProgress={this.props.followingProgress}\r\n                    />\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateUserType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingProgress: state.usersPage.followingProgress,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, getUsers})\r\n)(UsersContainer)","import React, {ChangeEvent} from \"react\";\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\ntype stateType = {\r\n    editMod: boolean\r\n    status: string\r\n}\r\n\r\n\r\nexport class ProfileStatus extends React.Component <ProfileStatusPropsType> {\r\n\r\n    state = {\r\n        editMod: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMod: true\r\n        })\r\n    }\r\n\r\n    onBlurEditMode = () => {\r\n        this.setState({\r\n            editMod: false\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate = (prevProps: ProfileStatusPropsType, prevState: stateType) => {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                {!this.state.editMod ?\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>\r\n                        {this.props.status || \"Add status\"}\r\n                        </span>\r\n                    </div>\r\n                    : <div>\r\n                        <input onChange={this.onStatusChange} autoFocus onBlur={this.onBlurEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport image from '../../../images/headerImages.png'\r\n\r\ntype ProfileInfoComponentType = {\r\n    profile: ProfileType|null\r\n    status: string\r\n    updateStatus: (status:string) => void\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoComponentType) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <img src={props.profile?.photos.large || image } alt={\"Images profile\"}/>\r\n                    <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n<br/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\n\r\nconst Post = (props: PropsType) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src=\"https://bizlit.com.ua/image/data/pictures/YeDYzSR-10apkm4.png\"/>\r\n            <div className={style.messagePost}>\r\n                {props.message}\r\n\r\n                <div className={style.likeType}>\r\n                    <span className={style.countLike}>{props.likeCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {KeyboardEvent} from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostPropsType} from \"./MyPostsContainer\";\r\n\r\nconst MyPosts = (props: PostPropsType) => {\r\n\r\n    let postsElements = props.profilePage.postData.map(post => <Post message={post.message} likeCount={post.likeCount}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let addPosts = () => {\r\n        let text = newPostElement.current?.value;\r\n       text && props.addPosts(text);\r\n        // let text = newPostElement.current?.value;\r\n        // text && props.dispatch(addPostActionCreator(text))\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current?.value;\r\n        text && props.onPostChange(text)\r\n        // text && props.dispatch(updateNewPostTextActionCreator(text))\r\n    }\r\n\r\n    const keyClick = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.charCode === 13) {\r\n            addPosts()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3> My posts </h3>\r\n            <div>\r\n                <textarea onKeyPress={keyClick} onChange={onPostChange} ref={newPostElement} value={props.profilePage.newPostText}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={addPosts}>Add post</button>\r\n            </div>\r\n\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostAC, profileReducerType, updateNewPostTextAC} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateProfileType = {\r\n    profilePage: profileReducerType\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPosts: (text: string) => void\r\n    onPostChange: (text: string) => void\r\n}\r\nexport type PostPropsType = MapStateProfileType & MapDispatchPropsType\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateProfileType => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPosts: (text: string) => {\r\n            text && dispatch(addPostAC(text));\r\n        },\r\n        onPostChange: (text: string) => {\r\n            text && dispatch(updateNewPostTextAC(text))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\n\r\n\r\ntype ProfileComponentType = {\r\n    profile: ProfileType|null\r\n    status: string\r\n    updateStatus: (status:string) => void\r\n}\r\n\r\nexport const Profile = (props:ProfileComponentType) => {\r\n\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status}  updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport {Profile} from \"./Profile\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {getCurrenUsersProfile, getStatusProfile, ProfileType, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getCurrenUsersProfile: (userId: string) => void\r\n    getStatusProfile: (userId: string) => void\r\n    updateStatus: (status:string) => void\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\ntype OwnPropsType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = \"20026\";\r\n        }\r\n        this.props.getCurrenUsersProfile(userId)\r\n        this.props.getStatusProfile(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n    )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getCurrenUsersProfile, getStatusProfile,updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer)","import React from \"react\";\r\n\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport const LoginForm = () => {\r\n    return (\r\n            <form>\r\n                <div>\r\n                    <input placeholder={\"Login\"}/>\r\n                </div>\r\n                <div>\r\n                    <input placeholder={\"Password\"}/>\r\n                </div>\r\n                <div>\r\n                    <input type={\"checkbox\"}/> Remember my\r\n                </div>\r\n                <div>\r\n                    <button>LogIn</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport {Login} from \"./components/login/Login\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <HeaderContainer/>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{minHeight:\"100vh\",padding:\"10px\", backgroundColor:\"#ecffea\"}}>\r\n\r\n                            <Route exact path={'/'} render={() => <Redirect to={'/profile'}/>}/>\r\n\r\n                            <Route path=\"/dialogs\"\r\n                                   render={() => <DialogsContainer/>}/>\r\n\r\n                            <Route path=\"/profile/:userId?\"\r\n                                   render={() => <ProfileContainer/>}/>\r\n\r\n                            <Route path=\"/users\"\r\n                                   render={() => <UsersContainer/>}/>\r\n\r\n                            <Route path=\"/login\"\r\n                                   render={() => <Login/>}/>\r\n                        </Grid>\r\n                    </Grid>\r\n        </HashRouter>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport {store} from \"./store/store\";\nimport {Provider} from \"react-redux\";\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>\n        , document.getElementById('root')\n    );\n}\nrerenderEntireTree()\n\nstore.subscribe(()=>{\n    rerenderEntireTree()\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1uFet\",\"selectedPage\":\"Users_selectedPage__2yzV4\",\"usersContainer\":\"Users_usersContainer__16uvB\",\"user\":\"Users_user__1G7hI\",\"name\":\"Users_name__u2WlR\",\"paginator\":\"Users_paginator__8Gq43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__c9gD9\",\"item\":\"Post_item__bSl-J\",\"messagePost\":\"Post_messagePost__3uuyM\",\"countLike\":\"Post_countLike__S3MtX\",\"likeType\":\"Post_likeType__3kNlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__H0yV5\",\"photoHeader\":\"Header_photoHeader__1LYeP\",\"login\":\"Header_login___9nR7\"};"],"sourceRoot":""}