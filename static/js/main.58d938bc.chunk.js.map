{"version":3,"sources":["components/Profile/myPosts/Post/Post.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","redux/userReducer.ts","components/Header/Header.tsx","components/Navbar/SideBar/Sidebar.tsx","redux/profile-reducer.tsx","redux/dialogs-reduser.tsx","redux/sidebar-reducer.tsx","redux/redux-store.ts","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/myPosts/Post/Post.tsx","components/Profile/myPosts/MyPosts.tsx","components/Profile/myPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","images/userImages.png","components/Users/Users.tsx","components/Users/UsersContainer.tsx","App.tsx","index.tsx"],"names":["module","exports","ACTIONS_TYPE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","style","header","src","Sidebar","props","image","sidebarImg","ADD_POST","UPDATE_NEW_POST_TEXT","initialState","postData","id","message","likeCount","newPostText","UPDATE_NEW_MESSAGE_TEXT","SEND_MESSAGE","dialogsData","name","messagesData","newMessageText","dialogReducer","state","action","type","newText","body","imagesData","sidebarReducer","users","pageSize","totalUserCount","currentPage","rootReducer","combineReducers","profilePage","Date","getTime","postText","dialogPage","sidebar","usersPage","FOLLOW","map","m","userID","followed","UNFOLLOW","SET_USERS","SET_CURRENT","page","SET_TOTAL_COUNT","totalCount","store","createStore","window","Navbar","sidebarElements","getState","item","nav","to","activeClassName","active","friendsSidebar","ProfileInfo","img","Post","messagePost","likeType","countLike","MyPosts","postsElements","post","newPostElement","React","createRef","addPosts","text","current","value","onKeyPress","event","charCode","onChange","onPostChange","ref","onClick","posts","MyPostsContainer","connect","dispatch","Profile","DialogItem","path","containerDialog","dialogsStyle","imageDialog","Message","messageStyle","wrapper_style","wrapper","Dialogs","dialogsElements","dialog","messagesElements","messages","newMessageBody","onSendMessageClick","dialogs","dialogsItem","buttonMessage","target","onNewMessageChange","placeholder","textArea","DialogsContainer","Users","pagesCount","Math","ceil","pages","i","push","p","s","selectedPage","onPageChanged","photos","small","userImages","userPhoto","unfollow","follow","status","UsersContainer","axios","get","this","response","setUsers","data","items","setTotalUsersCount","pageNumber","setCurrentPage","bind","Component","usersID","setUsersAC","numberPage","totalUsersCount","App","exact","render","rerenderEntireTree","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.58d938bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__2y9CA\",\"item\":\"Post_item__2e1ow\",\"messagePost\":\"Post_messagePost__2tAxE\",\"countLike\":\"Post_countLike__3jVtI\",\"likeType\":\"Post_likeType__2tFvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1aUe3\",\"selectedPage\":\"Users_selectedPage__e5Bse\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__xCRiM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2FJyO\",\"dialogsItem\":\"Dialogs_dialogsItem__MSxD1\",\"messages\":\"Dialogs_messages__2CafO\",\"dialogsStyle\":\"Dialogs_dialogsStyle__13RnD\",\"active\":\"Dialogs_active__3jWpU\",\"wrapper\":\"Dialogs_wrapper__1ANx0\",\"wrapper_style\":\"Dialogs_wrapper_style__3uhjr\",\"messageStyle\":\"Dialogs_messageStyle__1Wb6M\",\"imageDialog\":\"Dialogs_imageDialog__DoiRT\",\"buttonMessage\":\"Dialogs_buttonMessage__11m31\",\"textArea\":\"Dialogs_textArea__TqoYL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3gxxt\",\"item\":\"Navbar_item__1hAV5\",\"active\":\"Navbar_active__WDzq8\",\"friendsSidebar\":\"Navbar_friendsSidebar__YQ87y\",\"sidebarImg\":\"Navbar_sidebarImg__3zP9Q\",\"sidebarElements\":\"Navbar_sidebarElements__3eZXY\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export enum ACTIONS_TYPE {\r\n    FOLLOW = 'Users/FOLLOW',\r\n    UNFOLLOW = 'Users/UNFOLLOW',\r\n    SET_USERS = 'Users/SET_USERS',\r\n    SET_CURRENT = 'Users/SET_CURRENT',\r\n    SET_TOTAL_COUNT = 'Users/SET_TOTAL_COUNT',\r\n}\r\n\r\nexport type usersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string | null\r\n    photos: { small: string, large: string }\r\n}\r\nexport type usersReduceType = {\r\n    users: usersType[],\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 50,\r\n    totalUserCount: 233,\r\n    currentPage: 1,\r\n}\r\n\r\n\r\nexport const usersReducer = (state: usersReduceType = initialState, action: ActionUsersType): usersReduceType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW: {\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: true} : m)}\r\n        }\r\n        case ACTIONS_TYPE.UNFOLLOW: {\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: false} : m)}\r\n        }\r\n        case ACTIONS_TYPE.SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case ACTIONS_TYPE.SET_CURRENT: {\r\n            return {...state, currentPage: action.page}\r\n        }\r\n        case ACTIONS_TYPE.SET_TOTAL_COUNT:{\r\n            return {...state, totalUserCount: action.totalCount}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ActionUsersType = followACType | unfollowACType | setUsersType | setCurrentPageType | setTotalUsersCountType\r\n\r\nexport type followACType = ReturnType<typeof followAC>\r\nexport const followAC = (userID: number) => ({type: ACTIONS_TYPE.FOLLOW, userID} as const)\r\n\r\nexport type unfollowACType = ReturnType<typeof unfollowAC>\r\nexport const unfollowAC = (userID: number) => ({type: ACTIONS_TYPE.UNFOLLOW, userID: userID} as const)\r\n\r\nexport type setUsersType = ReturnType<typeof setUsersAC>\r\nexport const setUsersAC = (users: usersType[]) => ({type: ACTIONS_TYPE.SET_USERS, users} as const)\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPageAC>\r\nexport const setCurrentPageAC = (page: number) => ({type: ACTIONS_TYPE.SET_CURRENT, page} as const)\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCountAC>\r\nexport const setTotalUsersCountAC = (totalCount: number) => ({type: ACTIONS_TYPE.SET_TOTAL_COUNT, totalCount} as const)\r\n\r\n","import React from 'react';\r\nimport style from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return <header className={style.header}>\r\n        <img src='http://pngimg.com/uploads/megaphone/megaphone_PNG94.png'/>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from '../Navbar.module.css';\r\n\r\ntype sidebarType = {\r\n    image: string\r\n}\r\n\r\nconst Sidebar = (props:sidebarType) => {\r\n    return (\r\n            <div>\r\n                <div >\r\n                    <img src={props.image} className={style.sidebarImg}/>\r\n                </div>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Sidebar;","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\ntype postDataType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type profileReducerType = {\r\n    postData: Array<postDataType>\r\n    newPostText: string\r\n}\r\n\r\nlet initialState: profileReducerType = {\r\n    postData: [\r\n        {id: 1, message: 'Games', likeCount: 23},\r\n        {id: 2, message: 'sdsdsssssssss', likeCount: 77},\r\n        {id: 3, message: 'Do you want me? ', likeCount: 107},\r\n    ],\r\n    newPostText: '',\r\n}\r\n\r\nexport const profileReduser = (state: profileReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n         return  {\r\n            ...state,\r\n                postData: [{id: new Date().getTime(), message: state.newPostText, likeCount: 0},...state.postData],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return  {...state,\r\n                newPostText: action.postText\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionTypes = addPostACType | newTextACType\r\n\r\nexport type addPostACType = ReturnType<typeof addPostActionCreator>\r\nexport const addPostActionCreator = (postText: string) => ({type: ADD_POST, postText} as const)\r\n\r\nexport type newTextACType = ReturnType<typeof updateNewPostTextActionCreator>\r\nexport const updateNewPostTextActionCreator = (postText: string) => ({type: UPDATE_NEW_POST_TEXT, postText} as const)\r\n","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGES';\r\n\r\ntype dialogsDataType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\ntype messagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type dialogReducerType = {\r\n    dialogsData: Array<dialogsDataType>\r\n    messagesData: Array<messagesDataType>\r\n    newMessageText: string\r\n}\r\n\r\nlet initialState: dialogReducerType = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Sveta\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"\r\n        },\r\n        {id: 3, name: \"Sasha\", image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {\r\n            id: 4,\r\n            name: \"Viktor\",\r\n            image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Valera\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your it-kamasutra?\"},\r\n        {id: 3, message: \"yo Hi\"},\r\n        {id: 4, message: \"Hello Hi\"},\r\n        {id: 5, message: \"Yo yo yo\"},\r\n    ],\r\n    newMessageText: '',\r\n}\r\n\r\nconst dialogReducer = (state: dialogReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            };\r\n        }\r\n        case SEND_MESSAGE: {\r\n            let body = state.newMessageText;\r\n            if (body !== \"\") {\r\n                return {\r\n                    ...state,\r\n                    newMessageText: \"\",\r\n                    messagesData: [...state.messagesData, {id: 6, message: body}]\r\n                }\r\n            } else {\r\n                return state\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype ActionTypes = messageAC | updateMessageAC\r\nexport type messageAC = ReturnType<typeof sendMessageCreator>\r\nexport const sendMessageCreator = (newText: string) => ({type: SEND_MESSAGE, newText} as const)\r\n\r\nexport type updateMessageAC = ReturnType<typeof updateNewMessageBodyCreator>\r\nexport const updateNewMessageBodyCreator = (newText: string) => ({type: UPDATE_NEW_MESSAGE_TEXT, newText} as const)\r\n\r\n\r\nexport default dialogReducer;","type imagesDataType = {\r\n    image: string\r\n}\r\nexport type sidebarReducerType = {\r\n    imagesData: Array<imagesDataType>\r\n}\r\n\r\nlet initialState: sidebarReducerType = {\r\n    imagesData: [\r\n        {image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state: sidebarReducerType = initialState, action: ActionTypes) => {\r\n    return state\r\n}\r\n\r\ntype ActionTypes = {}\r\n\r\nexport default sidebarReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport {profileReduser} from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialogs-reduser\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport {usersReducer} from \"./userReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReduser,\r\n    dialogPage: dialogReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer)\r\n\r\n//@ts-ignore\r\nwindow.store= store","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"./SideBar/Sidebar\";\r\nimport {store} from \"../../redux/redux-store\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n  let sidebarElements = store.getState().sidebar.imagesData.map((item) => <Sidebar image={item.image}/>)\r\n\r\n    return (\r\n        <nav className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/Social_Network/profile\" activeClassName={style.active}> Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/Social_Network/dialogs\" activeClassName={style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/Social_Network/users\" activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n\r\n            <div className={style.friendsSidebar}>\r\n            <h3>FRIENDS </h3>\r\n           <div className={style.sidebarElements}>{sidebarElements}</div>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\n\r\n\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img className={style.img} src=\"https://lifeo.ru/wp-content/uploads/vesna-100-min.jpg\"/>\r\n            </div>\r\n            <div>\r\n                ava + discription\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\n\r\nconst Post = (props: PropsType) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src=\"https://bizlit.com.ua/image/data/pictures/YeDYzSR-10apkm4.png\"/>\r\n            <div className={style.messagePost}>\r\n                {props.message}\r\n\r\n                <div className={style.likeType}>\r\n                    <span className={style.countLike}>{props.likeCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {KeyboardEvent} from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostPropsType} from \"./MyPostsContainer\";\r\n\r\nconst MyPosts = (props: PostPropsType) => {\r\n\r\n    let postsElements = props.profilePage.postData.map(post => <Post message={post.message} likeCount={post.likeCount}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let addPosts = () => {\r\n        let text = newPostElement.current?.value;\r\n       text && props.addPosts(text);\r\n        // let text = newPostElement.current?.value;\r\n        // text && props.dispatch(addPostActionCreator(text))\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current?.value;\r\n        text && props.onPostChange(text)\r\n        // text && props.dispatch(updateNewPostTextActionCreator(text))\r\n    }\r\n\r\n    const keyClick = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.charCode === 13) {\r\n            addPosts()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3> My posts </h3>\r\n            <div>\r\n                <textarea onKeyPress={keyClick} onChange={onPostChange} ref={newPostElement} value={props.profilePage.newPostText}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={addPosts}>Add post</button>\r\n            </div>\r\n\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, profileReducerType, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateProfileType = {\r\n    profilePage: profileReducerType\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPosts: (text: string) => void\r\n    onPostChange: (text: string) => void\r\n}\r\nexport type PostPropsType = MapStateProfileType & MapDispatchPropsType\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateProfileType => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPosts: (text: string) => {\r\n            text && dispatch(addPostActionCreator(text));\r\n        },\r\n        onPostChange: (text: string) => {\r\n            text && dispatch(updateNewPostTextActionCreator(text))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    return <div>\r\n        <ProfileInfo/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype dialogsType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\n\r\nconst DialogItem = (props:dialogsType) => {\r\n    const path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={style.containerDialog}>\r\n\r\n            <NavLink to={path} activeClassName={style.active} className={style.dialogsStyle}>\r\n                 <img src={props.image} className={style.imageDialog}/>\r\n                <div> {props.name}</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\n\r\n\r\ntype messageType = {\r\n    message: string\r\n}\r\n\r\n\r\nconst Message: React.FC<messageType> = (props) => {\r\n    return (\r\n        <div className={style.messageStyle}>\r\n\r\n            <div className={style.wrapper_style}>\r\n            </div>\r\n\r\n            <div className={style.wrapper}>\r\n\r\n             <div>{props.message} </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Message;","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogPropsType} from \"./DialogsContainer\";\r\n\r\n\r\nfunction Dialogs (props: DialogPropsType) {\r\n\r\n\r\n    let dialogsElements = props.dialogPage.dialogsData.map(dialog => <DialogItem key={dialog.id} image={dialog.image} name={dialog.name}\r\n                                                                      id={dialog.id}/>)\r\n\r\n    let messagesElements = props.dialogPage.messagesData.map(messages => <Message key={messages.id} message={messages.message}/>)\r\n\r\n    let newMessageBody = props.dialogPage.newMessageText;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.onSendMessageClick(newMessageBody);\r\n    }\r\n    let onNewMessageChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = event.target.value;\r\n        props.onNewMessageChange(body);\r\n    }\r\n\r\n    const keyClick = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.charCode === 13) {\r\n            onSendMessageClick()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n\r\n                {dialogsElements}\r\n\r\n\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <div className={style.buttonMessage}>\r\n                    <textarea onChange={onNewMessageChange} onKeyPress={keyClick} placeholder=\"Enter your message\"\r\n                              value={newMessageBody} className={style.textArea}/>\r\n                    <button onClick={onSendMessageClick}>Отправить</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {dialogReducerType, sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype MapStateDialogType = {\r\n    dialogPage: dialogReducerType\r\n}\r\ntype MapDispatchDialogType = {\r\n    onSendMessageClick: (newMessageBody: string) => void\r\n    onNewMessageChange: (body: string) => void\r\n}\r\nexport type DialogPropsType = MapStateDialogType & MapDispatchDialogType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogPage: state.dialogPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        onSendMessageClick: (newMessageBody: string) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n        onNewMessageChange: (body: string) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\nexport default DialogsContainer;","export default __webpack_public_path__ + \"static/media/userImages.027e123a.png\";","import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport userImages from \"../../images/userImages.png\"\r\nimport { usersType} from \"../../redux/userReducer\";\r\n\r\ntype UsersType = {\r\n    totalUserCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: usersType[]\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n    debugger\r\n    let pagesCount = Math.ceil(props.totalUserCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p =>\r\n                    <span className={props.currentPage === p ? s.selectedPage : \"\"}\r\n                          onClick ={ () => {props.onPageChanged(p) } }>{p}</span>)}\r\n            </div>\r\n            {\r\n                props.users.map(m => <div key={m.id}>\r\n                <span>\r\n                    <div>\r\n                        <img src={m.photos.small !== null ? m.photos.small : userImages} className={s.userPhoto}/>\r\n                    </div>\r\n                    <div>\r\n                        {m.followed\r\n                            ? <button onClick={() => {\r\n                                props.unfollow(m.id)\r\n                            }}>Unfollow</button>\r\n                            : <button onClick={() => {\r\n                                props.follow(m.id)\r\n                            }}>Follow</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n                    <span>\r\n                    <span>\r\n                          <div>{m.name}</div>\r\n                        <div>{m.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"m.location.city\"}</div>\r\n                        <div>{\"m.location.country\"}</div>\r\n                    </span>\r\n                </span>\r\n                </div>)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {\r\n    followAC,\r\n    setCurrentPageAC,\r\n    setTotalUsersCountAC,\r\n    setUsersAC,\r\n    unfollowAC,\r\n    usersType\r\n} from \"../../redux/userReducer\";\r\n\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport {Users} from \"./Users\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateUserType = {\r\n    users: usersType[]\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n}\r\ntype MapDispatchPropsType = {\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setUsers: (users: usersType[]) => void\r\n    setCurrentPage: (numberPage: number) => void\r\n    setTotalUsersCount: (totalUsersCount: number) => void\r\n}\r\ntype UsersPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\ntype GetTypeResponseUserAPI = {\r\n    items: usersType[]\r\n    totalCount: number\r\n    error: null\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n        axios.get<GetTypeResponseUserAPI>(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items)\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        });\r\n    }\r\n\r\n    onPageChanged(pageNumber: number){\r\n        this.props.setCurrentPage(pageNumber);\r\n        axios.get<GetTypeResponseUserAPI>(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setUsers(response.data.items)\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <Users\r\n                totalUserCount={this.props.totalUserCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged.bind(this)}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state: AppStateType): MapStateUserType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        follow: (usersID: number) => {\r\n            dispatch(followAC(usersID))\r\n        },\r\n\r\n        unfollow: (usersID: number) => {\r\n            dispatch(unfollowAC(usersID))\r\n        },\r\n        setUsers: (users: usersType[]) => {\r\n            dispatch(setUsersAC(users))\r\n        },\r\n        setCurrentPage: (numberPage: number) => {\r\n            dispatch(setCurrentPageAC(numberPage))\r\n        },\r\n        setTotalUsersCount: (totalUsersCount: number) => {\r\n            dispatch(setTotalUsersCountAC(totalUsersCount))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer)\r\n","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Profile from \"./components/Profile/Profile\";\nimport {Redirect, Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\n\n\n\n\nconst App = () => {\n    return (\n        <div className='app-wrapper'>\n            <Header/>\n            <Navbar />\n            <div className='app-wrapper-content'>\n                <Route exact path={'/'} render={() => <Redirect to={'/profile'}/>}/>\n\n                <Route path='/dialogs'\n                       render={() => <DialogsContainer/>}/>\n\n                <Route path='/profile'\n                       render={() => <Profile/>}/>\n\n                <Route path='/users'\n                       render={() => <UsersContainer/>}/>\n            </div>\n        </div>\n    )\n\n}\n\n\nexport default App;\n","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from \"./App\";\nimport React from \"react\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root')\n    );\n}\nrerenderEntireTree()\n\nstore.subscribe(()=>{\n    rerenderEntireTree()\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}