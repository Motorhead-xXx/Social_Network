{"version":3,"sources":["components/Profile/myPosts/MyPosts.module.css","components/Profile/myPosts/Post/Post.module.css","components/login/LoginStyle.module.css","components/Profile/Profile.module.css","reportWebVitals.ts","reducers/dialogs-reduser.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/hoc/withAuthRedirect.tsx","reducers/user-reducer.ts","components/Dialogs/DialogsContainer.tsx","components/Navbar/Navbar.tsx","components/Header/HeaderMenu.tsx","images/headerImages.png","components/Header/Header.tsx","api/paramsAPI.ts","reducers/app-reducer.ts","reducers/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Users/User.tsx","components/Users/Users.tsx","images/preloader.gif","components/common/Preloader.tsx","utils/object-halper.ts","reducers/users-selector.ts","components/Users/UsersContainer.tsx","images/spiderMan.svg","components/Profile/ProfileInfo/ProfileStatusWidthHook.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","reducers/profile-reducer.tsx","components/Profile/myPosts/Post/Post.tsx","components/Profile/myPosts/MyPosts.tsx","components/Profile/myPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","components/common/errorSnackbar.tsx","store/store.ts","components/login/Login.tsx","App.tsx","reducers/sidebar-reducer.tsx","index.tsx","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SEND_MESSAGE","initialState","dialogsData","id","name","image","messagesData","message","dialogReducer","state","action","type","text","newMessageText","DialogItem","props","path","className","style","containerDialog","to","activeClassName","active","dialogsStyle","src","imageDialog","MessageComponent","messageStyle","wrapper_style","wrapper","AddMessageForm","useFormik","initialValues","newMessage","onSubmit","values","resetForm","onSendMessage","handleSubmit","formDialogs","TextField","sx","width","background","multiline","maxRows","onChange","handleChange","placeholder","value","size","IconButton","color","Send","fontSize","Dialogs","dialogsElements","dialogPage","map","dialog","messagesElements","messages","Message","dialogs","dialogsItem","buttonMessage","mapStateToProps","isAuth","auth","ACTIONS_TYPE","compose","connect","Component","restProps","Navbar","nav","CardContent","wrapperItems","item","Person","spanLink","Markunread","EmojiEmotions","FiberNew","LibraryMusic","Settings","HeaderMenu","anchor","React","left","setState","toggleDrawer","open","event","key","Button","onClick","Menu","Drawer","onClose","Box","height","padding","role","onKeyDown","List","margin","ListItem","Header","AppBar","backgroundColor","position","Toolbar","s","headerMain","headerMenu","Typography","variant","component","flexGrow","login","photoHeader","photo","headerImages","logOut","fontWeight","instance","axios","create","withCredentials","baseURL","headers","userAPI","getUsers","currentPage","pageSize","get","res","data","unfollowUsers","delete","followUsers","post","authAPI","params","profileAPI","userId","status","put","error","initialized","setAppError","SET_USER_DATA","SET_PHOTO","email","setUsersData","authUserLogin","dispatch","a","response","resultCode","HeaderContainer","this","User","user","Paper","elevation","borderRadius","photos","small","userPhoto","Avatar","toUpperCase","span","substr","followed","disabled","followingProgress","some","unfollow","follow","Users","photoUser","users","filter","f","notPhotoUser","usersDisplay","usersContainer","u","Preloader","display","justifyContent","preloader","updateOjectInArray","items","itemId","objPropName","newObjProps","totalUserCount","isFetching","acceptFollow","userID","FOLLOW","acceptUnfollow","UNFOLLOW","setCurrentPage","page","SET_CURRENT","toggleFetching","TOGGLE_FETCHING","toggleFollowingProgress","FOLLOWING_PROGRESS","folowUnfolowFlow","apiMethod","actionCreator","getUsersSelect","usersPage","getPageSize","getTotalCount","getCurrentPage","getIsFetching","getFollowingProgress","stylePaginatorPaper","minWidth","minHeight","alignItems","UsersContainer","pageNumber","pagesCount","Math","ceil","containerWrapper","paginator","Pagination","onPageChanged","count","shape","defaultPage","siblingCount","bind","SET_USERS","totalCount","SET_TOTAL_COUNT","ProfileStatusWidthHook","useState","editMode","setEditMode","setStatus","useEffect","onDoubleClick","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","containerProfileData","imageProfile","profile","large","alt","info","ADD_POST","SET_USERS_PROFILE","SET_STATUS","DELETE_POST","postData","likeCount","textStatus","Post","messagePost","likeType","MyPosts","memo","postsElements","profilePage","containerPost","addPost","posts","AddNewPost","newPostText","label","postText","Profile","profileContainer","MyPostsContainer","ProfileContainer","match","authorizedUserId","history","push","getCurrenUsersProfile","getStatusProfile","console","refreshProfile","withRouter","Alert","ref","ResultCodesEnum","errorApp","app","handleClose","reason","isOpen","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","severity","validationSchema","yup","required","password","min","LoginForm","formik","rememberMe","form","loginFormContainer","prompt","touched","Boolean","errors","helperText","FormControlLabel","control","Checkbox","getFieldProps","checked","loginTC","App","initializeApp","Grid","container","xs","wrapperContent","navbarApp","content","exact","render","DialogsContainer","LinearProgress","promise","Promise","all","imagesData","sidebarReducer","rootReducer","combineReducers","Date","getTime","p","postId","sidebar","store","createStore","applyMiddleware","thunk","window","rerenderEntireTree","ReactDOM","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.e5198aba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerPost\":\"MyPosts_containerPost__3J2fx\",\"addPost\":\"MyPosts_addPost__1a0lb\",\"posts\":\"MyPosts_posts__1mE3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2m7gm\",\"messagePost\":\"Post_messagePost__3Fd09\",\"countLike\":\"Post_countLike__2dhqZ\",\"likeType\":\"Post_likeType__diz1u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginStyle_form__30dUS\",\"loginFormContainer\":\"LoginStyle_loginFormContainer__2uN0j\",\"prompt\":\"LoginStyle_prompt__3LNFQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Profile_img__1eeBw\",\"profileContainer\":\"Profile_profileContainer__3Gmik\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const SEND_MESSAGE = 'SEND-MESSAGES';\r\n\r\ntype dialogsDataType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\ntype messagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type dialogReducerType = {\r\n    dialogsData: Array<dialogsDataType>\r\n    messagesData: Array<messagesDataType>\r\n}\r\n\r\nlet initialState: dialogReducerType = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Sveta\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"\r\n        },\r\n        {id: 3, name: \"Sasha\", image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {\r\n            id: 4,\r\n            name: \"Viktor\",\r\n            image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Valera\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your it-kamasutra?\"},\r\n        {id: 3, message: \"yo Hi\"},\r\n        {id: 4, message: \"Hello Hi\"},\r\n        {id: 5, message: \"Yo yo yo\"},\r\n    ],\r\n}\r\n\r\nconst dialogReducer = (state: dialogReducerType = initialState, action: DialogActionTypes) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let text = action.newMessageText;\r\n           return  text !== \"\" ? {...state, messagesData: [...state.messagesData, {id: 6, message: text}]} : state\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type DialogActionTypes = MessageType\r\nexport type MessageType = ReturnType<typeof onSendMessage>\r\nexport const onSendMessage = (newMessageText: string) => ({type: SEND_MESSAGE, newMessageText} as const)\r\n\r\nexport default dialogReducer;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype dialogsType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\n\r\nconst DialogItem = (props:dialogsType) => {\r\n    const path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={style.containerDialog}>\r\n\r\n            <NavLink to={path} activeClassName={style.active} className={style.dialogsStyle}>\r\n                 <img src={props.image} className={style.imageDialog}/>\r\n                <div> {props.name}</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\n\r\n\r\ntype messageType = {\r\n    message: string\r\n}\r\n\r\n\r\nconst MessageComponent: React.FC<messageType> = (props) => {\r\n    return (\r\n        <div className={style.messageStyle}>\r\n\r\n            <div className={style.wrapper_style}/>\r\n\r\n            <div className={style.wrapper}>\r\n\r\n             <div>{props.message} </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default MessageComponent;","import React from \"react\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {DialogPropsType} from \"./DialogsContainer\";\r\nimport style from './Dialogs.module.css'\r\nimport {useFormik} from 'formik';\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport MessageComponent from \"./Message/Message\";\r\nimport {Send} from \"@material-ui/icons\";\r\n\r\ntype AddMessageType = {\r\n    onSendMessage: (values: string) => void\r\n}\r\n\r\n\r\nconst AddMessageForm = (props: AddMessageType) => {\r\n    const message = useFormik({\r\n        initialValues: {\r\n            newMessage: '',\r\n        },\r\n        onSubmit: (values, {resetForm}) => {\r\n            props.onSendMessage(values.newMessage);\r\n            resetForm()\r\n        },\r\n    });\r\n    return (\r\n        <div>\r\n            <form onSubmit={message.handleSubmit}>\r\n                <div className={style.formDialogs}>\r\n                    <div>\r\n                        <TextField\r\n                            sx={{width: \"500px\", background: \"#ffffdb\"}}\r\n                            multiline={true}\r\n                            maxRows={10}\r\n                            onChange={message.handleChange}\r\n                            id=\"newMessage\"\r\n                            name=\"newMessage\"\r\n                            placeholder=\"New message...\"\r\n                            value={message.values.newMessage}\r\n                            size={\"small\"}/>\r\n                    </div>\r\n                    <div>\r\n                        <IconButton color={\"warning\"} type=\"submit\" aria-label=\"delete\" size=\"small\">\r\n                            <Send fontSize={\"large\"}/>\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props: DialogPropsType) => {\r\n\r\n    let dialogsElements = props.dialogPage.dialogsData.map(dialog => <DialogItem key={dialog.id} image={dialog.image} name={dialog.name} id={dialog.id}/>)\r\n    let messagesElements = props.dialogPage.messagesData.map(messages => <MessageComponent key={messages.id} message={messages.message}/>)\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <div className={style.buttonMessage}>\r\n                    <AddMessageForm onSendMessage={props.onSendMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state:AppStateType):MapStateToPropsType => {\r\n      return{\r\n          isAuth: state.auth.isAuth\r\n      }\r\n}\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>){\r\n    const RedirectComponent = (props:MapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) {\r\n            return <Redirect to={\"/login\"}/>\r\n        }else {\r\n            return <Component {...restProps as T}/>\r\n        }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}","import {userAPI} from \"../api/paramsAPI\";\r\nimport {Dispatch} from \"redux\";\r\nimport {updateOjectInArray} from \"../utils/object-halper\";\r\nimport {APIResponseType, AppThunkType} from \"../store/store\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    FOLLOW = 'Users/FOLLOW',\r\n    UNFOLLOW = 'Users/UNFOLLOW',\r\n    SET_USERS = 'Users/SET_USERS',\r\n    SET_CURRENT = 'Users/SET_CURRENT',\r\n    SET_TOTAL_COUNT = 'Users/SET_TOTAL_COUNT',\r\n    TOGGLE_FETCHING = 'Users/CHANGE_FETCHING',\r\n    FOLLOWING_PROGRESS = 'Users/FOLLOWING_PROGRESS',\r\n}\r\n\r\nexport type usersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string | null\r\n    photos: { small: string, large: string }\r\n}\r\ntype usersReduceType = {\r\n    users: usersType[],\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 55,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProgress: [],\r\n}\r\n\r\nexport const usersReducer = (state: usersReduceType = initialState, action: ActionUsersType): usersReduceType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW: {\r\n            return {...state, users: updateOjectInArray(state.users, action.userID, \"id\", {followed:true})}\r\n        }\r\n        case ACTIONS_TYPE.UNFOLLOW: {\r\n            return {...state, users: updateOjectInArray(state.users, action.userID, \"id\", {followed:false})}\r\n        }\r\n        case ACTIONS_TYPE.SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case ACTIONS_TYPE.SET_CURRENT: {\r\n            return {...state, currentPage: action.page}\r\n        }\r\n        case ACTIONS_TYPE.SET_TOTAL_COUNT: {\r\n            return {...state, totalUserCount: action.totalCount}\r\n        }\r\n        case ACTIONS_TYPE.TOGGLE_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case ACTIONS_TYPE.FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ActionUsersType = acceptFollowType | acceptUnfollowType | setUsersType | setCurrentPageType\r\n    | setTotalUsersCountType | toggleFetchingType | ToggleFollowingProgressType\r\n\r\nexport type acceptFollowType = ReturnType<typeof acceptFollow>\r\nexport const acceptFollow = (userID: number) => ({type: ACTIONS_TYPE.FOLLOW, userID} as const)\r\n\r\nexport type acceptUnfollowType = ReturnType<typeof acceptUnfollow>\r\nexport const acceptUnfollow = (userID: number) => ({type: ACTIONS_TYPE.UNFOLLOW, userID: userID} as const)\r\n\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: usersType[]) => ({type: ACTIONS_TYPE.SET_USERS, users} as const)\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (page: number) => ({type: ACTIONS_TYPE.SET_CURRENT, page} as const)\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: ACTIONS_TYPE.SET_TOTAL_COUNT, totalCount} as const)\r\n\r\nexport type toggleFetchingType = ReturnType<typeof toggleFetching>\r\nexport const toggleFetching = (isFetching: boolean) => ({type: ACTIONS_TYPE.TOGGLE_FETCHING, isFetching} as const)\r\n\r\nexport type ToggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({type: ACTIONS_TYPE.FOLLOWING_PROGRESS, isFetching, userId} as const)\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => async (dispatch: Dispatch) => {\r\n    dispatch(toggleFetching(true));\r\n    let response = await userAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setUsers(response.items));\r\n    dispatch(setTotalUsersCount(response.totalCount));\r\n    dispatch(toggleFetching(false));\r\n    dispatch(setCurrentPage(currentPage));\r\n\r\n}\r\n\r\n\r\nexport const folowUnfolowFlow = async (dispatch:Dispatch<ActionUsersType>,userId:number, apiMethod:(userId: number) => Promise<APIResponseType>, actionCreator:(userId: number) => ActionUsersType ) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let res = await apiMethod(userId)\r\n    if (res.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (id: number):AppThunkType => async (dispatch) => {\r\n   await folowUnfolowFlow(dispatch, id, userAPI.followUsers.bind(userAPI), acceptFollow)\r\n}\r\n\r\nexport const unfollow = (id: number):AppThunkType => async (dispatch) => {\r\n    await folowUnfolowFlow(dispatch, id, userAPI.unfollowUsers.bind(userAPI), acceptUnfollow)\r\n}\r\n","import React from \"react\";\r\nimport {dialogReducerType, onSendMessage} from \"../../reducers/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype MapStateDialogType = {\r\n    dialogPage: dialogReducerType\r\n}\r\ntype MapDispatchDialogType = {\r\n    onSendMessage: (newMessageText: string) => void\r\n}\r\nexport type DialogPropsType = MapStateDialogType & MapDispatchDialogType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps,{onSendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs)","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"./SideBar/Sidebar\";\r\nimport {store} from \"../../store/store\";\r\nimport {CardContent} from \"@material-ui/core\";\r\nimport {EmojiEmotions, FiberNew, LibraryMusic, Markunread, Person, Settings} from \"@material-ui/icons\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n    // let sidebarElements = store.getState().sidebar.imagesData.map((item) => <Sidebar image={item.image}/>)\r\n\r\n    return (\r\n        <div className={style.nav}>\r\n            <CardContent className={style.wrapperItems}>\r\n\r\n                <NavLink to=\"/profile\" activeClassName={style.active}>\r\n                    <div className={style.item}>\r\n                        <Person/>\r\n                        <span className={style.spanLink}>Profile</span>\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/dialogs\" activeClassName={style.active}>\r\n                    <div className={style.item}>\r\n                        <Markunread/>\r\n                        <span className={style.spanLink}>Messages</span>\r\n                    </div>\r\n                </NavLink>\r\n                <NavLink to=\"/users\" activeClassName={style.active}>\r\n                    <div className={style.item}>\r\n                        <EmojiEmotions/>\r\n                        <span className={style.spanLink}>Users</span>\r\n                    </div>\r\n                </NavLink>\r\n                <a>\r\n                    <div className={style.item}>\r\n                        <FiberNew/>\r\n                        <span className={style.spanLink}>News</span>\r\n                    </div>\r\n                </a>\r\n                <div className={style.item}>\r\n                    <LibraryMusic/>\r\n                    <span>Music</span>\r\n                </div>\r\n                <div className={style.item}>\r\n                    <Settings/>\r\n                    <span>Settings</span>\r\n                </div>\r\n            </CardContent>\r\n\r\n            {/*<CardContent >*/}\r\n            {/*<div className={style.friendsSidebar}>*/}\r\n            {/*    <h3>FRIENDS </h3>*/}\r\n            {/*    <div className={style.sidebarElements}>{sidebarElements}</div>*/}\r\n            {/*</div>*/}\r\n            {/*    </CardContent >*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import * as React from \"react\";\r\nimport {Box, Button, Drawer, List, ListItem} from \"@material-ui/core\";\r\nimport {Menu} from \"@material-ui/icons\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\ntype Anchor = \"left\"\r\n\r\nexport const HeaderMenu = () => {\r\n    const [state, setState] = React.useState({\r\n        left: false,\r\n\r\n    });\r\n\r\n    const toggleDrawer = (anchor: Anchor, open: boolean) => (\r\n        event: React.KeyboardEvent | React.MouseEvent\r\n    ) => {\r\n        if (\r\n            event.type === \"keydown\" &&\r\n            ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n                (event as React.KeyboardEvent).key === \"Shift\")\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setState({...state, [anchor]: open});\r\n    };\r\n\r\n    const list = (anchor: Anchor) => (\r\n        <Box\r\n            style={{ background:\"linear-gradient(326deg, rgba(255,108,2,1) 30%, rgba(2,152,142,1) 67%)\",\r\n                height:\"100%\", padding:\"0\"}}\r\n            sx={{width: 250}}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List style={{padding:\"0\", margin:\"0\"}}>\r\n                <ListItem style={{padding:\"0\", margin:\"0\"}}>\r\n                    <Navbar/>\r\n                </ListItem>\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <Button size={'large'} onClick={toggleDrawer(\"left\", true)}> <Menu style={{color:\"white\"}} /> </Button>\r\n                <Drawer\r\n                    anchor={\"left\"}\r\n                    open={state[\"left\"]}\r\n                    onClose={toggleDrawer(\"left\", false)}\r\n                >\r\n                    {list(\"left\")}\r\n                </Drawer>\r\n            </>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/headerImages.adb5c696.png\";","import React from 'react';\r\nimport {AppBar, Button, Toolbar, Typography} from \"@material-ui/core\";\r\nimport {HeaderMenu} from \"./HeaderMenu\";\r\nimport headerImages from \"../../images/headerImages.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.css'\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n    photo: string | null\r\n    logOut: () => void\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <AppBar style={{backgroundColor: \"#02988e\"}} position={\"relative\"}>\r\n            <Toolbar className={s.headerMain}>\r\n                <div className={s.headerMenu}>\r\n                    <HeaderMenu/>\r\n                </div>\r\n                <Typography variant={\"h1\"} component=\"div\" sx={{flexGrow: 1}}/>\r\n\r\n                {props.isAuth ? <div className={s.login}>\r\n                        <img className={s.photoHeader} src={props.photo ? props.photo : headerImages}/>{props.login}\r\n                        <Button size={\"large\"} onClick={props.logOut} color={\"warning\"} variant={\"outlined\"}>Log out</Button>\r\n                    </div>\r\n                    : <NavLink to={\"/login\"} style={{color: \"orange\", fontWeight: \"bold\"}}>Login</NavLink>}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios, { AxiosResponse } from \"axios\";\r\nimport {usersType} from \"../reducers/user-reducer\";\r\nimport {APIResponseType} from \"../store/store\";\r\n\r\ntype getProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\ntype GetTypeResponseUserAPI = {\r\n    items: usersType[]\r\n    totalCount: number\r\n    error: null\r\n}\r\n\r\ntype ResponseType<T = {}> = {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: T\r\n}\r\n\r\nexport type LoginApiType = {\r\n    email:string\r\n    password:string\r\n    rememberMe:boolean\r\n    captcha?:string\r\n}\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"21d990e0-eae8-42bd-a185-362e1cc41b0a\"\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get<GetTypeResponseUserAPI>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data);\r\n    },\r\n\r\n    unfollowUsers(id: number) {\r\n        return instance.delete<ResponseType>(`follow/${id}`).then(res=>res.data)\r\n    },\r\n\r\n    followUsers(id: number) {\r\n        return instance.post<APIResponseType>(`follow/${id}`).then(res=> res.data)\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    getMePhoto(userId: number) {\r\n        return instance.get<getProfileType>('profile/'+userId)\r\n    },\r\n    me() {\r\n        return instance.get<ResponseType<{id: number,email: string,login: string}>>('auth/me').then(res=>res.data)\r\n    },\r\n    login(params: LoginApiType){\r\n        return instance.post<LoginApiType,AxiosResponse<ResponseType<{ userId: number }>>>(`auth/login/`, params)\r\n    },\r\n    logOut(){\r\n        return instance.delete<ResponseType>(`/auth/login/`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number|null) {\r\n        return instance.get<getProfileType>(`profile/` + userId)\r\n    },\r\n    getStatusProfile(id: number) {\r\n        return instance.get<string>(`profile/status/` + id)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<{ status: string }, ResponseType>(`profile/status/`, {status})\r\n    },\r\n}\r\n\r\n\r\n","import {authUserLogin} from \"./auth-reducer\";\r\nimport {AppThunkType} from \"../store/store\";\r\n\r\ntype AppReducerType = {\r\n    error: string | null\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState = {\r\n    error: null,\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state: AppReducerType = initialState, action: AppActionType): AppReducerType => {\r\n    switch (action.type) {\r\n        case \"SET_ERROR\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        case \"INITIALIZED-SUCCESS\": {\r\n            return {...state, initialized: true}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type AppActionType = SetAppErrorType | InitialSuccessType\r\n\r\ntype SetAppErrorType = ReturnType<typeof setAppError>\r\nexport const setAppError = (error: string | null) => ({type: \"SET_ERROR\", error} as const)\r\n\r\ntype InitialSuccessType = ReturnType<typeof initializedSuccess>\r\nexport const initializedSuccess = () => ({type: \"INITIALIZED-SUCCESS\"} as const)\r\n\r\nexport const initializeApp = (): AppThunkType => async (dispatch) => {\r\n    let promise = await dispatch(authUserLogin())\r\n    await Promise.all([promise])\r\n    dispatch(initializedSuccess())\r\n}\r\n","import {authAPI, LoginApiType} from \"../api/paramsAPI\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppError} from \"./app-reducer\";\r\nimport {AppThunkType} from \"../store/store\";\r\n\r\n\r\nconst SET_USER_DATA = \"SET-USER-DATA\"\r\nconst SET_PHOTO = \"SET-PHOTO\"\r\n\r\n\r\ntype AuthReduceType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    photo: string | null\r\n}\r\n\r\nlet initialState: AuthReduceType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    photo: null,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action: ActionAuthReducerType): AuthReduceType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {...state, ...action.data}\r\n        }\r\n        case SET_PHOTO: {\r\n            return {...state, photo: action.photo}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ActionAuthReducerType = SetPhotoLoginType | SetUserDataType\r\n\r\ntype SetUserDataType = ReturnType<typeof setUsersData>\r\nexport const setUsersData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n    type: SET_USER_DATA,\r\n    data: {id, email, login, isAuth}\r\n} as const)\r\n\r\ntype SetPhotoLoginType = ReturnType<typeof setPhotoLogin>\r\nexport const setPhotoLogin = (photo: string) => ({type: SET_PHOTO, photo} as const)\r\n\r\nexport const authUserLogin = () => async (dispatch: Dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.resultCode === 0) {\r\n        const {id, email, login} = response.data;\r\n        dispatch(setUsersData(id, email, login, true))\r\n    }\r\n    return response\r\n}\r\n\r\nexport const loginTC = (data: LoginApiType): AppThunkType => async (dispatch) => {\r\n    let res = await authAPI.login(data)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(authUserLogin())\r\n    } else {\r\n        dispatch(setAppError(res.data.messages[0]))\r\n    }\r\n}\r\nexport const logOut = () => async (dispatch: Dispatch) => {\r\n    let res = await authAPI.logOut()\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setUsersData(null, null, null, false))\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {connect} from \"react-redux\";\r\nimport {authUserLogin, logOut} from \"../../reducers/auth-reducer\";\r\n\r\ntype MapStateUserType = {\r\n    isAuth: boolean,\r\n    login: string | null,\r\n    photo: string | null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    authUserLogin: () => void\r\n    logOut: () => void\r\n}\r\ntype UsersLoginPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\nclass HeaderContainer extends React.Component<UsersLoginPropsType> {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProp = (state: AppStateType): MapStateUserType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        photo: state.auth.photo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProp, {authUserLogin, logOut})(HeaderContainer)","import s from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Avatar, Button, Paper} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {usersType} from \"../../reducers/user-reducer\";\r\n\r\ntype PropsType = {\r\n    pageSize: number\r\n    user: usersType\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n    followingProgress: number[]\r\n}\r\n\r\nexport const User = ({user, ...props}: PropsType) => {\r\n    return (\r\n\r\n            <Paper elevation={3} sx={{borderRadius: \"20px\"}}>\r\n                <div>\r\n                    <div className={s.user}>\r\n                        <div>\r\n                            <NavLink to={'/profile/' + user.id}>\r\n                                <div key={user.id}>\r\n                                    {user.photos.small !== null ? <img src={user.photos.small} className={s.userPhoto}/>\r\n                                        : <Avatar className={s.userPhoto} sx={{\r\n                                            fontSize: \"50px\",\r\n                                            width: \"100px\",\r\n                                            height: \"100px\",\r\n                                            background: \"#10ab9e\"\r\n                                        }}> {user.name[0].toUpperCase()}</Avatar>}\r\n                                </div>\r\n\r\n                            </NavLink>\r\n                        </div>\r\n                        <div className={s.name}>\r\n                            <span className={s.span}>{user.name.substr(1, 15)}</span>\r\n                        </div>\r\n                        <div>\r\n                            {user.followed\r\n                                ? <Button variant={\"outlined\"} size={'small'} color={\"error\"} disabled={props.followingProgress.some(id => id === user.id)}\r\n                                          onClick={() => {\r\n                                              props.unfollow(user.id)\r\n                                          }}>Unfollow</Button>\r\n\r\n                                : <Button variant={\"contained\"} color={\"warning\"} size={'small'} disabled={props.followingProgress.some(id => id === user.id)}\r\n                                          onClick={() => {\r\n                                              props.follow(user.id)\r\n                                          }}>Follow</Button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport {usersType} from \"../../reducers/user-reducer\";\r\nimport {User} from \"./User\";\r\nimport s from \"./Users.module.css\";\r\n\r\ntype UsersType = {\r\n    pageSize: number\r\n    users: usersType[]\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n    followingProgress: number[]\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n    const photoUser = props.users.filter(f => f.photos.small !== null)\r\n    const notPhotoUser = props.users.filter(f => f.photos.small == null)\r\n    const usersDisplay = [...photoUser, ...notPhotoUser]\r\n    return (\r\n        <div>\r\n            <div className={s.usersContainer}>\r\n                {usersDisplay.map(u => <User key={u.id}\r\n                                             pageSize={props.pageSize}\r\n                                             user={u}\r\n                                             unfollow={props.unfollow}\r\n                                             follow={props.follow}\r\n                                             followingProgress={props.followingProgress}/>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/preloader.3fb26d9b.gif\";","import React from \"react\";\r\nimport preloader from \"../../images/preloader.gif\";\r\n\r\nexport const Preloader = () => {\r\n\r\n    let divStyle = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n\r\n    let imgStyle = {\r\n        width: \"80px\",\r\n        height: \"100px\",\r\n    }\r\n    return <div style={divStyle}> <img style={imgStyle} src={preloader}/> </div>\r\n}","\r\n\r\nexport const updateOjectInArray = (items:any,itemId:any,objPropName:any,newObjProps:any) => {\r\n    return items.map((u:any) => {\r\n        if (u[objPropName] === itemId){\r\n            return {...u,...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {AppStateType} from \"../store/store\";\r\n\r\nexport const getUsersSelect = (state:AppStateType) => {\r\n return state.usersPage.users\r\n}\r\nexport const getPageSize = (state:AppStateType) => {\r\n return state.usersPage.pageSize\r\n}\r\nexport const getTotalCount = (state:AppStateType) => {\r\n return state.usersPage.totalUserCount\r\n}\r\nexport const getCurrentPage = (state:AppStateType) => {\r\n return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state:AppStateType) => {\r\n return state.usersPage.isFetching\r\n}\r\nexport const getFollowingProgress = (state:AppStateType) => {\r\n  return state.usersPage.followingProgress\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport s from \"./Users.module.css\";\r\nimport {Preloader} from \"../common/Preloader\";\r\nimport {\r\n    follow, getUsers,\r\n    setCurrentPage,\r\n    unfollow,\r\n    usersType\r\n} from \"../../reducers/user-reducer\";\r\nimport {Pagination} from \"@material-ui/core\";\r\nimport {compose} from \"redux\";\r\nimport {Paper} from \"@mui/material\";\r\nimport {getCurrentPage, getFollowingProgress, getIsFetching, getPageSize, getTotalCount, getUsersSelect} from \"../../reducers/users-selector\";\r\n\r\ntype MapStateUserType = {\r\n    users: usersType[]\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n}\r\nexport type MapDispatchPropsType = {\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setCurrentPage: (numberPage: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\ntype UsersPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\nconst stylePaginatorPaper = {\r\n    minWidth: \"100%\",\r\n    minHeight: \"40px\",\r\n    alignItems: \"center\",\r\n    display: \"flex\"\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType, {}> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUserCount / this.props.pageSize)\r\n\r\n        return (\r\n            <div className={s.containerWrapper}>\r\n                <div className={s.paginator}>\r\n\r\n                    <Paper sx={stylePaginatorPaper}>\r\n                        <Pagination color={\"standard\"} onChange={(event, page) => {\r\n                            this.onPageChanged(page)\r\n                        }} count={pagesCount} variant={'text'} shape=\"rounded\" defaultPage={1} siblingCount={13}\r\n                                    size={\"small\"}/></Paper>\r\n                </div>\r\n                <>\r\n                    {this.props.isFetching ? <Preloader/>\r\n                        : null}\r\n                    <Users\r\n                        pageSize={this.props.pageSize}\r\n                        users={this.props.users}\r\n                        unfollow={this.props.unfollow}\r\n                        follow={this.props.follow}\r\n                        followingProgress={this.props.followingProgress}\r\n                    />\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        users: getUsersSelect(state),\r\n        pageSize: getPageSize(state),\r\n        totalUserCount: getTotalCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingProgress(state),\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, getUsers})\r\n)(UsersContainer)","export default __webpack_public_path__ + \"static/media/spiderMan.c815e3f0.svg\";","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n\r\nexport const ProfileStatusWidthHook = (props:ProfileStatusPropsType) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const onBlurEditMode = () => {\r\n       setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n   const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {!editMode &&\r\n            <div>\r\n                        <span onDoubleClick={activateEditMode}>\r\n                        {props.status || \"Add status\"}\r\n                        </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n                 <div>\r\n                    <input value={status} onChange={onStatusChange} autoFocus={true} onBlur={onBlurEditMode} />\r\n                </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {ProfileType} from \"../../../reducers/profile-reducer\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport image from '../../../images/spiderMan.svg'\r\nimport {Paper} from \"@material-ui/core\";\r\nimport style from './ProfileInfo.module.css'\r\nimport {ProfileStatusWidthHook} from \"./ProfileStatusWidthHook\";\r\n\r\ntype ProfileInfoComponentType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n// let styleProfile2 = {\r\n//     width: \"100%\",\r\n//     height: \"400px\",\r\n// }\r\n\r\nconst ProfileInfo = (props: ProfileInfoComponentType) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={style.containerProfileData}>\r\n                    <Paper elevation={3} className={style.wrapper}>\r\n                            <img className={style.imageProfile} src={props.profile?.photos.large || image} alt={\"Images profile\"}/>\r\n                            <div className={style.info}>\r\n                                {/*<ProfileStatus status={props.status} updateStatus={props.updateStatus}/>*/}\r\n                                <ProfileStatusWidthHook status={props.status} updateStatus={props.updateStatus}/>\r\n                        </div>\r\n                    </Paper>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import {Dispatch} from \"redux\";\r\nimport {profileAPI} from \"../api/paramsAPI\";\r\n\r\nconst ADD_POST = 'ADD-POST',\r\n    SET_USERS_PROFILE = 'SET-USERS-PROFILE',\r\n    SET_STATUS = 'SET-STATUS',\r\n    DELETE_POST = 'DELETE-POST'\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\ntype postDataType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type profileReducerType = {\r\n    postData: Array<postDataType>\r\n    profile: ProfileType | null\r\n    status: string\r\n}\r\n\r\nlet initialState: profileReducerType = {\r\n    postData: [\r\n        {id: 1, message: 'Sosiska', likeCount: 23},\r\n        {id: 2, message: 'REDDISKA', likeCount: 77},\r\n        {id: 3, message: 'Do you want me? ', likeCount: 107},\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n}\r\n\r\nexport const profileReduser = (state: profileReducerType = initialState, action: ProfileActionTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [{id: new Date().getTime(), message: action.postText, likeCount: 0}, ...state.postData]\r\n            }\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.textStatus}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, postData: state.postData.filter(p => p.id !== action.postId)}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ProfileActionTypes = addPostType | setUsersProfileType | SetStatusType | DeletePostType\r\n\r\ntype addPostType = ReturnType<typeof addPost>\r\nexport const addPost = (postText: string) => ({type: ADD_POST, postText} as const)\r\n\r\ntype setUsersProfileType = ReturnType<typeof setUsersProfile>\r\nexport const setUsersProfile = (profile: ProfileType | null) => ({type: SET_USERS_PROFILE, profile} as const)\r\n\r\ntype SetStatusType = ReturnType<typeof setStatus>\r\nexport const setStatus = (textStatus: string) => ({type: SET_STATUS, textStatus} as const)\r\n\r\ntype DeletePostType = ReturnType<typeof deletePost>\r\nexport const deletePost = (postId: number) => ({type: DELETE_POST, postId} as const)\r\n\r\n\r\nexport const getCurrenUsersProfile = (userId: number) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUsersProfile(response.data))\r\n}\r\n\r\nexport const getStatusProfile = (userId: number) => async (dispatch: Dispatch) => {\r\n    let res = await profileAPI.getStatusProfile(userId)\r\n    dispatch(setStatus(res.data))\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n   await profileAPI.updateStatus(status)\r\n                dispatch(setStatus(status))\r\n}","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\n\r\nconst Post = (props: PropsType) => {\r\n    return (\r\n            <div className={style.item}>\r\n                <img src=\"https://bizlit.com.ua/image/data/pictures/YeDYzSR-10apkm4.png\"/>\r\n                <div className={style.messagePost}>\r\n                    {props.message}\r\n                </div>\r\n                <div className={style.likeType}>\r\n                    <span>♥{props.likeCount}</span>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostPropsType} from \"./MyPostsContainer\";\r\nimport {Button, Paper, TextField} from \"@material-ui/core\";\r\nimport {useFormik} from \"formik\";\r\n\r\nconst MyPosts =React.memo ((props: PostPropsType) => {\r\n    let postsElements = props.profilePage.postData.map(post => <Post message={post.message} likeCount={post.likeCount}/>)\r\n\r\n    let addPost = (values: string) => {\r\n        if(values !== \"\"){\r\n            props.addPost(values)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.containerPost}>\r\n            <Paper elevation={3} className={style.addPost}>\r\n                <AddNewPost onSubmit={addPost}/>\r\n            </Paper>\r\n            <Paper elevation={3} className={style.posts}>\r\n                <div className={style.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst AddNewPost = ({onSubmit}: { onSubmit: (values: string) => void }) => {\r\n    const post = useFormik({\r\n        initialValues: {\r\n            newPostText: '',\r\n        },\r\n        onSubmit: (values,{resetForm}) => {\r\n            onSubmit(values.newPostText);\r\n            resetForm()\r\n        },\r\n    });\r\n    return (\r\n        <div>\r\n            <form onSubmit={post.handleSubmit} >\r\n                <div>\r\n                    <TextField sx={{width: \"400px\"}} size={\"small\"} color={\"success\"}\r\n                                id=\"newPostText\"\r\n                                name=\"newPostText\"\r\n                                label=\"New post...\"\r\n                                value={post.values.newPostText}\r\n                                onChange={post.handleChange}\r\n                />\r\n                    <Button color={\"warning\"} variant={\"contained\"} type=\"submit\">Submit</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost, profileReducerType} from \"../../../reducers/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../store/store\";\r\n\r\ntype MapStateProfileType = {\r\n    profilePage: profileReducerType\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPost: (text: string) => void\r\n}\r\nexport type PostPropsType = MapStateProfileType & MapDispatchPropsType\r\nlet mapStateToProps = (state: AppStateType): MapStateProfileType => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {addPost})(MyPosts)","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../reducers/profile-reducer\";\r\nimport s from './Profile.module.css'\r\n\r\ntype ProfileComponentType = {\r\n    profile: ProfileType|null\r\n    status: string\r\n    updateStatus: (status:string) => void\r\n}\r\n\r\nexport const Profile = (props:ProfileComponentType) => {\r\n\r\n    return <div className={s.profileContainer}>\r\n        <ProfileInfo profile={props.profile} status={props.status}  updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport {Profile} from \"./Profile\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {getCurrenUsersProfile, getStatusProfile, ProfileType, updateStatus} from \"../../reducers/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    authorizedUserId: number | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getCurrenUsersProfile: (userId: number | null) => void\r\n    getStatusProfile: (userId: number | null) => void\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\ntype OwnPropsType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        if (!userId) {\r\n            this.props.history.push(\"/login\")\r\n        }\r\n        if (!userId) {\r\n            console.error(\"ID should exist in URL params or in state ('authirizedUserId')\");\r\n        } else {\r\n            this.props.getCurrenUsersProfile(userId)\r\n            this.props.getStatusProfile(userId)\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getCurrenUsersProfile, getStatusProfile, updateStatus}),\r\n    // withAuthRedirect,\r\n    withRouter,\r\n)(ProfileContainer)","import * as React from 'react';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert, {AlertProps} from '@mui/material/Alert';\r\nimport {connect} from \"react-redux\";\r\nimport {setAppError} from \"../../reducers/app-reducer\";\r\nimport {AppStateType} from \"../../store/store\";\r\n\r\ntype mapStateToPropsType = {\r\n    errorApp: string | null\r\n}\r\n\r\ntype mapDispatchToProps = {\r\n    setAppError: (error:string|null) => void\r\n}\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n    props,\r\n    ref,\r\n) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nfunction ErrorSnackbars(props:mapDispatchToProps&mapStateToPropsType) {\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        props.setAppError(null)\r\n    };\r\n\r\n    const isOpen = props.errorApp !== null\r\n\r\n    return (\r\n        <Snackbar anchorOrigin={{vertical: \"bottom\", horizontal: \"center\"}} open={isOpen} autoHideDuration={3000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"warning\" sx={{width: '100%', height:\"80px\",alignItems:\"center\",fontSize:\"large\"}}>\r\n                {props.errorApp}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        errorApp: state.app.error\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setAppError})(ErrorSnackbars)","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {ProfileActionTypes, profileReduser} from \"../reducers/profile-reducer\";\r\nimport dialogReducer, {DialogActionTypes} from \"../reducers/dialogs-reduser\";\r\nimport sidebarReducer, {SideBarActionTypes} from \"../reducers/sidebar-reducer\";\r\nimport {ActionUsersType, usersReducer} from \"../reducers/user-reducer\";\r\nimport {ActionAuthReducerType, authReducer} from \"../reducers/auth-reducer\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {AppActionType, appReducer} from \"../reducers/app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReduser,\r\n    dialogPage: dialogReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type RootAppActionType =\r\n    ActionAuthReducerType\r\n    |AppActionType\r\n    |DialogActionTypes\r\n    |ProfileActionTypes\r\n    // |SideBarActionTypes\r\n    |ActionUsersType;\r\n\r\nexport type AppThunkType<ReturnType=void> = ThunkAction<void, AppStateType, unknown, RootAppActionType>\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}\r\n\r\n\r\n//@ts-ignore\r\nwindow.store= store","import React from \"react\";\r\nimport {useFormik} from \"formik\";\r\nimport style from './LoginStyle.module.css'\r\nimport {Button, Checkbox, FormControlLabel, Paper, TextField, Typography} from \"@material-ui/core\";\r\nimport * as yup from 'yup';\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../reducers/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../store/store\";\r\nimport {LoginApiType} from \"../../api/paramsAPI\";\r\nimport ErrorSnackbars from \"../common/errorSnackbar\";\r\n\r\ntype mapDispatchToPropsType = {\r\n    loginTC: (data:LoginApiType) => void\r\n}\r\n\r\ntype mapStateToProsType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype loginType = mapStateToProsType & mapDispatchToPropsType\r\n\r\nconst validationSchema = yup.object({\r\n    email: yup.string()\r\n        .email('Enter a valid email')\r\n        .required('Email is required'),\r\n    password: yup.string()\r\n        .min(4, 'Password should be of minimum 4 characters length')\r\n        // .matches(/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,}/, \"Password must meet complexity requirements\")\r\n        .required('Password is required')\r\n\r\n});\r\n\r\nconst LoginForm = (props: { onSubmit: (data: LoginApiType) => void }) => {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false,\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values) => {\r\n            props.onSubmit(values)\r\n        },\r\n    });\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={style.form}>\r\n                    <Paper className={style.loginFormContainer}>\r\n\r\n                        <div className={style.prompt}>\r\n                            <p >Use common test account credentials:</p>\r\n                            <p >Email: <span style={{color:\"orange\"}}>free@samuraijs.com</span></p>\r\n                            <p >Password: <span style={{color:\"orange\"}}>free</span></p>\r\n                        </div>\r\n\r\n                        <Typography color={\"orange\"} component={\"h1\"} variant={\"h4\"} fontSize={\"xxx-large\"}>\r\n                            Login\r\n                        </Typography>\r\n                        <TextField sx={{minWidth: \"250px\"}} size={\"small\"} color={\"success\"}\r\n                                   id=\"email\"\r\n                                   name=\"email\"\r\n                                   label=\"Email\"\r\n                                   value={formik.values.email}\r\n                                   onChange={formik.handleChange}\r\n                                   error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                   helperText={formik.touched.email && formik.errors.email}\r\n                                   required\r\n                        />\r\n                        <TextField sx={{minWidth: \"250px\"}} size={\"small\"} color={\"success\"}\r\n                                   id=\"password\"\r\n                                   name=\"password\"\r\n                                   label=\"Password\"\r\n                                   type=\"password\"\r\n                                   value={formik.values.password}\r\n                                   onChange={formik.handleChange}\r\n                                   error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                   helperText={formik.touched.password && formik.errors.password}\r\n                                   required\r\n                        />\r\n                        <FormControlLabel onChange={formik.handleChange} control={<Checkbox {...formik.getFieldProps(\"rememberMe\")}\r\n                                                                                            checked={formik.values.rememberMe}/>} label=\"Remember me\"/>\r\n                        <Button color={\"warning\"} variant={\"contained\"} type=\"submit\">Submit</Button>\r\n\r\n                    </Paper>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Login = (props: loginType) => {\r\n    const submitOn = (values:LoginApiType) => {\r\n        props.loginTC(values)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <LoginForm onSubmit={submitOn}/>\r\n            <ErrorSnackbars/>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state: AppStateType): mapStateToProsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {loginTC})(Login)\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport {Grid, LinearProgress} from \"@material-ui/core\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {Paper} from \"@mui/material\";\r\nimport style from './components/Header/Header.module.css'\r\nimport Login from \"./components/login/Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./reducers/app-reducer\";\r\nimport {AppStateType} from \"./store/store\";\r\n\r\ntype MapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\n\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\n\r\ntype PropsType = MapDispatchToPropsType & MapStateToPropsType\r\n\r\nclass App extends React.Component<PropsType,{}> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized){\r\n          return <LinearProgress color=\"success\" />\r\n        }\r\n\r\n        return (\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <HeaderContainer/>\r\n                    </Grid>\r\n\r\n                    <Grid container className={style.wrapperContent}>\r\n\r\n                        <Paper elevation={3} className={style.navbarApp}>\r\n                            <Navbar/>\r\n                        </Paper>\r\n\r\n                        <div className={style.content}>\r\n\r\n                            <Switch>\r\n                                <Route exact path={'/'} render={() => <Redirect to={'/profile'}/>}/>\r\n\r\n                                <Route path=\"/dialogs\"\r\n                                       render={() => <DialogsContainer/>}/>\r\n\r\n                                <Route path=\"/profile/:userId?\"\r\n                                       render={() => <ProfileContainer/>}/>\r\n\r\n                                <Route path=\"/users\"\r\n                                       render={() => <UsersContainer/>}/>\r\n\r\n                                <Route path=\"/login\"\r\n                                       render={() => <Login/>}/>\r\n                            </Switch>\r\n                        </div>\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state:AppStateType):MapStateToPropsType => ({\r\n    initialized: state.app.initialized,\r\n})\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    withRouter,\r\n    connect (mapStateToProps,{initializeApp})\r\n)(App);\r\n","type imagesDataType = {\r\n    image: string\r\n}\r\nexport type sidebarReducerType = {\r\n    imagesData: Array<imagesDataType>\r\n}\r\n\r\nlet initialState: sidebarReducerType = {\r\n    imagesData: [\r\n        {image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state: sidebarReducerType = initialState, action: SideBarActionTypes) => {\r\n    return state\r\n}\r\n\r\nexport type SideBarActionTypes = {}\r\n\r\nexport default sidebarReducer;","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport React from \"react\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\nimport {HashRouter} from \"react-router-dom\";\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n            <Provider store={store}>\n                <HashRouter><App/></HashRouter>\n            </Provider>\n        , document.getElementById('root')\n    );\n}\nrerenderEntireTree()\nstore.subscribe(()=>{\n    rerenderEntireTree()\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1ElVi\",\"item\":\"Navbar_item__89gUU\",\"wrapperItems\":\"Navbar_wrapperItems__W0LD1\",\"active\":\"Navbar_active__1CoiD\",\"friendsSidebar\":\"Navbar_friendsSidebar__3YpIl\",\"sidebarImg\":\"Navbar_sidebarImg__3eaYO\",\"sidebarElements\":\"Navbar_sidebarElements__mbaRW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3wW4-\",\"dialogsItem\":\"Dialogs_dialogsItem__1lURH\",\"messages\":\"Dialogs_messages__1DjYG\",\"dialogsStyle\":\"Dialogs_dialogsStyle__3g3kO\",\"active\":\"Dialogs_active__2sGsR\",\"wrapper\":\"Dialogs_wrapper__34ZY3\",\"wrapper_style\":\"Dialogs_wrapper_style__APWWx\",\"messageStyle\":\"Dialogs_messageStyle__1ofTH\",\"imageDialog\":\"Dialogs_imageDialog__10QW8\",\"buttonMessage\":\"Dialogs_buttonMessage__2F1wk\",\"formDialogs\":\"Dialogs_formDialogs__3Yp5k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__17NFO\",\"selectedPage\":\"Users_selectedPage__ghVA2\",\"usersContainer\":\"Users_usersContainer__2ccAj\",\"user\":\"Users_user__1Aozu\",\"name\":\"Users_name__3CiDE\",\"paginator\":\"Users_paginator__2w3tD\",\"containerWrapper\":\"Users_containerWrapper__3pwFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2A7wp\",\"headerMenu\":\"Header_headerMenu__7Rfoc\",\"content\":\"Header_content__1LWy0\",\"navbarApp\":\"Header_navbarApp__1bEc1\",\"wrapperContent\":\"Header_wrapperContent__11Y7U\",\"photoHeader\":\"Header_photoHeader__2jn69\",\"login\":\"Header_login__3E0zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerProfileData\":\"ProfileInfo_containerProfileData__68FTS\",\"wrapper\":\"ProfileInfo_wrapper__1Dzq6\",\"imageProfile\":\"ProfileInfo_imageProfile__2MyQj\",\"info\":\"ProfileInfo_info__3mtFf\"};"],"sourceRoot":""}