{"version":3,"sources":["reportWebVitals.ts","redux/dialogs-reduser.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","redux/user-reducer.ts","components/Dialogs/DialogsContainer.tsx","components/Navbar/SideBar/Sidebar.tsx","redux/profile-reducer.tsx","redux/sidebar-reducer.tsx","redux/auth-reducer.ts","redux/redux-store.ts","components/Navbar/Navbar.tsx","components/Header/HeaderMenu.tsx","images/headerImages.png","components/Header/Header.tsx","api/settingAPI.ts","components/Header/HeaderContainer.tsx","images/userImages.png","components/Users/Users.tsx","images/preloader.gif","components/common/Preloader.tsx","components/Users/UsersContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/myPosts/Post/Post.tsx","components/Profile/myPosts/MyPosts.tsx","components/Profile/myPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","App.tsx","index.tsx","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css","components/Users/Users.module.css","components/Profile/myPosts/Post/Post.module.css","components/Header/Header.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UPDATE_NEW_MESSAGE_TEXT","SEND_MESSAGE","initialState","dialogsData","id","name","image","messagesData","message","newMessageText","dialogReducer","state","action","type","newText","body","DialogItem","props","path","className","style","containerDialog","to","activeClassName","active","dialogsStyle","src","imageDialog","Message","messageStyle","wrapper_style","wrapper","Dialogs","ACTIONS_TYPE","dialogsElements","dialogPage","map","dialog","messagesElements","messages","newMessageBody","onSendMessageClick","dialogs","dialogsItem","buttonMessage","onChange","event","target","value","onNewMessageChange","onKeyPress","charCode","placeholder","textArea","onClick","DialogsContainer","connect","dispatch","Sidebar","sidebarImg","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USERS_PROFILE","postData","likeCount","newPostText","profile","imagesData","sidebarReducer","users","pageSize","totalUserCount","currentPage","isFetching","followingProgress","SET_USER_DATA","SET_PHOTO","email","login","isAuth","photo","rootReducer","combineReducers","profilePage","Date","getTime","postText","sidebar","usersPage","FOLLOW","m","userID","followed","UNFOLLOW","SET_USERS","SET_CURRENT","page","SET_TOTAL_COUNT","totalCount","TOGGLE_FETCHING","FOLLOWING_PROGRESS","userId","filter","auth","data","store","createStore","window","Navbar","sidebarElements","getState","item","nav","friendsSidebar","HeaderMenu","anchor","React","left","setState","toggleDrawer","open","key","Button","size","Menu","color","Drawer","onClose","Box","backgroundColor","height","sx","width","role","onKeyDown","List","ListItem","Header","AppBar","position","Toolbar","Typography","variant","component","flexGrow","s","photoHeader","headerImages","fontWeight","addressAPI","axios","create","withCredentials","baseURL","headers","userAPI","get","res","delete","post","HeaderContainer","response","console","log","resultCode","setUsersDataAC","setPhotoLoginAC","photos","small","this","Component","Users","photoUser","f","notPhotoUser","usersDisplay","usersContainer","u","user","userImages","userPhoto","span","disabled","some","toggleFollowingProgress","unfollow","follow","Preloader","display","justifyContent","preloader","UsersContainer","toggleFetching","setUsers","items","setTotalUsersCount","pageNumber","setCurrentPage","pagesCount","Math","ceil","paginator","Pagination","onPageChanged","count","shape","defaultPage","siblingCount","ProfileInfo","large","fullName","contacts","instagram","vk","github","lookingForAJob","lookingForAJobDescription","Post","messagePost","likeType","countLike","MyPosts","postsElements","newPostElement","createRef","addPosts","text","current","onPostChange","ref","posts","MyPostsContainer","Profile","ProfileContainer","match","params","setUsersProfile","WithUrlDataProfileContainer","withRouter","App","Grid","container","xs","border","exact","render","rerenderEntireTree","ReactDOM","document","getElementById","subscribe","module","exports"],"mappings":"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","file":"static/js/main.6996e520.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGES';\r\n\r\ntype dialogsDataType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\ntype messagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nexport type dialogReducerType = {\r\n    dialogsData: Array<dialogsDataType>\r\n    messagesData: Array<messagesDataType>\r\n    newMessageText: string\r\n}\r\n\r\nlet initialState: dialogReducerType = {\r\n    dialogsData: [\r\n        {\r\n            id: 1,\r\n            name: \"Dimych\",\r\n            image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Sveta\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"\r\n        },\r\n        {id: 3, name: \"Sasha\", image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {\r\n            id: 4,\r\n            name: \"Viktor\",\r\n            image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Valera\",\r\n            image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"\r\n        }\r\n    ],\r\n    messagesData: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is your it-kamasutra?\"},\r\n        {id: 3, message: \"yo Hi\"},\r\n        {id: 4, message: \"Hello Hi\"},\r\n        {id: 5, message: \"Yo yo yo\"},\r\n    ],\r\n    newMessageText: '',\r\n}\r\n\r\nconst dialogReducer = (state: dialogReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_TEXT: {\r\n            return {\r\n                ...state,\r\n                newMessageText: action.newText\r\n            };\r\n        }\r\n        case SEND_MESSAGE: {\r\n            let body = state.newMessageText;\r\n            if (body !== \"\") {\r\n                return {\r\n                    ...state,\r\n                    newMessageText: \"\",\r\n                    messagesData: [...state.messagesData, {id: 6, message: body}]\r\n                }\r\n            } else {\r\n                return state\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\ntype ActionTypes = messageAC | updateMessageAC\r\nexport type messageAC = ReturnType<typeof sendMessageCreator>\r\nexport const sendMessageCreator = (newText: string) => ({type: SEND_MESSAGE, newText} as const)\r\n\r\nexport type updateMessageAC = ReturnType<typeof updateNewMessageBodyCreator>\r\nexport const updateNewMessageBodyCreator = (newText: string) => ({type: UPDATE_NEW_MESSAGE_TEXT, newText} as const)\r\n\r\n\r\nexport default dialogReducer;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype dialogsType = {\r\n    name: string\r\n    id: number\r\n    image: string\r\n}\r\n\r\nconst DialogItem = (props:dialogsType) => {\r\n    const path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={style.containerDialog}>\r\n\r\n            <NavLink to={path} activeClassName={style.active} className={style.dialogsStyle}>\r\n                 <img src={props.image} className={style.imageDialog}/>\r\n                <div> {props.name}</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from './../Dialogs.module.css'\r\n\r\n\r\ntype messageType = {\r\n    message: string\r\n}\r\n\r\n\r\nconst Message: React.FC<messageType> = (props) => {\r\n    return (\r\n        <div className={style.messageStyle}>\r\n\r\n            <div className={style.wrapper_style}>\r\n            </div>\r\n\r\n            <div className={style.wrapper}>\r\n\r\n             <div>{props.message} </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Message;","import React, {ChangeEvent, KeyboardEvent} from \"react\";\r\nimport style from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {DialogPropsType} from \"./DialogsContainer\";\r\n\r\n\r\nfunction Dialogs (props: DialogPropsType) {\r\n\r\n\r\n    let dialogsElements = props.dialogPage.dialogsData.map(dialog => <DialogItem key={dialog.id} image={dialog.image} name={dialog.name}\r\n                                                                      id={dialog.id}/>)\r\n\r\n    let messagesElements = props.dialogPage.messagesData.map(messages => <Message key={messages.id} message={messages.message}/>)\r\n\r\n    let newMessageBody = props.dialogPage.newMessageText;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.onSendMessageClick(newMessageBody);\r\n    }\r\n    let onNewMessageChange = (event: ChangeEvent<HTMLTextAreaElement>) => {\r\n        let body = event.target.value;\r\n        props.onNewMessageChange(body);\r\n    }\r\n\r\n    const keyClick = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.charCode === 13) {\r\n            onSendMessageClick()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n            <div className={style.dialogsItem}>\r\n\r\n                {dialogsElements}\r\n\r\n\r\n            </div>\r\n            <div className={style.messages}>\r\n                {messagesElements}\r\n                <div className={style.buttonMessage}>\r\n                    <textarea onChange={onNewMessageChange} onKeyPress={keyClick} placeholder=\"Enter your message\"\r\n                              value={newMessageBody} className={style.textArea}/>\r\n                    <button onClick={onSendMessageClick}>Отправить</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","export enum ACTIONS_TYPE {\r\n    FOLLOW = 'Users/FOLLOW',\r\n    UNFOLLOW = 'Users/UNFOLLOW',\r\n    SET_USERS = 'Users/SET_USERS',\r\n    SET_CURRENT = 'Users/SET_CURRENT',\r\n    SET_TOTAL_COUNT = 'Users/SET_TOTAL_COUNT',\r\n    TOGGLE_FETCHING = 'Users/CHANGE_FETCHING',\r\n    FOLLOWING_PROGRESS = 'Users/FOLLOWING_PROGRESS',\r\n}\r\n\r\nexport type usersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string | null\r\n    photos: { small: string, large: string }\r\n}\r\ntype usersReduceType = {\r\n    users: usersType[],\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n}\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 63,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProgress: [],\r\n}\r\n\r\nexport const usersReducer = (state: usersReduceType = initialState, action: ActionUsersType): usersReduceType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.FOLLOW: {\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: true} : m)}\r\n        }\r\n        case ACTIONS_TYPE.UNFOLLOW: {\r\n            return {...state, users: state.users.map(m => m.id === action.userID ? {...m, followed: false} : m)}\r\n        }\r\n        case ACTIONS_TYPE.SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case ACTIONS_TYPE.SET_CURRENT: {\r\n            return {...state, currentPage: action.page}\r\n        }\r\n        case ACTIONS_TYPE.SET_TOTAL_COUNT: {\r\n            return {...state, totalUserCount: action.totalCount}\r\n        }\r\n        case ACTIONS_TYPE.TOGGLE_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case ACTIONS_TYPE.FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingProgress: action.isFetching\r\n                    ? [...state.followingProgress, action.userId]\r\n                    : state.followingProgress.filter(id=>id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport type ActionUsersType = followACType | unfollowACType | setUsersType | setCurrentPageType\r\n    | setTotalUsersCountType | toggleFetchingType | ToggleFollowingProgressType\r\n\r\nexport type followACType = ReturnType<typeof follow>\r\nexport const follow = (userID: number) => ({type: ACTIONS_TYPE.FOLLOW, userID} as const)\r\n\r\nexport type unfollowACType = ReturnType<typeof unfollow>\r\nexport const unfollow = (userID: number) => ({type: ACTIONS_TYPE.UNFOLLOW, userID: userID} as const)\r\n\r\nexport type setUsersType = ReturnType<typeof setUsers>\r\nexport const setUsers = (users: usersType[]) => ({type: ACTIONS_TYPE.SET_USERS, users} as const)\r\n\r\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\r\nexport const setCurrentPage = (page: number) => ({type: ACTIONS_TYPE.SET_CURRENT, page} as const)\r\n\r\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\r\nexport const setTotalUsersCount = (totalCount: number) => ({type: ACTIONS_TYPE.SET_TOTAL_COUNT, totalCount} as const)\r\n\r\nexport type toggleFetchingType = ReturnType<typeof toggleFetching>\r\nexport const toggleFetching = (isFetching: boolean) => ({type: ACTIONS_TYPE.TOGGLE_FETCHING, isFetching} as const)\r\n\r\nexport type ToggleFollowingProgressType = ReturnType<typeof toggleFollowingProgress>\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({type: ACTIONS_TYPE.FOLLOWING_PROGRESS, isFetching, userId} as const)","import React from \"react\";\r\nimport {dialogReducerType, sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype MapStateDialogType = {\r\n    dialogPage: dialogReducerType\r\n}\r\ntype MapDispatchDialogType = {\r\n    onSendMessageClick: (newMessageBody: string) => void\r\n    onNewMessageChange: (body: string) => void\r\n}\r\nexport type DialogPropsType = MapStateDialogType & MapDispatchDialogType\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogPage: state.dialogPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        onSendMessageClick: (newMessageBody: string) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        },\r\n        onNewMessageChange: (body: string) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\r\nexport default DialogsContainer;","import React from 'react';\r\nimport style from '../Navbar.module.css';\r\n\r\ntype sidebarType = {\r\n    image: string\r\n}\r\n\r\nconst Sidebar = (props:sidebarType) => {\r\n    return (\r\n            <div>\r\n                <div >\r\n                    <img src={props.image} className={style.sidebarImg}/>\r\n                </div>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Sidebar;","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USERS_PROFILE = 'SET-USERS-PROFILE'\r\n\r\nexport type ProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\ntype postDataType = {\r\n    id: number\r\n    message: string\r\n    likeCount: number\r\n}\r\nexport type profileReducerType = {\r\n    postData: Array<postDataType>\r\n    newPostText: string\r\n    profile: ProfileType|null\r\n}\r\n\r\nlet initialState: profileReducerType = {\r\n    postData: [\r\n        {id: 1, message: 'Sosiska', likeCount: 23},\r\n        {id: 2, message: 'REDDISKA', likeCount: 77},\r\n        {id: 3, message: 'Do you want me? ', likeCount: 107},\r\n    ],\r\n    newPostText: '',\r\n    profile: null,\r\n}\r\n\r\nexport const profileReduser = (state: profileReducerType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [{id: new Date().getTime(), message: state.newPostText, likeCount: 0}, ...state.postData],\r\n                newPostText: \"\"\r\n            }\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.postText\r\n            }\r\n        }\r\n        case SET_USERS_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type ActionTypes = addPostACType | newTextACType | setUsersProfileType\r\n\r\nexport type addPostACType = ReturnType<typeof addPostAC>\r\nexport const addPostAC = (postText: string) => ({type: ADD_POST, postText} as const)\r\n\r\nexport type newTextACType = ReturnType<typeof updateNewPostTextAC>\r\nexport const updateNewPostTextAC = (postText: string) => ({type: UPDATE_NEW_POST_TEXT, postText} as const)\r\n\r\nexport type setUsersProfileType = ReturnType<typeof setUsersProfile>\r\nexport const setUsersProfile = (profile: ProfileType|null) => ({type: SET_USERS_PROFILE, profile} as const)\r\n","type imagesDataType = {\r\n    image: string\r\n}\r\nexport type sidebarReducerType = {\r\n    imagesData: Array<imagesDataType>\r\n}\r\n\r\nlet initialState: sidebarReducerType = {\r\n    imagesData: [\r\n        {image: \"https://yt3.ggpht.com/ytc/AKedOLSDfkyRyvD8wZlHqtlKyNqE5H5BqUI2CxqOKU7wAg=s900-c-k-c0x00ffffff-no-rj\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2021/02/mult-ava-instagram-2.jpg\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/12/ava-twitch-32.jpg\"},\r\n        {image: \"https://placepic.ru/wp-content/uploads/2018/01/art-krasivyie-kartinki-Putin-politika-1331294.jpeg\\\"\"},\r\n        {image: \"https://pixelbox.ru/wp-content/uploads/2020/11/ava-maincraft-youtube-76.jpg\"}\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state: sidebarReducerType = initialState, action: ActionTypes) => {\r\n    return state\r\n}\r\n\r\ntype ActionTypes = {}\r\n\r\nexport default sidebarReducer;","const SET_USER_DATA = \"SET-USER-DATA\"\r\nconst SET_PHOTO = \"SET-PHOTO\"\r\n\r\ntype AuthReduceType = {\r\n    id: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n    photo: string|null\r\n}\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    photo: null,\r\n}\r\n\r\nexport const authReducer = (state: AuthReduceType = initialState, action: ActionPropsType): AuthReduceType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {...state, ...action.data, isAuth: true}\r\n        }\r\n        case SET_PHOTO:{\r\n            return {...state, photo:action.photo}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionPropsType = SetPhotoLoginType| SetUserDataType\r\n\r\ntype SetUserDataType = ReturnType<typeof setUsersDataAC>\r\nexport const setUsersDataAC = (id: number,email: string, login: string) => ({type: SET_USER_DATA, data:{id,email,login}} as const)\r\n\r\ntype SetPhotoLoginType = ReturnType<typeof setPhotoLoginAC>\r\nexport const setPhotoLoginAC = (photo: string) => ({type: SET_PHOTO, photo}as const)","import {combineReducers, createStore} from \"redux\";\r\nimport {profileReduser} from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialogs-reduser\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport {usersReducer} from \"./user-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReduser,\r\n    dialogPage: dialogReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport const store = createStore(rootReducer)\r\n\r\n//@ts-ignore\r\nwindow.store= store","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"./SideBar/Sidebar\";\r\nimport {store} from \"../../redux/redux-store\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n  let sidebarElements = store.getState().sidebar.imagesData.map((item) => <Sidebar image={item.image}/>)\r\n\r\n    return (\r\n        <div className={style.nav}>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/profile\" activeClassName={style.active}> Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/users\" activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={style.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n\r\n            <div className={style.friendsSidebar}>\r\n            <h3>FRIENDS </h3>\r\n           <div className={style.sidebarElements}>{sidebarElements}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import * as React from \"react\";\r\nimport {Box, Button, Drawer, List, ListItem} from \"@material-ui/core\";\r\nimport {Menu} from \"@material-ui/icons\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n\r\ntype Anchor = \"left\"\r\n\r\nexport const HeaderMenu = () => {\r\n    const [state, setState] = React.useState({\r\n        left: false,\r\n\r\n    });\r\n\r\n    const toggleDrawer = (anchor: Anchor, open: boolean) => (\r\n        event: React.KeyboardEvent | React.MouseEvent\r\n    ) => {\r\n        if (\r\n            event.type === \"keydown\" &&\r\n            ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n                (event as React.KeyboardEvent).key === \"Shift\")\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setState({...state, [anchor]: open});\r\n    };\r\n\r\n    const list = (anchor: Anchor) => (\r\n        <Box\r\n            style={{backgroundColor:\"#b5c9b3\", height:\"100%\"}}\r\n            sx={{width: 250}}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                <ListItem>\r\n                    <Navbar/>\r\n                </ListItem>\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n                <Button size={'large'} onClick={toggleDrawer(\"left\", true)}> <Menu style={{color:\"white\"}} /> </Button>\r\n                <Drawer\r\n                    anchor={\"left\"}\r\n                    open={state[\"left\"]}\r\n                    onClose={toggleDrawer(\"left\", false)}\r\n                >\r\n                    {list(\"left\")}\r\n                </Drawer>\r\n            </>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/headerImages.adb5c696.png\";","import React from 'react';\r\nimport {AppBar, Button,Toolbar, Typography} from \"@material-ui/core\";\r\nimport {HeaderMenu} from \"./HeaderMenu\";\r\nimport headerImages from \"../../images/headerImages.png\"\r\nimport s from './Header.module.css'\r\n\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: string|null\r\n    photo: string|null\r\n}\r\n\r\nconst Header = (props: HeaderPropsType) => {\r\n    return (\r\n        <AppBar style={{backgroundColor:\"#02988e\"}} position=\"relative\">\r\n            <Toolbar>\r\n                    <HeaderMenu/>\r\n                <Typography variant={\"h3\"} component=\"div\" sx={{flexGrow: 1}}/>\r\n\r\n                {props.isAuth? <div className={s.login}> <img className={s.photoHeader} src={props.photo? props.photo:headerImages}/> {props.login} </div>:<Button color=\"inherit\" style={{color:\"#cc5aa6\", fontWeight:\"bold\"}}>Login</Button>}\r\n            </Toolbar>\r\n        </AppBar>\r\n)\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\nimport {usersType} from \"../redux/user-reducer\";\r\n\r\ntype GetTypeResponseUserAPI = {\r\n    items: usersType[]\r\n    totalCount: number\r\n    error: null\r\n}\r\n\r\ntype PostFollowType = {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: {}\r\n}\r\n\r\nexport const addressAPI = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"8cfe719b-61ef-4519-9519-1e1d9dd44f52\"\r\n    }\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return addressAPI.get<GetTypeResponseUserAPI>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => res.data);\r\n    },\r\n\r\n    unfollowUsers(id: number) {\r\n        return addressAPI.delete<PostFollowType>(`follow/${id}`)\r\n    },\r\n\r\nfollowUsers(id: number) {\r\n        return addressAPI.post<PostFollowType>(`follow/${id}`)\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {addressAPI} from \"../../api/settingAPI\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {setPhotoLoginAC, setUsersDataAC} from \"../../redux/auth-reducer\";\r\nimport {getProfileType} from \"../Profile/ProfileContainer\";\r\n\r\ntype GetTypeLoginUserAPI = {\r\n    resultCode: number\r\n    messages: string[],\r\n    data: {\r\n        id: number\r\n        email: string\r\n        login: string\r\n    }\r\n}\r\ntype MapStateUserType = {\r\n    isAuth: boolean,\r\n    login: string | null,\r\n    photo: string|null\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    setUsersDataAC: (id: number, email: string, login: string) => void\r\n    setPhotoLoginAC: (photo: string) => void\r\n}\r\ntype UsersLoginPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\n\r\nclass HeaderContainer extends React.Component<UsersLoginPropsType> {\r\n\r\n    componentDidMount() {\r\n        addressAPI.get<GetTypeLoginUserAPI>('auth/me', {withCredentials: true})\r\n            .then(response => {\r\n                console.log(response)\r\n                if (response.data.resultCode === 0) {\r\n                    let {id, email, login} = response.data.data;\r\n                    this.props.setUsersDataAC(id, email, login)\r\n                    return response\r\n                }\r\n            })\r\n            .then(res => {\r\n                if (res) {\r\n                    addressAPI.get<getProfileType>('/profile/' + res.data.data.id)\r\n                        .then(response => {\r\n                            this.props.setPhotoLoginAC(response.data.photos.small)\r\n                        })}\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProp = (state: AppStateType): MapStateUserType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        photo: state.auth.photo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProp, {setUsersDataAC, setPhotoLoginAC})(HeaderContainer)","export default __webpack_public_path__ + \"static/media/userImages.8cfeb185.png\";","import React from \"react\";\r\nimport s from \"./Users.module.css\"\r\nimport userImages from \"../../images/userImages.png\"\r\nimport {usersType} from \"../../redux/user-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {userAPI} from \"../../api/settingAPI\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\ntype UsersType = {\r\n    pageSize: number\r\n    users: usersType[]\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n    toggleFollowingProgress: (isFetching: boolean, id: number) => void\r\n    followingProgress: number[]\r\n}\r\n\r\nexport const Users = (props: UsersType) => {\r\n    const photoUser = props.users.filter(f => f.photos.small !== null)\r\n    const notPhotoUser = props.users.filter(f => f.photos.small == null)\r\n    const usersDisplay = [...photoUser, ...notPhotoUser]\r\n\r\n    const followUser = (id: number) => {\r\n        props.toggleFollowingProgress(true, id)\r\n        userAPI.followUsers(id).then(res => {\r\n            if (res.data.resultCode === 0) {\r\n                props.follow(id)\r\n            }\r\n            props.toggleFollowingProgress(false, id)\r\n        })\r\n    }\r\n    const unfollowUser = (id: number) => {\r\n        props.toggleFollowingProgress(true, id)\r\n        userAPI.unfollowUsers(id)\r\n            .then(res => {\r\n                if (res.data.resultCode === 0) {\r\n                    props.unfollow(id)\r\n                }\r\n                props.toggleFollowingProgress(false, id)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={s.usersContainer}>\r\n            {usersDisplay.map(u => <div key={u.id}>\r\n                <div className={s.user}>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small !== null ? u.photos.small : userImages} className={s.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.name}>\r\n                        <span className={s.span}>{u.name}</span>\r\n                    </div>\r\n\r\n                    <div>\r\n                        {u.followed\r\n                            ? <Button variant={\"outlined\"} size={'small'} color={\"error\"} disabled={props.followingProgress.some(id => id === u.id)} onClick={() => {\r\n                                unfollowUser(u.id)\r\n                            }}>Unfollow</Button>\r\n\r\n                            : <Button variant={\"contained\"} size={'small'} disabled={props.followingProgress.some(id => id === u.id)} onClick={() => {\r\n                                followUser(u.id)\r\n                            }}>Follow</Button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n            }\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/preloader.3fb26d9b.gif\";","import React from \"react\";\r\nimport preloader from \"../../images/preloader.gif\";\r\n\r\nexport const Preloader = () => {\r\n\r\n    let divStyle = {\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n    }\r\n\r\n    let imgStyle = {\r\n        width: \"80px\",\r\n        height: \"100px\",\r\n    }\r\n    return <div style={divStyle}> <img style={imgStyle} src={preloader}/> </div>\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport React from \"react\";\r\nimport {Users} from \"./Users\";\r\nimport s from \"./Users.module.css\";\r\nimport {Preloader} from \"../common/Preloader\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    toggleFetching, toggleFollowingProgress, unfollow,\r\n    usersType\r\n} from \"../../redux/user-reducer\";\r\nimport {userAPI} from \"../../api/settingAPI\";\r\nimport {Pagination} from \"@material-ui/core\";\r\n\r\ntype MapStateUserType = {\r\n    users: usersType[]\r\n    pageSize: number\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n}\r\nexport type MapDispatchPropsType = {\r\n    follow: (usersID: number) => void\r\n    unfollow: (usersID: number) => void\r\n    setUsers: (users: usersType[]) => void\r\n    setCurrentPage: (numberPage: number) => void\r\n    setTotalUsersCount: (totalUsersCount: number) => void\r\n    toggleFetching: (isFetching: boolean) => void\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => void\r\n}\r\ntype UsersPropsType = MapStateUserType & MapDispatchPropsType\r\n\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType, {}> {\r\n\r\n    componentDidMount() {\r\n        this.props.toggleFetching(true);\r\n\r\n        userAPI.getUsers(this.props.currentPage, this.props.pageSize)\r\n            .then(response => {\r\n                this.props.setUsers(response.items)\r\n                this.props.setTotalUsersCount(response.totalCount);\r\n                this.props.toggleFetching(false);\r\n            });\r\n    }\r\n\r\n    onPageChanged(pageNumber: number) {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleFetching(true)\r\n        userAPI.getUsers(pageNumber, this.props.pageSize)\r\n            .then(response => {\r\n                this.props.toggleFetching(false)\r\n                this.props.setUsers(response.items);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let pagesCount = Math.ceil(this.props.totalUserCount / this.props.pageSize)\r\n\r\n        return (\r\n            <div>\r\n                <div className={s.paginator}>\r\n                    <Pagination color={\"primary\"} onChange={(event, page) => {\r\n                        this.onPageChanged(page)\r\n                    }}\r\n                                count={pagesCount} variant={'text'} shape=\"rounded\" defaultPage={1} siblingCount={22} size={\"small\"}/>\r\n                </div>\r\n                <>\r\n                        {this.props.isFetching ? <Preloader/>\r\n                            : null}\r\n\r\n                    <Users\r\n                        pageSize={this.props.pageSize}\r\n                        users={this.props.users}\r\n                        unfollow={this.props.unfollow}\r\n                        follow={this.props.follow}\r\n                        toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                        followingProgress={this.props.followingProgress}\r\n                    />\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateUserType => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUserCount: state.usersPage.totalUserCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingProgress: state.usersPage.followingProgress,\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n//     return {\r\n//         follow: (usersID: number) => {\r\n//             dispatch(followAC(usersID))\r\n//         },\r\n//\r\n//         unfollow: (usersID: number) => {\r\n//             dispatch(unfollowAC(usersID))\r\n//         },\r\n//         setUsers: (users: usersType[]) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (numberPage: number) => {\r\n//             dispatch(setCurrentPageAC(numberPage))\r\n//         },\r\n//         setTotalUsersCount: (totalUsersCount: number) => {\r\n//             dispatch(setTotalUsersCountAC(totalUsersCount))\r\n//         },\r\n//         toggleFetching: (isFetching: boolean) => {\r\n//             dispatch(toggleFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps, {\r\n    follow,\r\n    unfollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleFetching,\r\n    toggleFollowingProgress\r\n})(UsersContainer)\r\n","import React from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport {ProfileType} from \"../../../redux/profile-reducer\";\r\n\r\ntype ProfileInfoComponentType = {\r\n    profile: ProfileType|null\r\n}\r\n\r\nconst ProfileInfo = (props: ProfileInfoComponentType) => {\r\n    return (\r\n        <div>\r\n            {/*<div>*/}\r\n            {/*    <img className={style.img} src=\"https://lifeo.ru/wp-content/uploads/vesna-100-min.jpg\"/>*/}\r\n            {/*</div>*/}\r\n            <div>\r\n                <div>\r\n                    <img src={props.profile?.photos.large}/>\r\n                    <div>{props.profile?.fullName}</div>\r\n                    <div>{props.profile?.contacts.instagram}</div>\r\n                    <div>{props.profile?.contacts.vk}</div>\r\n                    <div>{props.profile?.contacts.github}</div>\r\n                    <div>{`looking for a job:  ${props.profile?.lookingForAJob && \"Yes\"}`}</div>\r\n                    <div>{`Job Description:  ${props.profile?.lookingForAJobDescription}`}</div>\r\n<br/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likeCount: number\r\n}\r\n\r\n\r\nconst Post = (props: PropsType) => {\r\n    return (\r\n        <div className={style.item}>\r\n            <img src=\"https://bizlit.com.ua/image/data/pictures/YeDYzSR-10apkm4.png\"/>\r\n            <div className={style.messagePost}>\r\n                {props.message}\r\n\r\n                <div className={style.likeType}>\r\n                    <span className={style.countLike}>{props.likeCount}</span>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {KeyboardEvent} from 'react';\r\nimport style from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {PostPropsType} from \"./MyPostsContainer\";\r\n\r\nconst MyPosts = (props: PostPropsType) => {\r\n\r\n    let postsElements = props.profilePage.postData.map(post => <Post message={post.message} likeCount={post.likeCount}/>)\r\n\r\n    let newPostElement = React.createRef<HTMLTextAreaElement>();\r\n\r\n    let addPosts = () => {\r\n        let text = newPostElement.current?.value;\r\n       text && props.addPosts(text);\r\n        // let text = newPostElement.current?.value;\r\n        // text && props.dispatch(addPostActionCreator(text))\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current?.value;\r\n        text && props.onPostChange(text)\r\n        // text && props.dispatch(updateNewPostTextActionCreator(text))\r\n    }\r\n\r\n    const keyClick = (event: KeyboardEvent<HTMLTextAreaElement>) => {\r\n        if (event.charCode === 13) {\r\n            addPosts()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3> My posts </h3>\r\n            <div>\r\n                <textarea onKeyPress={keyClick} onChange={onPostChange} ref={newPostElement} value={props.profilePage.newPostText}/>\r\n            </div>\r\n            <div>\r\n                <button onClick={addPosts}>Add post</button>\r\n            </div>\r\n\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostAC, profileReducerType, updateNewPostTextAC} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateProfileType = {\r\n    profilePage: profileReducerType\r\n}\r\ntype MapDispatchPropsType = {\r\n    addPosts: (text: string) => void\r\n    onPostChange: (text: string) => void\r\n}\r\nexport type PostPropsType = MapStateProfileType & MapDispatchPropsType\r\n\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStateProfileType => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPosts: (text: string) => {\r\n            text && dispatch(addPostAC(text));\r\n        },\r\n        onPostChange: (text: string) => {\r\n            text && dispatch(updateNewPostTextAC(text))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./myPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux/profile-reducer\";\r\n\r\ntype ProfileComponentType = {\r\n    profile: ProfileType|null\r\n}\r\n\r\nexport const Profile = (props:ProfileComponentType) => {\r\n\r\n    return <div>\r\n        <ProfileInfo profile={props.profile}/>\r\n        <MyPostsContainer/>\r\n    </div>\r\n}\r\n\r\n","import React from 'react';\r\nimport {Profile} from \"./Profile\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {ProfileType, setUsersProfile} from \"../../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {addressAPI} from \"../../api/settingAPI\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport type getProfileType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string,\r\n        website: null,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: {\r\n        small: string\r\n        large: string\r\n    }\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfileType | null\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\n\r\ntype mapDispatchToPropsType = {\r\n    setUsersProfile: (profile: getProfileType | null) => void\r\n}\r\n\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\ntype OwnPropsType = mapDispatchToPropsType & mapStateToPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if(!userId){\r\n            userId = \"2\";\r\n        }\r\n        addressAPI.get<getProfileType>(`/profile/` + userId)\r\n            .then(response => {\r\n                this.props.setUsersProfile(response.data)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props} profile={this.props.profile}/>\r\n            </div>)\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nconst WithUrlDataProfileContainer = withRouter(ProfileContainer)\r\n\r\nexport default connect(mapStateToProps, {setUsersProfile})(WithUrlDataProfileContainer);","import React from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport WithUrlDataProfileContainer from \"./components/Profile/ProfileContainer\";\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n                    <Grid container>\r\n                        <Grid item xs={12} style={{border:\"1px solid\"}}>\r\n                            <HeaderContainer/>\r\n                        </Grid>\r\n                        <Grid item xs={12} style={{border:\"1px solid\", backgroundColor:\"#ecffea\"}}>\r\n\r\n                            <Route exact path={'/'} render={() => <Redirect to={'/profile'}/>}/>\r\n\r\n                            <Route path=\"/dialogs\"\r\n                                   render={() => <DialogsContainer/>}/>\r\n\r\n                            <Route path=\"/profile/:userId?\"\r\n                                   render={() => <WithUrlDataProfileContainer/>}/>\r\n\r\n                            <Route path=\"/users\"\r\n                                   render={() => <UsersContainer/>}/>\r\n                        </Grid>\r\n                    </Grid>\r\n        </HashRouter>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport React from \"react\";\nimport {store} from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n\n\nlet rerenderEntireTree = () => {\n    ReactDOM.render(\n            <Provider store={store}>\n                <App />\n            </Provider>\n        , document.getElementById('root')\n    );\n}\nrerenderEntireTree()\n\nstore.subscribe(()=>{\n    rerenderEntireTree()\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2ljic\",\"dialogsItem\":\"Dialogs_dialogsItem__dkL1w\",\"messages\":\"Dialogs_messages__3CLYv\",\"dialogsStyle\":\"Dialogs_dialogsStyle__1WKEc\",\"active\":\"Dialogs_active__cWjhb\",\"wrapper\":\"Dialogs_wrapper__QWmPS\",\"wrapper_style\":\"Dialogs_wrapper_style__jqb8Y\",\"messageStyle\":\"Dialogs_messageStyle__3rO8r\",\"imageDialog\":\"Dialogs_imageDialog__3bOZI\",\"buttonMessage\":\"Dialogs_buttonMessage__Soa9S\",\"textArea\":\"Dialogs_textArea__3DOs-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Navbar_item__3NmC5\",\"active\":\"Navbar_active__Yhrhi\",\"friendsSidebar\":\"Navbar_friendsSidebar__3a2By\",\"sidebarImg\":\"Navbar_sidebarImg__31U-u\",\"sidebarElements\":\"Navbar_sidebarElements__1KLTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1uFet\",\"selectedPage\":\"Users_selectedPage__2yzV4\",\"usersContainer\":\"Users_usersContainer__16uvB\",\"user\":\"Users_user__1G7hI\",\"name\":\"Users_name__u2WlR\",\"paginator\":\"Users_paginator__8Gq43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Post_content__c9gD9\",\"item\":\"Post_item__bSl-J\",\"messagePost\":\"Post_messagePost__3uuyM\",\"countLike\":\"Post_countLike__S3MtX\",\"likeType\":\"Post_likeType__3kNlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__H0yV5\",\"photoHeader\":\"Header_photoHeader__1LYeP\",\"login\":\"Header_login___9nR7\"};"],"sourceRoot":""}